CREATE TABLE BXM_APP (
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 BXM_APP_DESC VARCHAR2(512) NULL,
	 BXM_APP_TYPE_CD VARCHAR2(10) NULL,
	 BXM_APP_SHARED_YN VARCHAR2(1) NULL,
	 BXM_REF_APP_LIST VARCHAR2(1024) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 BIZ_PRE_PROC_NM VARCHAR2(1024) NULL,
	 BIZ_POST_PROC_NM VARCHAR2(1024) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_APP ON BXM_APP 
( 
	 BXM_APP_ID ASC
);

ALTER TABLE BXM_APP ADD CONSTRAINT PK_BXM_APP PRIMARY KEY USING INDEX PK_BXM_APP;

COMMENT ON TABLE BXM_APP IS 'BXM어플리케이션';
COMMENT ON COLUMN BXM_APP.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_APP.BXM_APP_DESC IS 'BXM어플리케이션설명';
COMMENT ON COLUMN BXM_APP.BXM_APP_TYPE_CD IS 'BXM 어플리케이션 타입 코드';
COMMENT ON COLUMN BXM_APP.BXM_APP_SHARED_YN IS 'BXM 어플리케이션 공유 여부';
COMMENT ON COLUMN BXM_APP.BXM_REF_APP_LIST IS 'BXM 참조 어플리케이션 목록';
COMMENT ON COLUMN BXM_APP.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_APP.BIZ_PRE_PROC_NM IS '업무선처리명';
COMMENT ON COLUMN BXM_APP.BIZ_POST_PROC_NM IS '업무후처리명';
COMMENT ON COLUMN BXM_APP.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_APP.REG_OCCUR_DTTM IS '등록발생일시';
COMMENT ON COLUMN BXM_APP.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_APP.MODIFY_OCCUR_DTTM IS '변경발생일시';

CREATE TABLE BXM_APP_AUTH_USER (
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 USER_ID VARCHAR2(32) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_APP_AUTH_USER ON BXM_APP_AUTH_USER 
( 
	 BXM_APP_ID ASC,
	 USER_ID ASC
);

ALTER TABLE BXM_APP_AUTH_USER ADD CONSTRAINT PK_BXM_APP_AUTH_USER PRIMARY KEY USING INDEX PK_BXM_APP_AUTH_USER;

COMMENT ON TABLE BXM_APP_AUTH_USER IS 'BXM어플리케이션권한';
COMMENT ON COLUMN BXM_APP_AUTH_USER.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_APP_AUTH_USER.USER_ID IS '사용자ID';

CREATE TABLE BXM_APP_RES (
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 RESOURCE_FQN VARCHAR2(1024) NOT NULL,
	 RESOURCE_DESC VARCHAR2(512) NULL,
	 RESOURCE_TYPE_CD VARCHAR2(1) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_APP_RES ON BXM_APP_RES 
( 
	 BXM_APP_ID ASC,
	 RESOURCE_FQN ASC
);

ALTER TABLE BXM_APP_RES ADD CONSTRAINT PK_BXM_APP_RES PRIMARY KEY USING INDEX PK_BXM_APP_RES;

COMMENT ON TABLE BXM_APP_RES IS 'BXM어플리케이션리소스';
COMMENT ON COLUMN BXM_APP_RES.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_APP_RES.RESOURCE_FQN IS '리소스FQN';
COMMENT ON COLUMN BXM_APP_RES.RESOURCE_DESC IS '리소스 설명';
COMMENT ON COLUMN BXM_APP_RES.RESOURCE_TYPE_CD IS '리소스타입코드';
COMMENT ON COLUMN BXM_APP_RES.USE_YN IS '사용 여부';
COMMENT ON COLUMN BXM_APP_RES.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_APP_RES.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_APP_RES.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_APP_RES.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_APP_RES_AUTH_USER (
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 RESOURCE_FQN VARCHAR2(1024) NOT NULL,
	 USER_ID VARCHAR2(32) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_APP_RES_AUTH_USER ON BXM_APP_RES_AUTH_USER 
( 
	 BXM_APP_ID ASC,
	 RESOURCE_FQN ASC,
	 USER_ID ASC
);

ALTER TABLE BXM_APP_RES_AUTH_USER ADD CONSTRAINT PK_BXM_APP_RES_AUTH_USER PRIMARY KEY USING INDEX PK_BXM_APP_RES_AUTH_USER;

COMMENT ON TABLE BXM_APP_RES_AUTH_USER IS 'BXM어플리케이션리소스별권한';
COMMENT ON COLUMN BXM_APP_RES_AUTH_USER.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_APP_RES_AUTH_USER.RESOURCE_FQN IS '리소스FQN';
COMMENT ON COLUMN BXM_APP_RES_AUTH_USER.USER_ID IS '사용자ID';

CREATE TABLE BXM_BATCH_URL (
	 BATCH_URL VARCHAR2(512) NOT NULL,
	 BATCH_URL_DESC VARCHAR2(512) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 BATCH_URL_TYPE_CD VARCHAR2(1) NULL,
	 URL_TYPE_CD VARCHAR2(1) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_BATCH_URL ON BXM_BATCH_URL 
( 
	 BATCH_URL ASC
);

ALTER TABLE BXM_BATCH_URL ADD CONSTRAINT PK_BXM_BATCH_URL PRIMARY KEY USING INDEX PK_BXM_BATCH_URL;

COMMENT ON TABLE BXM_BATCH_URL IS 'BXM배치URL';
COMMENT ON COLUMN BXM_BATCH_URL.BATCH_URL IS '배치URL';
COMMENT ON COLUMN BXM_BATCH_URL.BATCH_URL_DESC IS '배치 URL 설명';
COMMENT ON COLUMN BXM_BATCH_URL.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_BATCH_URL.BATCH_URL_TYPE_CD IS '배치URL유형코드';
COMMENT ON COLUMN BXM_BATCH_URL.URL_TYPE_CD IS 'URL유형코드';
COMMENT ON COLUMN BXM_BATCH_URL.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_BATCH_URL.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_BATCH_URL.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_BATCH_URL.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_COM_MSG (
	 MSG_ID VARCHAR2(9) NOT NULL,
	 LANG_CD VARCHAR2(2) NOT NULL,
	 BASIC_MSG_CTT VARCHAR2(4000) NULL,
	 DETAIL_MSG_CTT VARCHAR2(4000) NULL,
	 MSG_BIZ_GRP_ID VARCHAR2(3) NULL,
	 MSG_TYPE_CD VARCHAR2(1) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_COM_MSG ON BXM_COM_MSG 
( 
	 MSG_ID ASC,
	 LANG_CD ASC
);

ALTER TABLE BXM_COM_MSG ADD CONSTRAINT PK_BXM_COM_MSG PRIMARY KEY USING INDEX PK_BXM_COM_MSG;

COMMENT ON TABLE BXM_COM_MSG IS 'BXM공통메시지';
COMMENT ON COLUMN BXM_COM_MSG.MSG_ID IS '메시지ID';
COMMENT ON COLUMN BXM_COM_MSG.LANG_CD IS '언어코드';
COMMENT ON COLUMN BXM_COM_MSG.BASIC_MSG_CTT IS '기본메시지내용';
COMMENT ON COLUMN BXM_COM_MSG.DETAIL_MSG_CTT IS '상세메시지내용';
COMMENT ON COLUMN BXM_COM_MSG.MSG_BIZ_GRP_ID IS '메시지업무그룹ID';
COMMENT ON COLUMN BXM_COM_MSG.MSG_TYPE_CD IS '메시지타입코드';
COMMENT ON COLUMN BXM_COM_MSG.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_COM_MSG.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_COM_MSG.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_COM_MSG.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_COM_CFG (
	 CFG_KEY VARCHAR2(128) NOT NULL,
	 CFG_VAL VARCHAR2(4000) NULL,
	 CFG_DESC VARCHAR2(512) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_COM_CFG ON BXM_COM_CFG 
( 
	 CFG_KEY ASC
);

ALTER TABLE BXM_COM_CFG ADD CONSTRAINT PK_BXM_COM_CFG PRIMARY KEY USING INDEX PK_BXM_COM_CFG;

COMMENT ON TABLE BXM_COM_CFG IS 'BXM설정';
COMMENT ON COLUMN BXM_COM_CFG.CFG_KEY IS '설정키';
COMMENT ON COLUMN BXM_COM_CFG.CFG_VAL IS '설정값';
COMMENT ON COLUMN BXM_COM_CFG.CFG_DESC IS '설정설명';
COMMENT ON COLUMN BXM_COM_CFG.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_COM_CFG.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_COM_CFG.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_COM_CFG.MODIFY_OCCUR_DTTM IS '변경 발생일시';

CREATE TABLE BXM_DEPLOY_BIN (
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 DEPLOY_ID VARCHAR2(40) NOT NULL,
	 DEPLOY_BIN BLOB NULL
);

CREATE UNIQUE INDEX PK_BXM_DEPLOY_BIN ON BXM_DEPLOY_BIN 
( 
	 BXM_APP_ID ASC
);

ALTER TABLE BXM_DEPLOY_BIN ADD CONSTRAINT PK_BXM_DEPLOY_BIN PRIMARY KEY USING INDEX PK_BXM_DEPLOY_BIN;

COMMENT ON TABLE BXM_DEPLOY_BIN IS 'BXM배포바이너리';
COMMENT ON COLUMN BXM_DEPLOY_BIN.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_DEPLOY_BIN.DEPLOY_ID IS '배포 ID';
COMMENT ON COLUMN BXM_DEPLOY_BIN.DEPLOY_BIN IS '배포 바이너리';

CREATE TABLE BXM_DEPLOY_VALIDATE_IP (
	 VALID_IP VARCHAR2(30) NOT NULL,
	 VALID_IP_DESC VARCHAR2(512) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEPLOY_VALIDATE_IP ON BXM_DEPLOY_VALIDATE_IP 
( 
	 VALID_IP ASC
);

ALTER TABLE BXM_DEPLOY_VALIDATE_IP ADD CONSTRAINT PK_BXM_DEPLOY_VALIDATE_IP PRIMARY KEY USING INDEX PK_BXM_DEPLOY_VALIDATE_IP;

COMMENT ON TABLE BXM_DEPLOY_VALIDATE_IP IS 'BXM배포검증IP';
COMMENT ON COLUMN BXM_DEPLOY_VALIDATE_IP.VALID_IP IS '검증IP';
COMMENT ON COLUMN BXM_DEPLOY_VALIDATE_IP.VALID_IP_DESC IS '검증IP설명';
COMMENT ON COLUMN BXM_DEPLOY_VALIDATE_IP.USE_YN IS '사용 여부';
COMMENT ON COLUMN BXM_DEPLOY_VALIDATE_IP.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_DEPLOY_VALIDATE_IP.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_DEPLOY_VALIDATE_IP.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_DEPLOY_VALIDATE_IP.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_DEPLOY_HIST (
	 BXM_INSTANCE_ID VARCHAR2(40) NOT NULL,
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 DEPLOY_ID VARCHAR2(40) NOT NULL,
	 MNG_SVC_URL VARCHAR2(512) NULL,
	 MNG_SVC_ENV_PROPS VARCHAR2(1024) NULL,
	 MNG_OBJ_DOMAIN VARCHAR2(32) NULL,
	 MNG_OBJ_PROPS VARCHAR2(1024) NULL,
	 NODE_NAME VARCHAR2(128) NOT NULL,
	 CONTAINER_NM VARCHAR2(128) NULL,
	 CONTEXT_NM VARCHAR2(128) NOT NULL,
	 BXM_APP_DESC VARCHAR2(512) NULL,
	 BXM_APP_STAGE_CD VARCHAR2(2) NULL,
	 BXM_APP_SHARED_YN VARCHAR2(1) NOT NULL,
	 BXM_APP_LOG_LV VARCHAR2(10) NOT NULL,
	 REF_BXM_APP_ID_LIST VARCHAR2(1024) NULL,
	 DEPLOY_ING_YN VARCHAR2(1) NOT NULL,
	 DEPLOY_SUCCESS_YN VARCHAR2(1) NOT NULL,
	 DEPLOY_PROC_METHOD_NM VARCHAR2(40) NOT NULL,
	 DEPLOY_FILE_NM VARCHAR2(512) NULL,
	 PRE_DEPLOY_TIMEOUT_MILLS NUMBER NULL,
	 PRE_DEPLOY_VALID_IP_LIST VARCHAR2(1024) NULL,
	 DEPLOY_ERR_STACKTRACE VARCHAR2(4000) NULL,
	 DEPLOY_ERR_MSG_CTT VARCHAR2(4000) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEPLOY_HIST ON BXM_DEPLOY_HIST 
( 
	 BXM_INSTANCE_ID ASC,
	 BXM_APP_ID ASC,
	 DEPLOY_ID ASC
);

ALTER TABLE BXM_DEPLOY_HIST ADD CONSTRAINT PK_BXM_DEPLOY_HIST PRIMARY KEY USING INDEX PK_BXM_DEPLOY_HIST;

COMMENT ON TABLE BXM_DEPLOY_HIST IS 'BXM배포이력';
COMMENT ON COLUMN BXM_DEPLOY_HIST.BXM_INSTANCE_ID IS 'BXM인스턴스ID';
COMMENT ON COLUMN BXM_DEPLOY_HIST.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_DEPLOY_HIST.DEPLOY_ID IS '배포ID';
COMMENT ON COLUMN BXM_DEPLOY_HIST.MNG_SVC_URL IS '관리서비스URL';
COMMENT ON COLUMN BXM_DEPLOY_HIST.MNG_SVC_ENV_PROPS IS '관리서비스환경프로퍼티';
COMMENT ON COLUMN BXM_DEPLOY_HIST.MNG_OBJ_DOMAIN IS '관리OBJ도메인';
COMMENT ON COLUMN BXM_DEPLOY_HIST.MNG_OBJ_PROPS IS '관리OBJ프로퍼티';
COMMENT ON COLUMN BXM_DEPLOY_HIST.NODE_NAME IS 'NODE 명';
COMMENT ON COLUMN BXM_DEPLOY_HIST.CONTAINER_NM IS '컨테이너명';
COMMENT ON COLUMN BXM_DEPLOY_HIST.CONTEXT_NM IS '컨텍스트명';
COMMENT ON COLUMN BXM_DEPLOY_HIST.BXM_APP_DESC IS 'BXM어플리케이션설명';
COMMENT ON COLUMN BXM_DEPLOY_HIST.BXM_APP_STAGE_CD IS 'BXM어플리케이션스테이지코드';
COMMENT ON COLUMN BXM_DEPLOY_HIST.BXM_APP_SHARED_YN IS 'BXM어플리케이션공유여부';
COMMENT ON COLUMN BXM_DEPLOY_HIST.BXM_APP_LOG_LV IS 'BXM어플리케이션로그레벨 ';
COMMENT ON COLUMN BXM_DEPLOY_HIST.REF_BXM_APP_ID_LIST IS '참조 BXM어플리케이션ID 목록';
COMMENT ON COLUMN BXM_DEPLOY_HIST.DEPLOY_ING_YN IS '배포 진행중 여부';
COMMENT ON COLUMN BXM_DEPLOY_HIST.DEPLOY_SUCCESS_YN IS '배포 성공 여부';
COMMENT ON COLUMN BXM_DEPLOY_HIST.DEPLOY_PROC_METHOD_NM IS '배포처리방법명';
COMMENT ON COLUMN BXM_DEPLOY_HIST.DEPLOY_FILE_NM IS '배포파일명';
COMMENT ON COLUMN BXM_DEPLOY_HIST.PRE_DEPLOY_TIMEOUT_MILLS IS 'PRE DEPLOY 타임아웃 밀리초';
COMMENT ON COLUMN BXM_DEPLOY_HIST.PRE_DEPLOY_VALID_IP_LIST IS '선배포검증IP목록';
COMMENT ON COLUMN BXM_DEPLOY_HIST.DEPLOY_ERR_STACKTRACE IS '배포 오류 STACKTRACE';
COMMENT ON COLUMN BXM_DEPLOY_HIST.DEPLOY_ERR_MSG_CTT IS '배포 오류 메시지내용';
COMMENT ON COLUMN BXM_DEPLOY_HIST.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_DEPLOY_HIST.REG_OCCUR_DTTM IS '등록 발생 일시';

CREATE TABLE BXM_RUNTIME_INSTANCE (
	 BXM_INSTANCE_ID VARCHAR2(40) NOT NULL,
	 BXM_INSTANCE_NM VARCHAR2(512) NOT NULL,
	 BXM_INSTANCE_DESC VARCHAR2(1024) NULL,
	 BXM_INSTANCE_PID VARCHAR2(42) NOT NULL,
	 MNG_SVC_URL VARCHAR2(512) NULL,
	 MNG_SVC_ENV_PROPS VARCHAR2(1024) NULL,
	 MNG_OBJ_DOMAIN VARCHAR2(32) NULL,
	 MNG_OBJ_PROPS VARCHAR2(1024) NULL,
	 ENV_PROPS VARCHAR2(1024) NULL,
	 AUTO_DEPLOY_YN VARCHAR2(1) NOT NULL,
	 LOADING_MODE_CD VARCHAR2(2) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_RUNTIME_INSTANCE ON BXM_RUNTIME_INSTANCE 
( 
	 BXM_INSTANCE_ID ASC
);

ALTER TABLE BXM_RUNTIME_INSTANCE ADD CONSTRAINT PK_BXM_RUNTIME_INSTANCE PRIMARY KEY USING INDEX PK_BXM_RUNTIME_INSTANCE;

COMMENT ON TABLE BXM_RUNTIME_INSTANCE IS 'BXM런타임인스턴스';
COMMENT ON COLUMN BXM_RUNTIME_INSTANCE.BXM_INSTANCE_ID IS 'BXM인스턴스ID';
COMMENT ON COLUMN BXM_RUNTIME_INSTANCE.BXM_INSTANCE_NM IS 'BXM인스턴스명';
COMMENT ON COLUMN BXM_RUNTIME_INSTANCE.BXM_INSTANCE_DESC IS 'BXM 인스턴스 설명';
COMMENT ON COLUMN BXM_RUNTIME_INSTANCE.BXM_INSTANCE_PID IS 'BXM 인스턴스 PID';
COMMENT ON COLUMN BXM_RUNTIME_INSTANCE.MNG_SVC_URL IS '관리서비스URL';
COMMENT ON COLUMN BXM_RUNTIME_INSTANCE.MNG_SVC_ENV_PROPS IS '관리서비스환경프로퍼티';
COMMENT ON COLUMN BXM_RUNTIME_INSTANCE.MNG_OBJ_DOMAIN IS '관리OBJ도메인';
COMMENT ON COLUMN BXM_RUNTIME_INSTANCE.MNG_OBJ_PROPS IS '관리OBJ프로퍼티';
COMMENT ON COLUMN BXM_RUNTIME_INSTANCE.ENV_PROPS IS '환경 프로퍼티';
COMMENT ON COLUMN BXM_RUNTIME_INSTANCE.AUTO_DEPLOY_YN IS '자동 배포 여부';
COMMENT ON COLUMN BXM_RUNTIME_INSTANCE.LOADING_MODE_CD IS '로딩 모드 코드';

CREATE TABLE BXM_RUNTIME_APP (
	 BXM_INSTANCE_ID VARCHAR2(40) NOT NULL,
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 BXM_APP_NM VARCHAR2(512) NOT NULL,
	 BXM_APP_DESC VARCHAR2(512) NULL,
	 BXM_APP_STAGE_CD VARCHAR2(2) NOT NULL,
	 BXM_APP_SHARED_YN VARCHAR2(1) NOT NULL,
	 BXM_APP_LOG_LV_NM VARCHAR2(10) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_RUNTIME_APP ON BXM_RUNTIME_APP 
( 
	 BXM_INSTANCE_ID ASC,
	 BXM_APP_ID ASC
);

ALTER TABLE BXM_RUNTIME_APP ADD CONSTRAINT PK_BXM_RUNTIME_APP PRIMARY KEY USING INDEX PK_BXM_RUNTIME_APP;

COMMENT ON TABLE BXM_RUNTIME_APP IS 'BXM런타임어플리케이션';
COMMENT ON COLUMN BXM_RUNTIME_APP.BXM_INSTANCE_ID IS 'BXM인스턴스ID';
COMMENT ON COLUMN BXM_RUNTIME_APP.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_RUNTIME_APP.BXM_APP_NM IS 'BXM어플리케이션명';
COMMENT ON COLUMN BXM_RUNTIME_APP.BXM_APP_DESC IS 'BXM어플리케이션설명';
COMMENT ON COLUMN BXM_RUNTIME_APP.BXM_APP_STAGE_CD IS 'BXM어플리케이션스테이지코드';
COMMENT ON COLUMN BXM_RUNTIME_APP.BXM_APP_SHARED_YN IS 'BXM어플리케이션공유여부';
COMMENT ON COLUMN BXM_RUNTIME_APP.BXM_APP_LOG_LV_NM IS 'BXM어플리케이션로그레벨명';

CREATE TABLE BXM_RUNTIME_SVC (
	 BXM_INSTANCE_ID VARCHAR2(40) NOT NULL,
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 BXM_SVC_ID VARCHAR2(40) NOT NULL,
	 SVC_NM VARCHAR2(512) NOT NULL,
	 OP_NM VARCHAR2(512) NOT NULL,
	 CLASS_FQN VARCHAR2(1024) NOT NULL,
	 INPUT_FQN VARCHAR2(1024) NOT NULL,
	 OUTPUT_FQN VARCHAR2(1024) NOT NULL,
	 OP_DESC VARCHAR2(512) NULL
);

CREATE UNIQUE INDEX PK_BXM_RUNTIME_SVC ON BXM_RUNTIME_SVC 
( 
	 BXM_INSTANCE_ID ASC,
	 BXM_APP_ID ASC,
	 BXM_SVC_ID ASC
);

ALTER TABLE BXM_RUNTIME_SVC ADD CONSTRAINT PK_BXM_RUNTIME_SVC PRIMARY KEY USING INDEX PK_BXM_RUNTIME_SVC;

COMMENT ON TABLE BXM_RUNTIME_SVC IS 'BXM런타임서비스';
COMMENT ON COLUMN BXM_RUNTIME_SVC.BXM_INSTANCE_ID IS 'BXM인스턴스ID';
COMMENT ON COLUMN BXM_RUNTIME_SVC.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_RUNTIME_SVC.BXM_SVC_ID IS 'BXM서비스ID';
COMMENT ON COLUMN BXM_RUNTIME_SVC.SVC_NM IS '서비스명';
COMMENT ON COLUMN BXM_RUNTIME_SVC.OP_NM IS '오퍼레이션명';
COMMENT ON COLUMN BXM_RUNTIME_SVC.CLASS_FQN IS '클래스FQN';
COMMENT ON COLUMN BXM_RUNTIME_SVC.INPUT_FQN IS '입력FQN';
COMMENT ON COLUMN BXM_RUNTIME_SVC.OUTPUT_FQN IS '출력FQN';
COMMENT ON COLUMN BXM_RUNTIME_SVC.OP_DESC IS '오퍼레이션설명';

CREATE TABLE BXM_USER_INFO (
	 USER_ID VARCHAR2(32) NOT NULL,
	 USER_NM VARCHAR2(50) NULL,
	 USER_PWD VARCHAR2(64) NULL,
	 ROLE_ID VARCHAR2(40) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 USER_IP VARCHAR2(30) NULL,
	 USER_IP_VALID_YN VARCHAR2(1) NULL,
	 PHONE_NO VARCHAR2(20) NULL,
	 EMAIL VARCHAR2(50) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_USER_INFO ON BXM_USER_INFO 
( 
	 USER_ID ASC
);

ALTER TABLE BXM_USER_INFO ADD CONSTRAINT PK_BXM_USER_INFO PRIMARY KEY USING INDEX PK_BXM_USER_INFO;

COMMENT ON TABLE BXM_USER_INFO IS 'BXM 사용자';
COMMENT ON COLUMN BXM_USER_INFO.USER_ID IS '사용자ID';
COMMENT ON COLUMN BXM_USER_INFO.USER_NM IS '사용자명';
COMMENT ON COLUMN BXM_USER_INFO.USER_PWD IS '사용자비밀번호';
COMMENT ON COLUMN BXM_USER_INFO.ROLE_ID IS '역할ID';
COMMENT ON COLUMN BXM_USER_INFO.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_USER_INFO.USER_IP IS '사용자IP';
COMMENT ON COLUMN BXM_USER_INFO.USER_IP_VALID_YN IS '사용자IP검증여부';
COMMENT ON COLUMN BXM_USER_INFO.PHONE_NO IS '폰번호';
COMMENT ON COLUMN BXM_USER_INFO.EMAIL IS '이메일';
COMMENT ON COLUMN BXM_USER_INFO.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_USER_INFO.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_USER_INFO.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_USER_INFO.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_USER_ROLE (
	 ROLE_ID VARCHAR2(40) NOT NULL,
	 ROLE_NM VARCHAR2(128) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 ROLE_DESC VARCHAR2(512) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_USER_ROLE ON BXM_USER_ROLE 
( 
	 ROLE_ID ASC
);

ALTER TABLE BXM_USER_ROLE ADD CONSTRAINT PK_BXM_USER_ROLE PRIMARY KEY USING INDEX PK_BXM_USER_ROLE;

COMMENT ON TABLE BXM_USER_ROLE IS 'BXM 역할';
COMMENT ON COLUMN BXM_USER_ROLE.ROLE_ID IS '역할ID';
COMMENT ON COLUMN BXM_USER_ROLE.ROLE_NM IS '역할명';
COMMENT ON COLUMN BXM_USER_ROLE.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_USER_ROLE.ROLE_DESC IS '역할설명';
COMMENT ON COLUMN BXM_USER_ROLE.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_USER_ROLE.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_USER_ROLE.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_USER_ROLE.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_USER_MENU (
	 MENU_ID VARCHAR2(40) NOT NULL,
	 MENU_NM VARCHAR2(128) NULL,
	 MENU_DESC VARCHAR2(512) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 PARENT_MENU_ID VARCHAR2(40) NULL,
	 MENU_TYPE_CD VARCHAR2(1) NULL,
	 MENU_SEQ NUMBER NULL
);

CREATE UNIQUE INDEX PK_BXM_USER_MENU ON BXM_USER_MENU 
( 
	 MENU_ID ASC
);

ALTER TABLE BXM_USER_MENU ADD CONSTRAINT PK_BXM_USER_MENU PRIMARY KEY USING INDEX PK_BXM_USER_MENU;

COMMENT ON TABLE BXM_USER_MENU IS 'BXM ADMIN 메뉴';
COMMENT ON COLUMN BXM_USER_MENU.MENU_ID IS '메뉴ID';
COMMENT ON COLUMN BXM_USER_MENU.MENU_NM IS '메뉴명';
COMMENT ON COLUMN BXM_USER_MENU.MENU_DESC IS '메뉴설명';
COMMENT ON COLUMN BXM_USER_MENU.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_USER_MENU.PARENT_MENU_ID IS '상위 메뉴 ID';
COMMENT ON COLUMN BXM_USER_MENU.MENU_TYPE_CD IS '메뉴타입코드';
COMMENT ON COLUMN BXM_USER_MENU.MENU_SEQ IS '메뉴일련번호';

CREATE TABLE BXM_USER_ROLE_N_MENU (
	 ROLE_ID VARCHAR2(40) NOT NULL,
	 MENU_ID VARCHAR2(40) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_USER_ROLE_N_MENU ON BXM_USER_ROLE_N_MENU 
( 
	 ROLE_ID ASC,
	 MENU_ID ASC
);

ALTER TABLE BXM_USER_ROLE_N_MENU ADD CONSTRAINT PK_BXM_USER_ROLE_N_MENU PRIMARY KEY USING INDEX PK_BXM_USER_ROLE_N_MENU;

COMMENT ON TABLE BXM_USER_ROLE_N_MENU IS 'BXM 역할 ADMIN메뉴 관계';
COMMENT ON COLUMN BXM_USER_ROLE_N_MENU.ROLE_ID IS '역할ID';
COMMENT ON COLUMN BXM_USER_ROLE_N_MENU.MENU_ID IS '메뉴ID';

CREATE TABLE BXM_USER_PERM (
	 AUTH_ID VARCHAR2(40) NOT NULL,
	 AUTH_NM VARCHAR2(128) NULL,
	 AUTH_DESC VARCHAR2(512) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 AUTH_TYPE_CD VARCHAR2(1) NULL,
	 SVC_NM VARCHAR2(512) NULL,
	 OP_NM VARCHAR2(512) NULL
);

CREATE UNIQUE INDEX PK_BXM_USER_PERM ON BXM_USER_PERM 
( 
	 AUTH_ID ASC
);

ALTER TABLE BXM_USER_PERM ADD CONSTRAINT PK_BXM_USER_PERM PRIMARY KEY USING INDEX PK_BXM_USER_PERM;

COMMENT ON TABLE BXM_USER_PERM IS 'BXM 권한';
COMMENT ON COLUMN BXM_USER_PERM.AUTH_ID IS '권한ID';
COMMENT ON COLUMN BXM_USER_PERM.AUTH_NM IS '권한명';
COMMENT ON COLUMN BXM_USER_PERM.AUTH_DESC IS '권한설명';
COMMENT ON COLUMN BXM_USER_PERM.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_USER_PERM.AUTH_TYPE_CD IS '권한타입코드';
COMMENT ON COLUMN BXM_USER_PERM.SVC_NM IS '서비스명';
COMMENT ON COLUMN BXM_USER_PERM.OP_NM IS '오퍼레이션명';

CREATE TABLE BXM_USER_ROLE_N_PERM (
	 ROLE_ID VARCHAR2(40) NOT NULL,
	 AUTH_ID VARCHAR2(40) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_USER_ROLE_N_PERM ON BXM_USER_ROLE_N_PERM 
( 
	 ROLE_ID ASC,
	 AUTH_ID ASC
);

ALTER TABLE BXM_USER_ROLE_N_PERM ADD CONSTRAINT PK_BXM_USER_ROLE_N_PERM PRIMARY KEY USING INDEX PK_BXM_USER_ROLE_N_PERM;

COMMENT ON TABLE BXM_USER_ROLE_N_PERM IS 'BXM 역할 권한 관계';
COMMENT ON COLUMN BXM_USER_ROLE_N_PERM.ROLE_ID IS '역할ID';
COMMENT ON COLUMN BXM_USER_ROLE_N_PERM.AUTH_ID IS '권한ID';

CREATE TABLE BXM_MTRX_CTRL (
	 ALL_TRX_CTRL_YN VARCHAR2(1) NULL,
	 DTCHG_TRX_CTRL_YN VARCHAR2(1) NULL,
	 IMG_LOG_YN VARCHAR2(1) NULL,
	 DW_LOG_YN VARCHAR2(1) NULL
);

CREATE UNIQUE INDEX PK_BXM_MTRX_CTRL ON BXM_MTRX_CTRL 
( 
);

ALTER TABLE BXM_MTRX_CTRL ADD CONSTRAINT PK_BXM_MTRX_CTRL PRIMARY KEY USING INDEX PK_BXM_MTRX_CTRL;

COMMENT ON TABLE BXM_MTRX_CTRL IS 'BXM복합거래제어';
COMMENT ON COLUMN BXM_MTRX_CTRL.ALL_TRX_CTRL_YN IS '전체거래제어여부';
COMMENT ON COLUMN BXM_MTRX_CTRL.DTCHG_TRX_CTRL_YN IS '일자변경거래제어여부';
COMMENT ON COLUMN BXM_MTRX_CTRL.IMG_LOG_YN IS '이미지로그여부';
COMMENT ON COLUMN BXM_MTRX_CTRL.DW_LOG_YN IS 'DW로그여부';

CREATE TABLE BXM_TEST_PARAM (
	 TEST_KEY_TYPE_CD VARCHAR2(1) NOT NULL,
	 TEST_KEY_ID VARCHAR2(64) NOT NULL,
	 TEST_DT VARCHAR2(8) NULL,
	 TEST_EAI_ID VARCHAR2(128) NULL
);

CREATE UNIQUE INDEX PK_BXM_TEST_PARAM ON BXM_TEST_PARAM 
( 
	 TEST_KEY_TYPE_CD ASC,
	 TEST_KEY_ID ASC
);

ALTER TABLE BXM_TEST_PARAM ADD CONSTRAINT PK_BXM_TEST_PARAM PRIMARY KEY USING INDEX PK_BXM_TEST_PARAM;

COMMENT ON TABLE BXM_TEST_PARAM IS 'BXM 테스트 파라미터';
COMMENT ON COLUMN BXM_TEST_PARAM.TEST_KEY_TYPE_CD IS '테스트키타입코드';
COMMENT ON COLUMN BXM_TEST_PARAM.TEST_KEY_ID IS '테스트키ID';
COMMENT ON COLUMN BXM_TEST_PARAM.TEST_DT IS '테스트 일자';
COMMENT ON COLUMN BXM_TEST_PARAM.TEST_EAI_ID IS '테스트EAIID';

CREATE TABLE BXM_LOG_SVC_00 (
	 GUID VARCHAR2(40) NOT NULL,
	 LINK_SEQ NUMBER(3) NOT NULL,
	 NODE_NAME VARCHAR2(128) NULL,
	 CONTAINER_NM VARCHAR2(128) NULL,
	 CONTEXT_NM VARCHAR2(128) NULL,
	 TRX_CD VARCHAR2(12) NULL,
	 BXM_APP_ID VARCHAR2(40) NULL,
	 SVC_NM VARCHAR2(512) NULL,
	 OP_NM VARCHAR2(512) NULL,
	 OP_ERR_YN VARCHAR2(1) NULL,
	 OP_OCCUR_DTTM VARCHAR2(23) NULL,
	 OP_ELAPSED_MILLS NUMBER NULL,
	 DATA_PROC_MILLS NUMBER NULL,
	 RULE_PROC_MILLS NUMBER NULL,
	 INF_PROC_MILLS NUMBER NULL,
	 BEAN_CREATE_MILLS NUMBER NULL,
	 CPU_PROC_MILLS NUMBER NULL,
	 SEND_USER_ID VARCHAR2(16) NULL,
	 SEND_USER_IP VARCHAR2(30) NULL
);

CREATE UNIQUE INDEX PK_BXM_LOG_SVC_00 ON BXM_LOG_SVC_00 
( 
	 GUID ASC,
	 LINK_SEQ ASC
);

ALTER TABLE BXM_LOG_SVC_00 ADD CONSTRAINT PK_BXM_LOG_SVC_00 PRIMARY KEY USING INDEX PK_BXM_LOG_SVC_00;

COMMENT ON TABLE BXM_LOG_SVC_00 IS 'BXM서비스로그(00일)';
COMMENT ON COLUMN BXM_LOG_SVC_00.GUID IS 'GUID';
COMMENT ON COLUMN BXM_LOG_SVC_00.LINK_SEQ IS '연동일련번호';
COMMENT ON COLUMN BXM_LOG_SVC_00.NODE_NAME IS 'NODE명';
COMMENT ON COLUMN BXM_LOG_SVC_00.CONTAINER_NM IS '컨테이너명';
COMMENT ON COLUMN BXM_LOG_SVC_00.CONTEXT_NM IS '컨텍스트명';
COMMENT ON COLUMN BXM_LOG_SVC_00.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_LOG_SVC_00.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_LOG_SVC_00.SVC_NM IS '서비스명';
COMMENT ON COLUMN BXM_LOG_SVC_00.OP_NM IS '오퍼레이션명';
COMMENT ON COLUMN BXM_LOG_SVC_00.OP_ERR_YN IS '오퍼레이션에러여부';
COMMENT ON COLUMN BXM_LOG_SVC_00.OP_OCCUR_DTTM IS '오퍼레이션발생일시';
COMMENT ON COLUMN BXM_LOG_SVC_00.OP_ELAPSED_MILLS IS '오퍼레이션경과밀리초';
COMMENT ON COLUMN BXM_LOG_SVC_00.DATA_PROC_MILLS IS '데이터 처리 밀리초';
COMMENT ON COLUMN BXM_LOG_SVC_00.RULE_PROC_MILLS IS '룰 처리 밀리초';
COMMENT ON COLUMN BXM_LOG_SVC_00.INF_PROC_MILLS IS '인터페이스 처리 밀리초';
COMMENT ON COLUMN BXM_LOG_SVC_00.BEAN_CREATE_MILLS IS '빈 생성 밀리초';
COMMENT ON COLUMN BXM_LOG_SVC_00.CPU_PROC_MILLS IS 'CPU 처리 밀리초';
COMMENT ON COLUMN BXM_LOG_SVC_00.SEND_USER_ID IS '송신조작자ID';
COMMENT ON COLUMN BXM_LOG_SVC_00.SEND_USER_IP IS '송신조작자IP';

CREATE TABLE BXM_LOG_DETAIL_00 (
	 GUID VARCHAR2(40) NOT NULL,
	 LINK_SEQ NUMBER(3) NOT NULL,
	 LOG_LV_NM VARCHAR2(10) NOT NULL,
	 LOG_OCCUR_DTTM VARCHAR2(23) NOT NULL,
	 LOG_OCCUR_GAP NUMBER NULL,
	 LOG_DATA BLOB NULL,
	 TAG_TYPE_CD VARCHAR2(5) NULL,
	 TAG_NM VARCHAR2(128) NULL
);

CREATE UNIQUE INDEX PK_BXM_LOG_DETAIL_00 ON BXM_LOG_DETAIL_00 
( 
);

ALTER TABLE BXM_LOG_DETAIL_00 ADD CONSTRAINT PK_BXM_LOG_DETAIL_00 PRIMARY KEY USING INDEX PK_BXM_LOG_DETAIL_00;

COMMENT ON TABLE BXM_LOG_DETAIL_00 IS 'BXM상세로그(00일)';
COMMENT ON COLUMN BXM_LOG_DETAIL_00.GUID IS 'GUID';
COMMENT ON COLUMN BXM_LOG_DETAIL_00.LINK_SEQ IS '연동일련번호';
COMMENT ON COLUMN BXM_LOG_DETAIL_00.LOG_LV_NM IS '로그레벨명';
COMMENT ON COLUMN BXM_LOG_DETAIL_00.LOG_OCCUR_DTTM IS '로그 발생 일시';
COMMENT ON COLUMN BXM_LOG_DETAIL_00.LOG_OCCUR_GAP IS '로그발생간격';
COMMENT ON COLUMN BXM_LOG_DETAIL_00.LOG_DATA IS '로그데이터';
COMMENT ON COLUMN BXM_LOG_DETAIL_00.TAG_TYPE_CD IS 'TAG타입코드';
COMMENT ON COLUMN BXM_LOG_DETAIL_00.TAG_NM IS 'TAG명';

CREATE TABLE BXM_LOG_TRX_00 (
	 GUID VARCHAR2(40) NOT NULL,
	 LINK_SEQ NUMBER(3) NOT NULL,
	 LOG_SEQ NUMBER(19) NULL,
	 TRX_CD VARCHAR2(12) NULL,
	 TRX_TYPE_CD VARCHAR2(2) NULL,
	 SYS_CD VARCHAR2(5) NULL,
	 NODE_NO NUMBER(2) NULL,
	 NODE_NAME VARCHAR2(128) NULL,
	 CHL_TYPE_CD VARCHAR2(3) NULL,
	 SCREEN_ID VARCHAR2(10) NULL,
	 CC_ID VARCHAR2(10) NULL,
	 TRX_BRANCH_NO VARCHAR2(4) NULL,
	 TRX_TERMINAL_NO VARCHAR2(4) NULL,
	 SEND_USER_ID VARCHAR2(16) NULL,
	 SEND_USER_IP VARCHAR2(30) NULL,
	 APPR_TRX_YN VARCHAR2(1) NULL,
	 APPR_USER_ID VARCHAR2(16) NULL,
	 LANG_CD VARCHAR2(2) NULL,
	 REQ_MSG_DTTM VARCHAR2(17) NULL,
	 RES_MSG_DTTM VARCHAR2(17) NULL,
	 TRX_DT VARCHAR2(8) NULL,
	 BIZ_DT VARCHAR2(8) NULL,
	 INITIAL_DT VARCHAR2(8) NULL,
	 SYS_DT VARCHAR2(8) NULL,
	 LOG_OCCUR_DTTM VARCHAR2(23) NULL,
	 TRX_ELAPSED_MILLS NUMBER NULL,
	 CUST_ID VARCHAR2(16) NULL,
	 ACCT_NO VARCHAR2(20) NULL,
	 CARD_NO VARCHAR2(16) NULL,
	 MNG_BRANCH_NO VARCHAR2(4) NULL,
	 OPEN_BRANCH_NO VARCHAR2(4) NULL,
	 TRX_AMT NUMBER(18,2) NULL
);

CREATE UNIQUE INDEX PK_BXM_LOG_TRX_00 ON BXM_LOG_TRX_00 
( 
	 GUID ASC,
	 LINK_SEQ ASC
);

ALTER TABLE BXM_LOG_TRX_00 ADD CONSTRAINT PK_BXM_LOG_TRX_00 PRIMARY KEY USING INDEX PK_BXM_LOG_TRX_00;

COMMENT ON TABLE BXM_LOG_TRX_00 IS 'BXM업무로그(00일)';
COMMENT ON COLUMN BXM_LOG_TRX_00.GUID IS 'GUID';
COMMENT ON COLUMN BXM_LOG_TRX_00.LINK_SEQ IS '연동일련번호';
COMMENT ON COLUMN BXM_LOG_TRX_00.LOG_SEQ IS '로그일련번호';
COMMENT ON COLUMN BXM_LOG_TRX_00.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_LOG_TRX_00.TRX_TYPE_CD IS '거래타입코드';
COMMENT ON COLUMN BXM_LOG_TRX_00.SYS_CD IS '시스템코드';
COMMENT ON COLUMN BXM_LOG_TRX_00.NODE_NO IS 'NODE번호';
COMMENT ON COLUMN BXM_LOG_TRX_00.NODE_NAME IS 'NODE명';
COMMENT ON COLUMN BXM_LOG_TRX_00.CHL_TYPE_CD IS '채널타입코드';
COMMENT ON COLUMN BXM_LOG_TRX_00.SCREEN_ID IS '화면ID';
COMMENT ON COLUMN BXM_LOG_TRX_00.CC_ID IS '센터컷ID';
COMMENT ON COLUMN BXM_LOG_TRX_00.TRX_BRANCH_NO IS '거래지점번호';
COMMENT ON COLUMN BXM_LOG_TRX_00.TRX_TERMINAL_NO IS '거래단말번호';
COMMENT ON COLUMN BXM_LOG_TRX_00.SEND_USER_ID IS '송신조작자ID';
COMMENT ON COLUMN BXM_LOG_TRX_00.SEND_USER_IP IS '송신조작자IP';
COMMENT ON COLUMN BXM_LOG_TRX_00.APPR_TRX_YN IS '승인거래여부';
COMMENT ON COLUMN BXM_LOG_TRX_00.APPR_USER_ID IS '승인조작자ID';
COMMENT ON COLUMN BXM_LOG_TRX_00.LANG_CD IS '언어코드';
COMMENT ON COLUMN BXM_LOG_TRX_00.REQ_MSG_DTTM IS '요청전문일시';
COMMENT ON COLUMN BXM_LOG_TRX_00.RES_MSG_DTTM IS '응답전문일시';
COMMENT ON COLUMN BXM_LOG_TRX_00.TRX_DT IS '거래일자';
COMMENT ON COLUMN BXM_LOG_TRX_00.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_LOG_TRX_00.INITIAL_DT IS '기산일자';
COMMENT ON COLUMN BXM_LOG_TRX_00.SYS_DT IS '시스템일자';
COMMENT ON COLUMN BXM_LOG_TRX_00.LOG_OCCUR_DTTM IS '로그발생일시';
COMMENT ON COLUMN BXM_LOG_TRX_00.TRX_ELAPSED_MILLS IS '거래경과밀리초';
COMMENT ON COLUMN BXM_LOG_TRX_00.CUST_ID IS '고객ID';
COMMENT ON COLUMN BXM_LOG_TRX_00.ACCT_NO IS '계좌번호';
COMMENT ON COLUMN BXM_LOG_TRX_00.CARD_NO IS '카드번호';
COMMENT ON COLUMN BXM_LOG_TRX_00.MNG_BRANCH_NO IS '관리지점번호';
COMMENT ON COLUMN BXM_LOG_TRX_00.OPEN_BRANCH_NO IS '개설지점번호';
COMMENT ON COLUMN BXM_LOG_TRX_00.TRX_AMT IS '거래금액';

CREATE TABLE BXM_LOG_ERR_00 (
	 GUID VARCHAR2(40) NOT NULL,
	 LINK_SEQ NUMBER(3) NOT NULL,
	 LOG_SEQ NUMBER(19) NULL,
	 TRX_CD VARCHAR2(12) NULL,
	 TRX_TYPE_CD VARCHAR2(2) NULL,
	 SYS_CD VARCHAR2(5) NULL,
	 NODE_NO NUMBER(2) NULL,
	 NODE_NAME VARCHAR2(128) NULL,
	 CHL_TYPE_CD VARCHAR2(3) NULL,
	 SCREEN_ID VARCHAR2(10) NULL,
	 CC_ID VARCHAR2(10) NULL,
	 TRX_BRANCH_NO VARCHAR2(4) NULL,
	 TRX_TERMINAL_NO VARCHAR2(4) NULL,
	 SEND_USER_ID VARCHAR2(16) NULL,
	 SEND_USER_IP VARCHAR2(30) NULL,
	 APPR_TRX_YN VARCHAR2(1) NULL,
	 APPR_USER_ID VARCHAR2(16) NULL,
	 LANG_CD VARCHAR2(2) NULL,
	 REQ_MSG_DTTM VARCHAR2(17) NULL,
	 RES_MSG_DTTM VARCHAR2(17) NULL,
	 TRX_DT VARCHAR2(8) NULL,
	 BIZ_DT VARCHAR2(8) NULL,
	 INITIAL_DT VARCHAR2(8) NULL,
	 SYS_DT VARCHAR2(8) NULL,
	 LOG_OCCUR_DTTM VARCHAR2(23) NULL,
	 TRX_ELAPSED_MILLS NUMBER NULL,
	 CUST_ID VARCHAR2(16) NULL,
	 ACCT_NO VARCHAR2(20) NULL,
	 CARD_NO VARCHAR2(16) NULL,
	 MNG_BRANCH_NO VARCHAR2(4) NULL,
	 OPEN_BRANCH_NO VARCHAR2(4) NULL,
	 TRX_AMT NUMBER(18,2) NULL,
	 ERR_CD VARCHAR2(9) NULL,
	 ERR_MSG_CTT VARCHAR2(4000) NULL,
	 ERR_STACKTRACE VARCHAR2(4000) NULL,
	 SQL_ERR_CD VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_LOG_ERR_00 ON BXM_LOG_ERR_00 
( 
	 GUID ASC,
	 LINK_SEQ ASC
);

ALTER TABLE BXM_LOG_ERR_00 ADD CONSTRAINT PK_BXM_LOG_ERR_00 PRIMARY KEY USING INDEX PK_BXM_LOG_ERR_00;

COMMENT ON TABLE BXM_LOG_ERR_00 IS 'BXM에러로그(00일)';
COMMENT ON COLUMN BXM_LOG_ERR_00.GUID IS 'GUID';
COMMENT ON COLUMN BXM_LOG_ERR_00.LINK_SEQ IS '연동일련번호';
COMMENT ON COLUMN BXM_LOG_ERR_00.LOG_SEQ IS '로그일련번호';
COMMENT ON COLUMN BXM_LOG_ERR_00.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_LOG_ERR_00.TRX_TYPE_CD IS '거래타입코드';
COMMENT ON COLUMN BXM_LOG_ERR_00.SYS_CD IS '시스템코드';
COMMENT ON COLUMN BXM_LOG_ERR_00.NODE_NO IS 'NODE번호';
COMMENT ON COLUMN BXM_LOG_ERR_00.NODE_NAME IS 'NODE명';
COMMENT ON COLUMN BXM_LOG_ERR_00.CHL_TYPE_CD IS '채널타입코드';
COMMENT ON COLUMN BXM_LOG_ERR_00.SCREEN_ID IS '화면ID';
COMMENT ON COLUMN BXM_LOG_ERR_00.CC_ID IS '센터컷ID';
COMMENT ON COLUMN BXM_LOG_ERR_00.TRX_BRANCH_NO IS '거래지점번호';
COMMENT ON COLUMN BXM_LOG_ERR_00.TRX_TERMINAL_NO IS '거래단말번호';
COMMENT ON COLUMN BXM_LOG_ERR_00.SEND_USER_ID IS '송신조작자ID';
COMMENT ON COLUMN BXM_LOG_ERR_00.SEND_USER_IP IS '송신조작자IP';
COMMENT ON COLUMN BXM_LOG_ERR_00.APPR_TRX_YN IS '승인거래여부';
COMMENT ON COLUMN BXM_LOG_ERR_00.APPR_USER_ID IS '승인조작자ID';
COMMENT ON COLUMN BXM_LOG_ERR_00.LANG_CD IS '언어코드';
COMMENT ON COLUMN BXM_LOG_ERR_00.REQ_MSG_DTTM IS '요청전문일시';
COMMENT ON COLUMN BXM_LOG_ERR_00.RES_MSG_DTTM IS '응답전문일시';
COMMENT ON COLUMN BXM_LOG_ERR_00.TRX_DT IS '거래일자';
COMMENT ON COLUMN BXM_LOG_ERR_00.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_LOG_ERR_00.INITIAL_DT IS '기산일자';
COMMENT ON COLUMN BXM_LOG_ERR_00.SYS_DT IS '시스템일자';
COMMENT ON COLUMN BXM_LOG_ERR_00.LOG_OCCUR_DTTM IS '로그발생일시';
COMMENT ON COLUMN BXM_LOG_ERR_00.TRX_ELAPSED_MILLS IS '거래경과밀리초';
COMMENT ON COLUMN BXM_LOG_ERR_00.CUST_ID IS '고객ID';
COMMENT ON COLUMN BXM_LOG_ERR_00.ACCT_NO IS '계좌번호';
COMMENT ON COLUMN BXM_LOG_ERR_00.CARD_NO IS '카드번호';
COMMENT ON COLUMN BXM_LOG_ERR_00.MNG_BRANCH_NO IS '관리지점번호';
COMMENT ON COLUMN BXM_LOG_ERR_00.OPEN_BRANCH_NO IS '개설지점번호';
COMMENT ON COLUMN BXM_LOG_ERR_00.TRX_AMT IS '거래금액';
COMMENT ON COLUMN BXM_LOG_ERR_00.ERR_CD IS '에러코드';
COMMENT ON COLUMN BXM_LOG_ERR_00.ERR_MSG_CTT IS '에러메시지내용';
COMMENT ON COLUMN BXM_LOG_ERR_00.ERR_STACKTRACE IS '에러STACKTRACE';
COMMENT ON COLUMN BXM_LOG_ERR_00.SQL_ERR_CD IS 'SQL에러코드';

CREATE TABLE BXM_LOG_IMG_00 (
	 GUID VARCHAR2(40) NOT NULL,
	 TRX_CD VARCHAR2(12) NULL,
	 NODE_NAME VARCHAR2(128) NULL,
	 CONTAINER_NM VARCHAR2(128) NULL,
	 CONTEXT_NM VARCHAR2(128) NULL,
	 BXM_APP_ID VARCHAR2(40) NULL,
	 SVC_NM VARCHAR2(512) NULL,
	 OP_NM VARCHAR2(512) NULL,
	 INPUT_FQN VARCHAR2(1024) NULL,
	 LOG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MSG_ENCODING_CD VARCHAR2(16) NULL,
	 MSG_TYPE_CD VARCHAR2(1) NULL,
	 MSG_LEN NUMBER(8) NULL,
	 MSG_DATA BLOB NULL,
	 DUP_GUID VARCHAR2(40) NULL,
	 ERR_CD VARCHAR2(9) NULL,
	 ERR_MSG_CTT VARCHAR2(4000) NULL
);

CREATE UNIQUE INDEX PK_BXM_LOG_IMG_00 ON BXM_LOG_IMG_00 
( 
	 GUID ASC
);

ALTER TABLE BXM_LOG_IMG_00 ADD CONSTRAINT PK_BXM_LOG_IMG_00 PRIMARY KEY USING INDEX PK_BXM_LOG_IMG_00;

COMMENT ON TABLE BXM_LOG_IMG_00 IS 'BXM이미지로그(00일)';
COMMENT ON COLUMN BXM_LOG_IMG_00.GUID IS 'GUID';
COMMENT ON COLUMN BXM_LOG_IMG_00.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_LOG_IMG_00.NODE_NAME IS 'NODE명';
COMMENT ON COLUMN BXM_LOG_IMG_00.CONTAINER_NM IS '컨테이너명';
COMMENT ON COLUMN BXM_LOG_IMG_00.CONTEXT_NM IS '컨텍스트명';
COMMENT ON COLUMN BXM_LOG_IMG_00.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_LOG_IMG_00.SVC_NM IS '서비스명';
COMMENT ON COLUMN BXM_LOG_IMG_00.OP_NM IS '오퍼레이션명';
COMMENT ON COLUMN BXM_LOG_IMG_00.INPUT_FQN IS '입력FQN';
COMMENT ON COLUMN BXM_LOG_IMG_00.LOG_OCCUR_DTTM IS '로그발생일시';
COMMENT ON COLUMN BXM_LOG_IMG_00.MSG_ENCODING_CD IS '전문인코딩코드';
COMMENT ON COLUMN BXM_LOG_IMG_00.MSG_TYPE_CD IS '전문유형코드';
COMMENT ON COLUMN BXM_LOG_IMG_00.MSG_LEN IS '전문길이';
COMMENT ON COLUMN BXM_LOG_IMG_00.MSG_DATA IS '전문데이터';
COMMENT ON COLUMN BXM_LOG_IMG_00.DUP_GUID IS '중복GUID';
COMMENT ON COLUMN BXM_LOG_IMG_00.ERR_CD IS '에러코드';
COMMENT ON COLUMN BXM_LOG_IMG_00.ERR_MSG_CTT IS '에러메시지내용';

CREATE TABLE BXM_TRX_INFO (
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 SVC_NM VARCHAR2(512) NOT NULL,
	 OP_NM VARCHAR2(512) NOT NULL,
	 TRX_CD VARCHAR2(12) NULL,
	 TRX_NM VARCHAR2(256) NULL,
	 FRCD_TRAN_YN VARCHAR2(1) NULL,
	 FRCD_TIMEOUT_MILLS NUMBER NULL,
	 OUTPUT_MSG_MAX_LEN NUMBER(8) NULL,
	 LOG_LV_NM VARCHAR2(10) NULL,
	 LOGF_TYPE_CD VARCHAR2(1) NULL,
	 LOGF_LOG_LV_NM VARCHAR2(10) NULL,
	 LOGF_IP VARCHAR2(30) NULL,
	 LOGF_BRANCH_NO VARCHAR2(4) NULL,
	 LOGF_TERMINAL_NO VARCHAR2(4) NULL,
	 DAY_SUSP_START_TIME VARCHAR2(6) NULL,
	 DAY_SUSP_END_TIME VARCHAR2(6) NULL,
	 TRX_CTRL_CD VARCHAR2(1) NULL,
	 TRX_CTRL_START_DTTM VARCHAR2(14) NULL,
	 TRX_CTRL_END_DTTM VARCHAR2(14) NULL,
	 LINK_TRX_TYPE_CD VARCHAR2(1) NULL,
	 LINK_CTRL_FQN VARCHAR2(1024) NULL,
	 CHL_CTRL_LIST_TYPE_CD VARCHAR2(1) NULL,
	 CHL_CTRL_LIST VARCHAR2(1024) NULL,
	 BRANCH_CTRL_LIST_TYPE_CD VARCHAR2(1) NULL,
	 BRANCH_CTRL_LIST VARCHAR2(1024) NULL,
	 USER_CTRL_LIST_TYPE_CD VARCHAR2(1) NULL,
	 USER_CTRL_LIST VARCHAR2(1024) NULL,
	 IP_CTRL_LIST_TYPE_CD VARCHAR2(1) NULL,
	 IP_CTRL_LIST VARCHAR2(1024) NULL,
	 BIZ_LOG_TRX_TYPE_CD VARCHAR2(1) NULL,
	 HDAY_TRX_USE_YN VARCHAR2(1) NULL,
	 EDAY_TRX_USE_YN VARCHAR2(1) NULL,
	 LINK_TRX_USE_YN VARCHAR2(1) NULL,
	 DTCHG_CTRL_SKIP_YN VARCHAR2(1) NULL,
	 IMG_LOG_SKIP_YN VARCHAR2(1) NULL,
	 TRX_LOG_SKIP_YN VARCHAR2(1) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_TRX_INFO ON BXM_TRX_INFO 
( 
	 BXM_APP_ID ASC,
	 SVC_NM ASC,
	 OP_NM ASC
);

ALTER TABLE BXM_TRX_INFO ADD CONSTRAINT PK_BXM_TRX_INFO PRIMARY KEY USING INDEX PK_BXM_TRX_INFO;

COMMENT ON TABLE BXM_TRX_INFO IS 'BXM온라인거래정보';
COMMENT ON COLUMN BXM_TRX_INFO.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_TRX_INFO.SVC_NM IS '서비스명';
COMMENT ON COLUMN BXM_TRX_INFO.OP_NM IS '오퍼레이션명';
COMMENT ON COLUMN BXM_TRX_INFO.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_TRX_INFO.TRX_NM IS '거래명';
COMMENT ON COLUMN BXM_TRX_INFO.FRCD_TRAN_YN IS '강제트랜잭션여부';
COMMENT ON COLUMN BXM_TRX_INFO.FRCD_TIMEOUT_MILLS IS '강제타임아웃밀리초';
COMMENT ON COLUMN BXM_TRX_INFO.OUTPUT_MSG_MAX_LEN IS '출력전문최대길이';
COMMENT ON COLUMN BXM_TRX_INFO.LOG_LV_NM IS '로그레벨명';
COMMENT ON COLUMN BXM_TRX_INFO.LOGF_TYPE_CD IS '로그강제변경타입코드';
COMMENT ON COLUMN BXM_TRX_INFO.LOGF_LOG_LV_NM IS '로그강제변경로그레벨명';
COMMENT ON COLUMN BXM_TRX_INFO.LOGF_IP IS '로그강제변경IP';
COMMENT ON COLUMN BXM_TRX_INFO.LOGF_BRANCH_NO IS '로그강제변경지점번호';
COMMENT ON COLUMN BXM_TRX_INFO.LOGF_TERMINAL_NO IS '로그강제변경단말번호';
COMMENT ON COLUMN BXM_TRX_INFO.DAY_SUSP_START_TIME IS '일별 중단시작시간';
COMMENT ON COLUMN BXM_TRX_INFO.DAY_SUSP_END_TIME IS '일별 중단종료시간';
COMMENT ON COLUMN BXM_TRX_INFO.TRX_CTRL_CD IS '거래제어코드';
COMMENT ON COLUMN BXM_TRX_INFO.TRX_CTRL_START_DTTM IS '거래제어시작일시';
COMMENT ON COLUMN BXM_TRX_INFO.TRX_CTRL_END_DTTM IS '거래제어종료일시';
COMMENT ON COLUMN BXM_TRX_INFO.LINK_TRX_TYPE_CD IS '연동거래 구분코드';
COMMENT ON COLUMN BXM_TRX_INFO.LINK_CTRL_FQN IS '연동제어 FQN';
COMMENT ON COLUMN BXM_TRX_INFO.CHL_CTRL_LIST_TYPE_CD IS '채널 제어목록 구분코드';
COMMENT ON COLUMN BXM_TRX_INFO.CHL_CTRL_LIST IS '채널 제어목록';
COMMENT ON COLUMN BXM_TRX_INFO.BRANCH_CTRL_LIST_TYPE_CD IS '지점 제어목록 구분코드';
COMMENT ON COLUMN BXM_TRX_INFO.BRANCH_CTRL_LIST IS '지점 제어목록';
COMMENT ON COLUMN BXM_TRX_INFO.USER_CTRL_LIST_TYPE_CD IS '조작자 제어목록 구분코드';
COMMENT ON COLUMN BXM_TRX_INFO.USER_CTRL_LIST IS '조작자 제어목록';
COMMENT ON COLUMN BXM_TRX_INFO.IP_CTRL_LIST_TYPE_CD IS 'IP 제어목록 구분코드';
COMMENT ON COLUMN BXM_TRX_INFO.IP_CTRL_LIST IS 'IP 제어목록';
COMMENT ON COLUMN BXM_TRX_INFO.BIZ_LOG_TRX_TYPE_CD IS '업무로그거래유형코드';
COMMENT ON COLUMN BXM_TRX_INFO.HDAY_TRX_USE_YN IS '휴일거래허용여부';
COMMENT ON COLUMN BXM_TRX_INFO.EDAY_TRX_USE_YN IS '마감후 거래허용여부';
COMMENT ON COLUMN BXM_TRX_INFO.LINK_TRX_USE_YN IS '연동거래허용여부';
COMMENT ON COLUMN BXM_TRX_INFO.DTCHG_CTRL_SKIP_YN IS '일자변경제어SKIP여부';
COMMENT ON COLUMN BXM_TRX_INFO.IMG_LOG_SKIP_YN IS '이미지로그SKIP여부';
COMMENT ON COLUMN BXM_TRX_INFO.TRX_LOG_SKIP_YN IS '거래로그SKIP여부';
COMMENT ON COLUMN BXM_TRX_INFO.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_TRX_INFO.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_TRX_INFO.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_TRX_INFO.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_TRX_HIST (
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 SVC_NM VARCHAR2(512) NOT NULL,
	 OP_NM VARCHAR2(512) NOT NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NOT NULL,
	 MODIFY_TYPE_CD VARCHAR2(1) NULL,
	 TRX_CD VARCHAR2(12) NULL,
	 TRX_NM VARCHAR2(256) NULL,
	 FRCD_TRAN_YN VARCHAR2(1) NULL,
	 FRCD_TIMEOUT_MILLS NUMBER NULL,
	 OUTPUT_MSG_MAX_LEN NUMBER(8) NULL,
	 LOG_LV_NM VARCHAR2(10) NULL,
	 LOGF_TYPE_CD VARCHAR2(1) NULL,
	 LOGF_LOG_LV_NM VARCHAR2(10) NULL,
	 LOGF_IP VARCHAR2(30) NULL,
	 LOGF_BRANCH_NO VARCHAR2(4) NULL,
	 LOGF_TERMINAL_NO VARCHAR2(4) NULL,
	 DAY_SUSP_START_TIME VARCHAR2(6) NULL,
	 DAY_SUSP_END_TIME VARCHAR2(6) NULL,
	 TRX_CTRL_CD VARCHAR2(1) NULL,
	 TRX_CTRL_START_DTTM VARCHAR2(14) NULL,
	 TRX_CTRL_END_DTTM VARCHAR2(14) NULL,
	 LINK_TRX_TYPE_CD VARCHAR2(1) NULL,
	 LINK_CTRL_FQN VARCHAR2(1024) NULL,
	 CHL_CTRL_LIST_TYPE_CD VARCHAR2(1) NULL,
	 CHL_CTRL_LIST VARCHAR2(1024) NULL,
	 BRANCH_CTRL_LIST_TYPE_CD VARCHAR2(1) NULL,
	 BRANCH_CTRL_LIST VARCHAR2(1024) NULL,
	 USER_CTRL_LIST_TYPE_CD VARCHAR2(1) NULL,
	 USER_CTRL_LIST VARCHAR2(1024) NULL,
	 BIZ_LOG_TRX_TYPE_CD VARCHAR2(1) NULL,
	 IP_CTRL_LIST_TYPE_CD VARCHAR2(1) NULL,
	 IP_CTRL_LIST VARCHAR2(1024) NULL,
	 HDAY_TRX_USE_YN VARCHAR2(1) NULL,
	 EDAY_TRX_USE_YN VARCHAR2(1) NULL,
	 LINK_TRX_USE_YN VARCHAR2(1) NULL,
	 DTCHG_CTRL_SKIP_YN VARCHAR2(1) NULL,
	 IMG_LOG_SKIP_YN VARCHAR2(1) NULL,
	 TRX_LOG_SKIP_YN VARCHAR2(1) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL
);

CREATE UNIQUE INDEX PK_BXM_TRX_HIST ON BXM_TRX_HIST 
( 
	 BXM_APP_ID ASC,
	 SVC_NM ASC,
	 OP_NM ASC,
	 MODIFY_OCCUR_DTTM ASC
);

ALTER TABLE BXM_TRX_HIST ADD CONSTRAINT PK_BXM_TRX_HIST PRIMARY KEY USING INDEX PK_BXM_TRX_HIST;

COMMENT ON TABLE BXM_TRX_HIST IS 'BXM 온라인거래 정보 변경이력';
COMMENT ON COLUMN BXM_TRX_HIST.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_TRX_HIST.SVC_NM IS '서비스명';
COMMENT ON COLUMN BXM_TRX_HIST.OP_NM IS '오퍼레이션명';
COMMENT ON COLUMN BXM_TRX_HIST.MODIFY_OCCUR_DTTM IS '변경 발생 일시';
COMMENT ON COLUMN BXM_TRX_HIST.MODIFY_TYPE_CD IS '변경구분코드';
COMMENT ON COLUMN BXM_TRX_HIST.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_TRX_HIST.TRX_NM IS '거래명';
COMMENT ON COLUMN BXM_TRX_HIST.FRCD_TRAN_YN IS '강제트랜잭션여부';
COMMENT ON COLUMN BXM_TRX_HIST.FRCD_TIMEOUT_MILLS IS '강제타임아웃밀리초';
COMMENT ON COLUMN BXM_TRX_HIST.OUTPUT_MSG_MAX_LEN IS '출력전문최대길이';
COMMENT ON COLUMN BXM_TRX_HIST.LOG_LV_NM IS '로그레벨명';
COMMENT ON COLUMN BXM_TRX_HIST.LOGF_TYPE_CD IS '로그강제변경타입코드';
COMMENT ON COLUMN BXM_TRX_HIST.LOGF_LOG_LV_NM IS '로그강제변경로그레벨명';
COMMENT ON COLUMN BXM_TRX_HIST.LOGF_IP IS '로그강제변경IP';
COMMENT ON COLUMN BXM_TRX_HIST.LOGF_BRANCH_NO IS '로그강제변경지점번호';
COMMENT ON COLUMN BXM_TRX_HIST.LOGF_TERMINAL_NO IS '로그강제변경단말번호';
COMMENT ON COLUMN BXM_TRX_HIST.DAY_SUSP_START_TIME IS '일별 중단시작시간';
COMMENT ON COLUMN BXM_TRX_HIST.DAY_SUSP_END_TIME IS '일별 중단종료시간';
COMMENT ON COLUMN BXM_TRX_HIST.TRX_CTRL_CD IS '거래제어코드';
COMMENT ON COLUMN BXM_TRX_HIST.TRX_CTRL_START_DTTM IS '거래제어시작일시';
COMMENT ON COLUMN BXM_TRX_HIST.TRX_CTRL_END_DTTM IS '거래제어종료일시';
COMMENT ON COLUMN BXM_TRX_HIST.LINK_TRX_TYPE_CD IS '연동거래 구분코드';
COMMENT ON COLUMN BXM_TRX_HIST.LINK_CTRL_FQN IS '연동제어 FQN';
COMMENT ON COLUMN BXM_TRX_HIST.CHL_CTRL_LIST_TYPE_CD IS '채널 제어목록 구분코드';
COMMENT ON COLUMN BXM_TRX_HIST.CHL_CTRL_LIST IS '채널 제어목록';
COMMENT ON COLUMN BXM_TRX_HIST.BRANCH_CTRL_LIST_TYPE_CD IS '지점 제어목록 구분코드';
COMMENT ON COLUMN BXM_TRX_HIST.BRANCH_CTRL_LIST IS '지점 제어목록';
COMMENT ON COLUMN BXM_TRX_HIST.USER_CTRL_LIST_TYPE_CD IS '조작자 제어목록 구분코드';
COMMENT ON COLUMN BXM_TRX_HIST.USER_CTRL_LIST IS '조작자 제어목록';
COMMENT ON COLUMN BXM_TRX_HIST.BIZ_LOG_TRX_TYPE_CD IS '업무로그거래유형코드';
COMMENT ON COLUMN BXM_TRX_HIST.IP_CTRL_LIST_TYPE_CD IS 'IP 제어목록 구분코드';
COMMENT ON COLUMN BXM_TRX_HIST.IP_CTRL_LIST IS 'IP 제어목록';
COMMENT ON COLUMN BXM_TRX_HIST.HDAY_TRX_USE_YN IS '휴일거래허용여부';
COMMENT ON COLUMN BXM_TRX_HIST.EDAY_TRX_USE_YN IS '마감후 거래허용여부';
COMMENT ON COLUMN BXM_TRX_HIST.LINK_TRX_USE_YN IS '연동거래허용여부';
COMMENT ON COLUMN BXM_TRX_HIST.DTCHG_CTRL_SKIP_YN IS '일자변경제어SKIP여부';
COMMENT ON COLUMN BXM_TRX_HIST.IMG_LOG_SKIP_YN IS '이미지로그SKIP여부';
COMMENT ON COLUMN BXM_TRX_HIST.TRX_LOG_SKIP_YN IS '거래로그SKIP여부';
COMMENT ON COLUMN BXM_TRX_HIST.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_TRX_HIST.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_TRX_HIST.MODIFY_USER_ID IS '변경 사용자 ID';

CREATE TABLE BXM_BIZ_DATE (
	 TRX_DT VARCHAR2(8) NULL,
	 BIZ_DT VARCHAR2(8) NULL,
	 DTCHG_YN VARCHAR2(1) NULL,
	 BEF_IMG_YN VARCHAR2(1) NULL,
	 DAYW_TYPE_CD VARCHAR2(1) NULL,
	 BEF_1_BIZ_DT VARCHAR2(8) NULL,
	 BEF_2_BIZ_DT VARCHAR2(8) NULL,
	 BEF_3_BIZ_DT VARCHAR2(8) NULL,
	 BEF_4_BIZ_DT VARCHAR2(8) NULL,
	 BEF_5_BIZ_DT VARCHAR2(8) NULL,
	 AFT_1_BIZ_DT VARCHAR2(8) NULL,
	 AFT_2_BIZ_DT VARCHAR2(8) NULL,
	 YEAR_TOTAL_DAY_CNT NUMBER(3) NULL,
	 MONTH_TOTAL_DAY_CNT NUMBER(3) NULL,
	 MONTH_FIRST_BIZ_DT VARCHAR2(8) NULL,
	 MONTH_LAST_BIZ_DT VARCHAR2(8) NULL,
	 MONTH_LAST_TRX_DT VARCHAR2(8) NULL,
	 HDAY_YN VARCHAR2(1) NULL,
	 WEND_YN VARCHAR2(1) NULL,
	 MEND_YN VARCHAR2(1) NULL
);

CREATE UNIQUE INDEX PK_BXM_BIZ_DATE ON BXM_BIZ_DATE 
( 
);

ALTER TABLE BXM_BIZ_DATE ADD CONSTRAINT PK_BXM_BIZ_DATE PRIMARY KEY USING INDEX PK_BXM_BIZ_DATE;

COMMENT ON TABLE BXM_BIZ_DATE IS 'BXM 영업일';
COMMENT ON COLUMN BXM_BIZ_DATE.TRX_DT IS '거래일자';
COMMENT ON COLUMN BXM_BIZ_DATE.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_BIZ_DATE.DTCHG_YN IS '일자변경여부';
COMMENT ON COLUMN BXM_BIZ_DATE.BEF_IMG_YN IS '비포이미지여부';
COMMENT ON COLUMN BXM_BIZ_DATE.DAYW_TYPE_CD IS '요일구분코드';
COMMENT ON COLUMN BXM_BIZ_DATE.BEF_1_BIZ_DT IS '전1영업일자';
COMMENT ON COLUMN BXM_BIZ_DATE.BEF_2_BIZ_DT IS '전2영업일자';
COMMENT ON COLUMN BXM_BIZ_DATE.BEF_3_BIZ_DT IS '전3영업일자';
COMMENT ON COLUMN BXM_BIZ_DATE.BEF_4_BIZ_DT IS '전4영업일자';
COMMENT ON COLUMN BXM_BIZ_DATE.BEF_5_BIZ_DT IS '전5영업일자';
COMMENT ON COLUMN BXM_BIZ_DATE.AFT_1_BIZ_DT IS '익1영업일자';
COMMENT ON COLUMN BXM_BIZ_DATE.AFT_2_BIZ_DT IS '익2영업일자';
COMMENT ON COLUMN BXM_BIZ_DATE.YEAR_TOTAL_DAY_CNT IS '년총일수';
COMMENT ON COLUMN BXM_BIZ_DATE.MONTH_TOTAL_DAY_CNT IS '월총일수';
COMMENT ON COLUMN BXM_BIZ_DATE.MONTH_FIRST_BIZ_DT IS '월최초영업일자';
COMMENT ON COLUMN BXM_BIZ_DATE.MONTH_LAST_BIZ_DT IS '월최종영업일자';
COMMENT ON COLUMN BXM_BIZ_DATE.MONTH_LAST_TRX_DT IS '월최종거래일자';
COMMENT ON COLUMN BXM_BIZ_DATE.HDAY_YN IS '휴일여부';
COMMENT ON COLUMN BXM_BIZ_DATE.WEND_YN IS '주말여부';
COMMENT ON COLUMN BXM_BIZ_DATE.MEND_YN IS '월말여부';

CREATE TABLE BXM_JOB_INFO (
	 JOB_ID VARCHAR2(100) NOT NULL,
	 JOB_NM VARCHAR2(256) NOT NULL,
	 JOB_TYPE_CD VARCHAR2(1) NOT NULL,
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 USE_YN VARCHAR2(1) NOT NULL,
	 LOG_LV_NM VARCHAR2(10) NOT NULL,
	 COMMIT_CFG_LIST VARCHAR2(1024) NULL,
	 DUP_EXEC_USE_YN VARCHAR2(1) NOT NULL,
	 JOB_USE_START_DT VARCHAR2(8) NULL,
	 JOB_USE_END_DT VARCHAR2(8) NULL,
	 REG_USER_ID VARCHAR2(32) NOT NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NOT NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_JOB_INFO ON BXM_JOB_INFO 
( 
	 JOB_ID ASC
);

ALTER TABLE BXM_JOB_INFO ADD CONSTRAINT PK_BXM_JOB_INFO PRIMARY KEY USING INDEX PK_BXM_JOB_INFO;

COMMENT ON TABLE BXM_JOB_INFO IS 'BXM 배치 작업 정보';
COMMENT ON COLUMN BXM_JOB_INFO.JOB_ID IS '배치작업ID';
COMMENT ON COLUMN BXM_JOB_INFO.JOB_NM IS '배치작업명';
COMMENT ON COLUMN BXM_JOB_INFO.JOB_TYPE_CD IS '배치작업유형코드';
COMMENT ON COLUMN BXM_JOB_INFO.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_JOB_INFO.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_JOB_INFO.LOG_LV_NM IS '로그레벨명';
COMMENT ON COLUMN BXM_JOB_INFO.COMMIT_CFG_LIST IS '커밋설정목록';
COMMENT ON COLUMN BXM_JOB_INFO.DUP_EXEC_USE_YN IS '중복실행가능여부';
COMMENT ON COLUMN BXM_JOB_INFO.JOB_USE_START_DT IS '배치작업허용시작일자';
COMMENT ON COLUMN BXM_JOB_INFO.JOB_USE_END_DT IS '배치작업허용종료일자';
COMMENT ON COLUMN BXM_JOB_INFO.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_JOB_INFO.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_JOB_INFO.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_JOB_INFO.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_JOB_HIST (
	 JOB_ID VARCHAR2(100) NOT NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NOT NULL,
	 MODIFY_TYPE_CD VARCHAR2(1) NULL,
	 JOB_NM VARCHAR2(256) NOT NULL,
	 JOB_TYPE_CD VARCHAR2(1) NOT NULL,
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 USE_YN VARCHAR2(1) NOT NULL,
	 LOG_LV_NM VARCHAR2(10) NOT NULL,
	 COMMIT_CFG_LIST VARCHAR2(1024) NULL,
	 DUP_EXEC_USE_YN VARCHAR2(1) NOT NULL,
	 JOB_USE_START_DT VARCHAR2(8) NULL,
	 JOB_USE_END_DT VARCHAR2(8) NULL,
	 REG_USER_ID VARCHAR2(32) NOT NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NOT NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL
);

CREATE UNIQUE INDEX PK_BXM_JOB_HIST ON BXM_JOB_HIST 
( 
	 JOB_ID ASC,
	 MODIFY_OCCUR_DTTM ASC
);

ALTER TABLE BXM_JOB_HIST ADD CONSTRAINT PK_BXM_JOB_HIST PRIMARY KEY USING INDEX PK_BXM_JOB_HIST;

COMMENT ON TABLE BXM_JOB_HIST IS 'BXM 배치 작업 정보 변경이력';
COMMENT ON COLUMN BXM_JOB_HIST.JOB_ID IS '배치작업ID';
COMMENT ON COLUMN BXM_JOB_HIST.MODIFY_OCCUR_DTTM IS '변경 발생 일시';
COMMENT ON COLUMN BXM_JOB_HIST.MODIFY_TYPE_CD IS '변경구분코드';
COMMENT ON COLUMN BXM_JOB_HIST.JOB_NM IS '배치작업명';
COMMENT ON COLUMN BXM_JOB_HIST.JOB_TYPE_CD IS '배치작업유형코드';
COMMENT ON COLUMN BXM_JOB_HIST.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_JOB_HIST.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_JOB_HIST.LOG_LV_NM IS '로그레벨명';
COMMENT ON COLUMN BXM_JOB_HIST.COMMIT_CFG_LIST IS '커밋설정목록';
COMMENT ON COLUMN BXM_JOB_HIST.DUP_EXEC_USE_YN IS '중복실행가능여부';
COMMENT ON COLUMN BXM_JOB_HIST.JOB_USE_START_DT IS '배치작업허용시작일자';
COMMENT ON COLUMN BXM_JOB_HIST.JOB_USE_END_DT IS '배치작업허용종료일자';
COMMENT ON COLUMN BXM_JOB_HIST.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_JOB_HIST.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_JOB_HIST.MODIFY_USER_ID IS '변경 사용자 ID';

CREATE TABLE BXM_JOB_GRP (
	 JOB_GRP_ID VARCHAR2(40) NOT NULL,
	 JOB_GRP_NM VARCHAR2(128) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 NODE_MAX_EXEC_VALID_YN VARCHAR2(1) NULL,
	 NODE_MAX_EXEC_CNT NUMBER(3) NULL,
	 SYS_MAX_EXEC_VALID_YN VARCHAR2(1) NULL,
	 SYS_MAX_EXEC_CNT NUMBER(3) NULL
);

CREATE UNIQUE INDEX PK_BXM_JOB_GRP ON BXM_JOB_GRP 
( 
	 JOB_GRP_ID ASC
);

ALTER TABLE BXM_JOB_GRP ADD CONSTRAINT PK_BXM_JOB_GRP PRIMARY KEY USING INDEX PK_BXM_JOB_GRP;

COMMENT ON TABLE BXM_JOB_GRP IS 'BXM 배치 작업 그룹';
COMMENT ON COLUMN BXM_JOB_GRP.JOB_GRP_ID IS '배치작업그룹ID';
COMMENT ON COLUMN BXM_JOB_GRP.JOB_GRP_NM IS '배치작업그룹명';
COMMENT ON COLUMN BXM_JOB_GRP.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_JOB_GRP.NODE_MAX_EXEC_VALID_YN IS 'NODE 최대 실행 검증 여부';
COMMENT ON COLUMN BXM_JOB_GRP.NODE_MAX_EXEC_CNT IS 'NODE 최대 실행 수';
COMMENT ON COLUMN BXM_JOB_GRP.SYS_MAX_EXEC_VALID_YN IS '시스템 최대 실행 검증 여부';
COMMENT ON COLUMN BXM_JOB_GRP.SYS_MAX_EXEC_CNT IS '시스템 최대 실행 수';

CREATE TABLE BXM_JOB_GRP_REL (
	 JOB_GRP_ID VARCHAR2(40) NOT NULL,
	 JOB_ID VARCHAR2(100) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_JOB_GRP_REL ON BXM_JOB_GRP_REL 
( 
	 JOB_GRP_ID ASC,
	 JOB_ID ASC
);

ALTER TABLE BXM_JOB_GRP_REL ADD CONSTRAINT PK_BXM_JOB_GRP_REL PRIMARY KEY USING INDEX PK_BXM_JOB_GRP_REL;

COMMENT ON TABLE BXM_JOB_GRP_REL IS 'BXM 배치작업그룹 관계';
COMMENT ON COLUMN BXM_JOB_GRP_REL.JOB_GRP_ID IS '배치작업그룹ID';
COMMENT ON COLUMN BXM_JOB_GRP_REL.JOB_ID IS '배치작업ID';

CREATE TABLE BXM_JOB_DAEMON_INFO (
	 JOB_ID VARCHAR2(100) NOT NULL,
	 JOB_NM VARCHAR2(256) NULL,
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 USE_YN VARCHAR2(1) NULL,
	 LOG_LV_NM VARCHAR2(10) NULL,
	 COMMIT_CFG_LIST VARCHAR2(1024) NULL,
	 EXEC_ARGS VARCHAR2(4000) NULL,
	 EXEC_INTERVAL_SEC NUMBER(8) NULL,
	 CRON_EXEC_CFG_VAL VARCHAR2(100) NULL,
	 PARLL_EXEC_YN VARCHAR2(1) NULL,
	 ERR_STOP_YN VARCHAR2(1) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_JOB_DAEMON_INFO ON BXM_JOB_DAEMON_INFO 
( 
	 JOB_ID ASC
);

ALTER TABLE BXM_JOB_DAEMON_INFO ADD CONSTRAINT PK_BXM_JOB_DAEMON_INFO PRIMARY KEY USING INDEX PK_BXM_JOB_DAEMON_INFO;

COMMENT ON TABLE BXM_JOB_DAEMON_INFO IS 'BXM 배치 데몬 정보';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.JOB_ID IS '배치작업ID';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.JOB_NM IS '배치작업명';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.LOG_LV_NM IS '로그레벨명';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.COMMIT_CFG_LIST IS '커밋설정목록';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.EXEC_ARGS IS '실행아규먼트';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.EXEC_INTERVAL_SEC IS '실행주기초';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.CRON_EXEC_CFG_VAL IS 'CRON실행설정값';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.PARLL_EXEC_YN IS '병렬실행여부';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.ERR_STOP_YN IS '에러중지여부';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_JOB_DAEMON_INFO.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_JOB_DAEMON_HIST (
	 JOB_ID VARCHAR2(100) NOT NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NOT NULL,
	 MODIFY_TYPE_CD VARCHAR2(1) NULL,
	 JOB_NM VARCHAR2(256) NULL,
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 USE_YN VARCHAR2(1) NULL,
	 LOG_LV_NM VARCHAR2(10) NULL,
	 COMMIT_CFG_LIST VARCHAR2(1024) NULL,
	 EXEC_ARGS VARCHAR2(4000) NULL,
	 EXEC_INTERVAL_SEC NUMBER(8) NULL,
	 CRON_EXEC_CFG_VAL VARCHAR2(100) NULL,
	 PARLL_EXEC_YN VARCHAR2(1) NULL,
	 ERR_STOP_YN VARCHAR2(1) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL
);

CREATE UNIQUE INDEX PK_BXM_JOB_DAEMON_HIST ON BXM_JOB_DAEMON_HIST 
( 
	 JOB_ID ASC,
	 MODIFY_OCCUR_DTTM ASC
);

ALTER TABLE BXM_JOB_DAEMON_HIST ADD CONSTRAINT PK_BXM_JOB_DAEMON_HIST PRIMARY KEY USING INDEX PK_BXM_JOB_DAEMON_HIST;

COMMENT ON TABLE BXM_JOB_DAEMON_HIST IS 'BXM 배치 데몬 정보 변경이력';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.JOB_ID IS '배치작업ID';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.MODIFY_OCCUR_DTTM IS '변경 발생 일시';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.MODIFY_TYPE_CD IS '변경구분코드';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.JOB_NM IS '배치작업명';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.LOG_LV_NM IS '로그레벨명';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.COMMIT_CFG_LIST IS '커밋설정목록';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.EXEC_ARGS IS '실행아규먼트';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.EXEC_INTERVAL_SEC IS '실행주기초';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.CRON_EXEC_CFG_VAL IS 'CRON실행설정값';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.PARLL_EXEC_YN IS '병렬실행여부';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.ERR_STOP_YN IS '에러중지여부';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_JOB_DAEMON_HIST.MODIFY_USER_ID IS '변경 사용자 ID';

CREATE TABLE BXM_JOB_DAEMON_MON (
	 JOB_ID VARCHAR2(100) NOT NULL,
	 EXEC_NODE_NO NUMBER(2) NOT NULL,
	 JOB_STATUS_CD VARCHAR2(12) NULL,
	 JOB_CTRL_CD VARCHAR2(12) NULL,
	 RESTART_CNT NUMBER NULL,
	 CURR_PROC_START_DTTM VARCHAR2(14) NULL,
	 PROC_EXEC_CNT NUMBER(18) NULL,
	 EXEC_NODE_NM VARCHAR2(128) NULL,
	 EXEC_PID VARCHAR2(42) NULL,
	 PREV_PROC_START_DTTM VARCHAR2(14) NULL,
	 PREV_PROC_END_DTTM VARCHAR2(14) NULL,
	 PREV_PROC_ERR_YN VARCHAR2(1) NULL,
	 JOB_START_DTTM VARCHAR2(14) NULL
);

CREATE UNIQUE INDEX PK_BXM_JOB_DAEMON_MON ON BXM_JOB_DAEMON_MON 
( 
	 JOB_ID ASC,
	 EXEC_NODE_NO ASC
);

ALTER TABLE BXM_JOB_DAEMON_MON ADD CONSTRAINT PK_BXM_JOB_DAEMON_MON PRIMARY KEY USING INDEX PK_BXM_JOB_DAEMON_MON;

COMMENT ON TABLE BXM_JOB_DAEMON_MON IS 'BXM 배치 데몬 모니터링';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.JOB_ID IS '배치작업ID';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.EXEC_NODE_NO IS '실행노드번호';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.JOB_STATUS_CD IS '배치작업상태코드';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.JOB_CTRL_CD IS '배치작업제어코드';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.RESTART_CNT IS '재기동 수';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.CURR_PROC_START_DTTM IS '현재처리시작일시';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.PROC_EXEC_CNT IS '처리실행수';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.EXEC_NODE_NM IS '실행노드명';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.EXEC_PID IS '실행PID';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.PREV_PROC_START_DTTM IS '직전처리시작일시';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.PREV_PROC_END_DTTM IS '직전처리종료일시';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.PREV_PROC_ERR_YN IS '직전처리에러여부';
COMMENT ON COLUMN BXM_JOB_DAEMON_MON.JOB_START_DTTM IS '배치작업기동일시';

CREATE TABLE BXM_LOG_SEQ (
	 LOG_TYPE_CD VARCHAR2(16) NOT NULL,
	 LOG_PROC_DT VARCHAR2(8) NOT NULL,
	 NODE_NO NUMBER(2) NULL,
	 LAST_PROC_LOG_SEQ NUMBER(19) NULL,
	 LAST_PROC_START_DTTM VARCHAR2(14) NULL,
	 LAST_PROC_END_DTTM VARCHAR2(14) NULL,
	 CURR_PROC_START_DTTM VARCHAR2(14) NULL,
	 PROC_EXEC_CNT NUMBER(18) NULL,
	 PROC_END_YN VARCHAR2(1) NULL
);

CREATE UNIQUE INDEX PK_BXM_LOG_SEQ ON BXM_LOG_SEQ 
( 
	 LOG_TYPE_CD ASC,
	 LOG_PROC_DT ASC
);

ALTER TABLE BXM_LOG_SEQ ADD CONSTRAINT PK_BXM_LOG_SEQ PRIMARY KEY USING INDEX PK_BXM_LOG_SEQ;

COMMENT ON TABLE BXM_LOG_SEQ IS 'BXM 로그 넘버링';
COMMENT ON COLUMN BXM_LOG_SEQ.LOG_TYPE_CD IS '로그구분코드';
COMMENT ON COLUMN BXM_LOG_SEQ.LOG_PROC_DT IS '로그처리일자';
COMMENT ON COLUMN BXM_LOG_SEQ.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_LOG_SEQ.LAST_PROC_LOG_SEQ IS '최종처리로그일련번호';
COMMENT ON COLUMN BXM_LOG_SEQ.LAST_PROC_START_DTTM IS '최종처리시작일시';
COMMENT ON COLUMN BXM_LOG_SEQ.LAST_PROC_END_DTTM IS '최종처리종료일시';
COMMENT ON COLUMN BXM_LOG_SEQ.CURR_PROC_START_DTTM IS '현재처리시작일시';
COMMENT ON COLUMN BXM_LOG_SEQ.PROC_EXEC_CNT IS '처리실행수';
COMMENT ON COLUMN BXM_LOG_SEQ.PROC_END_YN IS '처리종료여부';

CREATE TABLE BXM_COM_CD (
	 CD_ID VARCHAR2(9) NOT NULL,
	 CD_NM VARCHAR2(128) NULL,
	 PARENT_CD_ID VARCHAR2(9) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_COM_CD ON BXM_COM_CD 
( 
	 CD_ID ASC
);

ALTER TABLE BXM_COM_CD ADD CONSTRAINT PK_BXM_COM_CD PRIMARY KEY USING INDEX PK_BXM_COM_CD;

COMMENT ON TABLE BXM_COM_CD IS 'BXM 공통 코드';
COMMENT ON COLUMN BXM_COM_CD.CD_ID IS '코드ID';
COMMENT ON COLUMN BXM_COM_CD.CD_NM IS '코드명';
COMMENT ON COLUMN BXM_COM_CD.PARENT_CD_ID IS '상위코드ID';
COMMENT ON COLUMN BXM_COM_CD.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_COM_CD.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_COM_CD.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_COM_CD.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_DEFERRED_NODE (
	 NODE_NO NUMBER(2) NOT NULL,
	 NODE_END_YN VARCHAR2(1) NULL,
	 NODE_ERR_OCCUR_YN VARCHAR2(1) NULL,
	 NODE_STOP_YN VARCHAR2(1) NULL,
	 NODE_PARLL_CNT NUMBER NULL,
	 ERR_CD VARCHAR2(9) NULL,
	 ERR_MSG_CTT VARCHAR2(4000) NULL,
	 REQ_DTTM VARCHAR2(14) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_NODE ON BXM_DEFERRED_NODE 
( 
	 NODE_NO ASC
);

ALTER TABLE BXM_DEFERRED_NODE ADD CONSTRAINT PK_BXM_DEFERRED_NODE PRIMARY KEY USING INDEX PK_BXM_DEFERRED_NODE;

COMMENT ON TABLE BXM_DEFERRED_NODE IS 'BXM 후행 NODE';
COMMENT ON COLUMN BXM_DEFERRED_NODE.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_DEFERRED_NODE.NODE_END_YN IS '노드종료여부';
COMMENT ON COLUMN BXM_DEFERRED_NODE.NODE_ERR_OCCUR_YN IS '노드에러발생여부';
COMMENT ON COLUMN BXM_DEFERRED_NODE.NODE_STOP_YN IS '노드중지여부';
COMMENT ON COLUMN BXM_DEFERRED_NODE.NODE_PARLL_CNT IS '노드병렬수';
COMMENT ON COLUMN BXM_DEFERRED_NODE.ERR_CD IS '에러코드';
COMMENT ON COLUMN BXM_DEFERRED_NODE.ERR_MSG_CTT IS '에러메시지내용';
COMMENT ON COLUMN BXM_DEFERRED_NODE.REQ_DTTM IS '요청일시';

CREATE TABLE BXM_CAL (
	 STD_YEAR VARCHAR2(4) NOT NULL,
	 STD_MONTH VARCHAR2(2) NOT NULL,
	 STD_DAY VARCHAR2(2) NOT NULL,
	 DT_CD VARCHAR2(1) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_CAL ON BXM_CAL 
( 
	 STD_YEAR ASC,
	 STD_MONTH ASC,
	 STD_DAY ASC
);

ALTER TABLE BXM_CAL ADD CONSTRAINT PK_BXM_CAL PRIMARY KEY USING INDEX PK_BXM_CAL;

COMMENT ON TABLE BXM_CAL IS 'BXM달력';
COMMENT ON COLUMN BXM_CAL.STD_YEAR IS '기준년';
COMMENT ON COLUMN BXM_CAL.STD_MONTH IS '기준월';
COMMENT ON COLUMN BXM_CAL.STD_DAY IS '기준일';
COMMENT ON COLUMN BXM_CAL.DT_CD IS '일자코드';

CREATE TABLE BXM_DNI_METHOD (
	 METHOD_ID VARCHAR2(40) NOT NULL,
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 PKG_NM VARCHAR2(512) NOT NULL,
	 CLASS_NM VARCHAR2(512) NOT NULL,
	 METHOD_SIGN VARCHAR2(2048) NOT NULL,
	 METHOD_NM VARCHAR2(256) NOT NULL,
	 METHOD_EXEC_TYPE_CD VARCHAR2(1) NULL,
	 START_LINE_CNT NUMBER NOT NULL,
	 END_LINE_CNT NUMBER NOT NULL,
	 OP_NM VARCHAR2(512) NULL,
	 TRAN_YN VARCHAR2(1) NULL,
	 METHOD_MODIFIER_LIST VARCHAR2(1024) NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DNI_METHOD ON BXM_DNI_METHOD 
( 
	 METHOD_ID ASC
);

ALTER TABLE BXM_DNI_METHOD ADD CONSTRAINT PK_BXM_DNI_METHOD PRIMARY KEY USING INDEX PK_BXM_DNI_METHOD;

COMMENT ON TABLE BXM_DNI_METHOD IS '메소드 분석 정보';
COMMENT ON COLUMN BXM_DNI_METHOD.METHOD_ID IS '메소드 ID';
COMMENT ON COLUMN BXM_DNI_METHOD.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_DNI_METHOD.PKG_NM IS '패키지 명';
COMMENT ON COLUMN BXM_DNI_METHOD.CLASS_NM IS '클래스 명';
COMMENT ON COLUMN BXM_DNI_METHOD.METHOD_SIGN IS '메소드 시그니쳐';
COMMENT ON COLUMN BXM_DNI_METHOD.METHOD_NM IS '메소드 명';
COMMENT ON COLUMN BXM_DNI_METHOD.METHOD_EXEC_TYPE_CD IS '메소드 실행 타입 코드';
COMMENT ON COLUMN BXM_DNI_METHOD.START_LINE_CNT IS '시작 라인 수';
COMMENT ON COLUMN BXM_DNI_METHOD.END_LINE_CNT IS '종료 라인 수';
COMMENT ON COLUMN BXM_DNI_METHOD.OP_NM IS '오퍼레이션 명';
COMMENT ON COLUMN BXM_DNI_METHOD.TRAN_YN IS '트랜잭션 여부';
COMMENT ON COLUMN BXM_DNI_METHOD.METHOD_MODIFIER_LIST IS '메소드 접근자 목록';
COMMENT ON COLUMN BXM_DNI_METHOD.MODIFY_DTTM IS '변경 일시';

CREATE TABLE BXM_DNI_METHOD_CALLEE (
	 METHOD_ID VARCHAR2(40) NOT NULL,
	 CALLER_METHOD_LINE NUMBER NULL,
	 CALLEE_BXM_APP_ID VARCHAR2(40) NULL,
	 CALLEE_PKG_NM VARCHAR2(512) NULL,
	 CALLEE_CLASS_NM VARCHAR2(512) NULL,
	 CALLEE_METHOD_SIGN VARCHAR2(2048) NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DNI_METHOD_CALLEE ON BXM_DNI_METHOD_CALLEE 
( 
);

ALTER TABLE BXM_DNI_METHOD_CALLEE ADD CONSTRAINT PK_BXM_DNI_METHOD_CALLEE PRIMARY KEY USING INDEX PK_BXM_DNI_METHOD_CALLEE;

COMMENT ON TABLE BXM_DNI_METHOD_CALLEE IS '메소드 Callee 호출 정보';
COMMENT ON COLUMN BXM_DNI_METHOD_CALLEE.METHOD_ID IS '메소드 ID';
COMMENT ON COLUMN BXM_DNI_METHOD_CALLEE.CALLER_METHOD_LINE IS 'Caller 메소드 라인';
COMMENT ON COLUMN BXM_DNI_METHOD_CALLEE.CALLEE_BXM_APP_ID IS 'Callee BXM 어플리케이션 ID';
COMMENT ON COLUMN BXM_DNI_METHOD_CALLEE.CALLEE_PKG_NM IS 'Callee 패키지 명';
COMMENT ON COLUMN BXM_DNI_METHOD_CALLEE.CALLEE_CLASS_NM IS 'Callee 클래스 명';
COMMENT ON COLUMN BXM_DNI_METHOD_CALLEE.CALLEE_METHOD_SIGN IS 'Callee 메소드 시그니쳐';
COMMENT ON COLUMN BXM_DNI_METHOD_CALLEE.MODIFY_DTTM IS '변경 일시';

CREATE TABLE BXM_DNI_RES (
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 PKG_NM VARCHAR2(512) NOT NULL,
	 CLASS_NM VARCHAR2(512) NOT NULL,
	 SVC_NM VARCHAR2(512) NULL,
	 EXEC_TYPE_CD VARCHAR2(1) NULL,
	 CLASS_TYPE_CD VARCHAR2(10) NULL,
	 CLASS_MODIFIER_LIST VARCHAR2(1024) NULL,
	 FIELD_CNT NUMBER NULL,
	 FILE_PATH VARCHAR2(2048) NOT NULL,
	 TOTAL_LINE_CNT NUMBER NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DNI_RES ON BXM_DNI_RES 
( 
	 BXM_APP_ID ASC,
	 PKG_NM ASC,
	 CLASS_NM ASC
);

ALTER TABLE BXM_DNI_RES ADD CONSTRAINT PK_BXM_DNI_RES PRIMARY KEY USING INDEX PK_BXM_DNI_RES;

COMMENT ON TABLE BXM_DNI_RES IS '리소스 분석 정보';
COMMENT ON COLUMN BXM_DNI_RES.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_DNI_RES.PKG_NM IS '패키지 명';
COMMENT ON COLUMN BXM_DNI_RES.CLASS_NM IS '클래스 명';
COMMENT ON COLUMN BXM_DNI_RES.SVC_NM IS '서비스 명';
COMMENT ON COLUMN BXM_DNI_RES.EXEC_TYPE_CD IS '실행 타입 코드';
COMMENT ON COLUMN BXM_DNI_RES.CLASS_TYPE_CD IS '클래스 타입 코드';
COMMENT ON COLUMN BXM_DNI_RES.CLASS_MODIFIER_LIST IS '클래스 접근자 목록';
COMMENT ON COLUMN BXM_DNI_RES.FIELD_CNT IS '필드 수';
COMMENT ON COLUMN BXM_DNI_RES.FILE_PATH IS '파일 경로';
COMMENT ON COLUMN BXM_DNI_RES.TOTAL_LINE_CNT IS '총 라인 수';
COMMENT ON COLUMN BXM_DNI_RES.MODIFY_DTTM IS '변경 일시';

CREATE TABLE BXM_DNI_APP_STATS (
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL,
	 TOTAL_PKG_CNT NUMBER NULL,
	 TOTAL_TYPE_CNT NUMBER NULL,
	 INF_TYPE_CNT NUMBER NULL,
	 ENUM_TYPE_CNT NUMBER NULL,
	 ABST_CLASS_TYPE_CNT NUMBER NULL,
	 CLASS_TYPE_CNT NUMBER NULL,
	 ALL_METHOD_CNT NUMBER NULL,
	 TOTAL_FIELD_CNT NUMBER NULL,
	 BXM_SVC_CLASS_CNT NUMBER NULL,
	 BXM_SVC_OP_CNT NUMBER NULL,
	 BXM_BATCH_CLASS_CNT NUMBER NULL,
	 BXM_BEAN_CLASS_CNT NUMBER NULL,
	 BXM_DBIO_CLASS_CNT NUMBER NULL,
	 BXM_OMM_CLASS_CNT NUMBER NULL,
	 BXM_TRAN_OP_CNT NUMBER NULL
);

CREATE UNIQUE INDEX PK_BXM_DNI_APP_STATS ON BXM_DNI_APP_STATS 
( 
	 BXM_APP_ID ASC
);

ALTER TABLE BXM_DNI_APP_STATS ADD CONSTRAINT PK_BXM_DNI_APP_STATS PRIMARY KEY USING INDEX PK_BXM_DNI_APP_STATS;

COMMENT ON TABLE BXM_DNI_APP_STATS IS 'BXM 어플리케이션 통계';
COMMENT ON COLUMN BXM_DNI_APP_STATS.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_DNI_APP_STATS.MODIFY_DTTM IS '변경 일시';
COMMENT ON COLUMN BXM_DNI_APP_STATS.TOTAL_PKG_CNT IS '총 패키지 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.TOTAL_TYPE_CNT IS '총 타입 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.INF_TYPE_CNT IS '인터페이스 타입 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.ENUM_TYPE_CNT IS 'ENUM 타입 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.ABST_CLASS_TYPE_CNT IS '추상 클래스 타입 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.CLASS_TYPE_CNT IS '클래스 타입 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.ALL_METHOD_CNT IS '전체 메소드 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.TOTAL_FIELD_CNT IS '총 필드 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.BXM_SVC_CLASS_CNT IS 'BXM 서비스 클래스 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.BXM_SVC_OP_CNT IS 'BXM 서비스 오퍼레이션 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.BXM_BATCH_CLASS_CNT IS 'BXM 배치 클래스 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.BXM_BEAN_CLASS_CNT IS 'BXM 빈 클래스 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.BXM_DBIO_CLASS_CNT IS 'BXM DBIO 클래스 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.BXM_OMM_CLASS_CNT IS 'BXM OMM 클래스 수';
COMMENT ON COLUMN BXM_DNI_APP_STATS.BXM_TRAN_OP_CNT IS 'BXM 트랜잭션 오퍼레이션 수';

CREATE TABLE BXM_DNI_SQL_INFO (
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 PKG_NM VARCHAR2(512) NOT NULL,
	 CLASS_NM VARCHAR2(512) NOT NULL,
	 SQL_ID VARCHAR2(512) NOT NULL,
	 SEQ NUMBER NOT NULL,
	 SQL_TYPE_CD VARCHAR2(1) NOT NULL,
	 DBIO_PATH VARCHAR2(512) NOT NULL,
	 TABLE_NM VARCHAR2(100) NOT NULL,
	 COLUMN_NM VARCHAR2(100) NOT NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DNI_SQL_INFO ON BXM_DNI_SQL_INFO 
( 
);

ALTER TABLE BXM_DNI_SQL_INFO ADD CONSTRAINT PK_BXM_DNI_SQL_INFO PRIMARY KEY USING INDEX PK_BXM_DNI_SQL_INFO;

COMMENT ON TABLE BXM_DNI_SQL_INFO IS 'DBIO SQL ID 분석 정보';
COMMENT ON COLUMN BXM_DNI_SQL_INFO.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_DNI_SQL_INFO.PKG_NM IS '패키지 명';
COMMENT ON COLUMN BXM_DNI_SQL_INFO.CLASS_NM IS '클래스 명';
COMMENT ON COLUMN BXM_DNI_SQL_INFO.SQL_ID IS 'SQL ID';
COMMENT ON COLUMN BXM_DNI_SQL_INFO.SEQ IS '일련번호';
COMMENT ON COLUMN BXM_DNI_SQL_INFO.SQL_TYPE_CD IS 'SQL 구분 코드';
COMMENT ON COLUMN BXM_DNI_SQL_INFO.DBIO_PATH IS 'DBIO경로';
COMMENT ON COLUMN BXM_DNI_SQL_INFO.TABLE_NM IS '테이블명';
COMMENT ON COLUMN BXM_DNI_SQL_INFO.COLUMN_NM IS '컬럼명';
COMMENT ON COLUMN BXM_DNI_SQL_INFO.MODIFY_DTTM IS '변경 일시';

CREATE TABLE BXM_DNI_SQL_DETAIL (
	 BXM_APP_ID VARCHAR2(40) NULL,
	 PKG_NM VARCHAR2(512) NULL,
	 CLASS_NM VARCHAR2(512) NULL,
	 SQL_ID VARCHAR2(512) NULL,
	 SEQ NUMBER NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DNI_SQL_DETAIL ON BXM_DNI_SQL_DETAIL 
( 
);

ALTER TABLE BXM_DNI_SQL_DETAIL ADD CONSTRAINT PK_BXM_DNI_SQL_DETAIL PRIMARY KEY USING INDEX PK_BXM_DNI_SQL_DETAIL;

COMMENT ON TABLE BXM_DNI_SQL_DETAIL IS 'DBIO 상세 분석 정보';
COMMENT ON COLUMN BXM_DNI_SQL_DETAIL.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_DNI_SQL_DETAIL.PKG_NM IS '패키지 명';
COMMENT ON COLUMN BXM_DNI_SQL_DETAIL.CLASS_NM IS '클래스 명';
COMMENT ON COLUMN BXM_DNI_SQL_DETAIL.SQL_ID IS 'SQL ID';
COMMENT ON COLUMN BXM_DNI_SQL_DETAIL.SEQ IS '일련번호';
COMMENT ON COLUMN BXM_DNI_SQL_DETAIL.MODIFY_DTTM IS '변경 일시';

CREATE TABLE TABLE3 (
	 PKG_NM VARCHAR2(512) NOT NULL,
	 CLASS_NM VARCHAR2(512) NOT NULL,
	 FILE_PATH VARCHAR2(2048) NOT NULL,
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 MODIFY_DTTM VARCHAR2(14) NULL
);

CREATE UNIQUE INDEX PK_TABLE3 ON TABLE3 
( 
	 PKG_NM ASC,
	 CLASS_NM ASC
);

ALTER TABLE TABLE3 ADD CONSTRAINT PK_TABLE3 PRIMARY KEY USING INDEX PK_TABLE3;

COMMENT ON TABLE TABLE3 IS 'DBIO 클래스 분석 정보';
COMMENT ON COLUMN TABLE3.PKG_NM IS '패키지 명';
COMMENT ON COLUMN TABLE3.CLASS_NM IS '클래스 명';
COMMENT ON COLUMN TABLE3.FILE_PATH IS '파일 경로';
COMMENT ON COLUMN TABLE3.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN TABLE3.MODIFY_DTTM IS '변경 일시';

CREATE TABLE BXM_DNI_SVC_CALLEE (
	 METHOD_ID VARCHAR2(40) NOT NULL,
	 CALLEE_METHOD_LINE NUMBER NULL,
	 CALLEE_BXM_APP_ID VARCHAR2(40) NULL,
	 CALLEE_SVC_NM VARCHAR2(512) NULL,
	 CALLEE_OP_NM VARCHAR2(512) NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DNI_SVC_CALLEE ON BXM_DNI_SVC_CALLEE 
( 
);

ALTER TABLE BXM_DNI_SVC_CALLEE ADD CONSTRAINT PK_BXM_DNI_SVC_CALLEE PRIMARY KEY USING INDEX PK_BXM_DNI_SVC_CALLEE;

COMMENT ON TABLE BXM_DNI_SVC_CALLEE IS '메소드 서비스 호출 정보';
COMMENT ON COLUMN BXM_DNI_SVC_CALLEE.METHOD_ID IS '메소드 ID';
COMMENT ON COLUMN BXM_DNI_SVC_CALLEE.CALLEE_METHOD_LINE IS 'Caller 라인';
COMMENT ON COLUMN BXM_DNI_SVC_CALLEE.CALLEE_BXM_APP_ID IS 'Callee BXM 어플리케이션 ID';
COMMENT ON COLUMN BXM_DNI_SVC_CALLEE.CALLEE_SVC_NM IS 'Callee 서비스 명';
COMMENT ON COLUMN BXM_DNI_SVC_CALLEE.CALLEE_OP_NM IS 'Callee 오퍼레이션 명';
COMMENT ON COLUMN BXM_DNI_SVC_CALLEE.MODIFY_DTTM IS '변경 일시';

CREATE TABLE BXM_DNI_ROOT_SVC (
	 METHOD_ID VARCHAR2(40) NOT NULL,
	 ROOT_METHOD_ID VARCHAR2(40) NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DNI_ROOT_SVC ON BXM_DNI_ROOT_SVC 
( 
);

ALTER TABLE BXM_DNI_ROOT_SVC ADD CONSTRAINT PK_BXM_DNI_ROOT_SVC PRIMARY KEY USING INDEX PK_BXM_DNI_ROOT_SVC;

COMMENT ON TABLE BXM_DNI_ROOT_SVC IS 'BXM ROOT 서비스 정보';
COMMENT ON COLUMN BXM_DNI_ROOT_SVC.METHOD_ID IS '메소드 ID';
COMMENT ON COLUMN BXM_DNI_ROOT_SVC.ROOT_METHOD_ID IS 'Root 메소드 ID';
COMMENT ON COLUMN BXM_DNI_ROOT_SVC.MODIFY_DTTM IS '변경 일시';

CREATE TABLE BXM_COM_CD_DETAIL (
	 CD_ID VARCHAR2(9) NOT NULL,
	 CD_VAL VARCHAR2(32) NOT NULL,
	 CD_VAL_NM VARCHAR2(128) NULL,
	 CD_VAL_DESC VARCHAR2(512) NULL,
	 SEQ NUMBER NULL,
	 USE_YN VARCHAR2(1) NULL,
	 LANG_CD VARCHAR2(2) NOT NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_COM_CD_DETAIL ON BXM_COM_CD_DETAIL 
( 
	 CD_ID ASC,
	 CD_VAL ASC,
	 LANG_CD ASC,
);

ALTER TABLE BXM_COM_CD_DETAIL ADD CONSTRAINT PK_BXM_COM_CD_DETAIL PRIMARY KEY USING INDEX PK_BXM_COM_CD_DETAIL;

COMMENT ON TABLE BXM_COM_CD_DETAIL IS 'BXM 공통 코드 상세';
COMMENT ON COLUMN BXM_COM_CD_DETAIL.CD_ID IS '코드ID';
COMMENT ON COLUMN BXM_COM_CD_DETAIL.CD_VAL IS '코드값';
COMMENT ON COLUMN BXM_COM_CD_DETAIL.CD_VAL_NM IS '코드값명';
COMMENT ON COLUMN BXM_COM_CD_DETAIL.CD_VAL_DESC IS '코드값설명';
COMMENT ON COLUMN BXM_COM_CD_DETAIL.SEQ IS '일련번호';
COMMENT ON COLUMN BXM_COM_CD_DETAIL.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_COM_CD_DETAIL.LANG_CD IS '언어코드';
COMMENT ON COLUMN BXM_COM_CD_DETAIL.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_COM_CD_DETAIL.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_COM_CD_DETAIL.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_COM_CD_DETAIL.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE F_BATCH_JOB_EXECUTION_EXT (
	 JOB_EXECUTION_ID NUMBER(19) NOT NULL,
	 JOB_NAME VARCHAR2(100) NOT NULL,
	 UPDATE_TIME  TIMESTAMP(6) NOT NULL,
	 NODE_NAME VARCHAR2(40) NOT NULL,
	 LOG_FILE VARCHAR2(200) NULL,
	 JOB_TYPE_CD VARCHAR2(1) NULL,
	 SCHEDULE_EXEC_ID VARCHAR2(200) NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_JOB_EXECUTION_EXT ON F_BATCH_JOB_EXECUTION_EXT 
( 
);

ALTER TABLE F_BATCH_JOB_EXECUTION_EXT ADD CONSTRAINT PK_F_BATCH_JOB_EXECUTION_EXT PRIMARY KEY USING INDEX PK_F_BATCH_JOB_EXECUTION_EXT;

COMMENT ON TABLE F_BATCH_JOB_EXECUTION_EXT IS '배치작업 실행정보 확장';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION_EXT.JOB_EXECUTION_ID IS '배치작업 실행 아이디';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION_EXT.JOB_NAME IS '배치작업 명';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION_EXT.UPDATE_TIME  IS 'UPDATE 시각';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION_EXT.NODE_NAME IS '노드 명';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION_EXT.LOG_FILE IS '로그 파일';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION_EXT.JOB_TYPE_CD IS '배치작업유형코드';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION_EXT.SCHEDULE_EXEC_ID IS '스케줄실행ID';

CREATE TABLE BXM_CC_GROUP (
	 CC_GRP_ID VARCHAR2(12) NOT NULL,
	 CC_GRP_NM VARCHAR(50) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_GROUP ON BXM_CC_GROUP 
( 
	 CC_GRP_ID ASC
);

ALTER TABLE BXM_CC_GROUP ADD CONSTRAINT PK_BXM_CC_GROUP PRIMARY KEY USING INDEX PK_BXM_CC_GROUP;

COMMENT ON TABLE BXM_CC_GROUP IS 'BXM 센터컷 그룹';
COMMENT ON COLUMN BXM_CC_GROUP.CC_GRP_ID IS '센터컷그룹ID';
COMMENT ON COLUMN BXM_CC_GROUP.CC_GRP_NM IS '센터컷그룹명';

CREATE TABLE BXM_CC_MAIN (
	 CC_ID VARCHAR2(10) NOT NULL,
	 CC_NM VARCHAR2(128) NULL,
	 CC_GRP_ID VARCHAR2(12) NOT NULL,
	 USE_YN VARCHAR2(1) NULL,
	 TRX_CD VARCHAR2(12) NULL,
	 BXM_APP_ID VARCHAR2(40) NULL,
	 SVC_NM VARCHAR2(512) NULL,
	 OP_NM VARCHAR2(512) NULL,
	 CC_INPUT_DTO VARCHAR2(150) NULL,
	 TOTAL_EXEC_TH NUMBER(5) NULL,
	 PARLL_PROC_CNT NUMBER(4) NULL,
	 SCHED_TYPE_CD VARCHAR2(1) NULL,
	 SCHED_CNT NUMBER(5) NULL,
	 INPUT_DATA_TYPE_CD VARCHAR2(1) NULL,
	 AUTO_EXEC_TYPE_CD VARCHAR2(1) NULL,
	 AUTO_EXEC_START_TIME VARCHAR2(6) NULL,
	 AUTO_EXEC_END_TIME VARCHAR2(6) NULL,
	 ERR_STOP_YN VARCHAR2(1) NULL,
	 ERR_PROC_CD VARCHAR2(1) NULL,
	 REPROC_WAIT_SEC NUMBER(8) NULL,
	 WORK_IMPORTANCE_CD VARCHAR2(1) NULL,
	 NODE_CFG_METHOD_CD VARCHAR2(1) NULL,
	 USER_ID VARCHAR2(16) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_MAIN ON BXM_CC_MAIN 
( 
	 CC_ID ASC
);

ALTER TABLE BXM_CC_MAIN ADD CONSTRAINT PK_BXM_CC_MAIN PRIMARY KEY USING INDEX PK_BXM_CC_MAIN;

COMMENT ON TABLE BXM_CC_MAIN IS 'BXM 센터컷 메인';
COMMENT ON COLUMN BXM_CC_MAIN.CC_ID IS '센터컷ID';
COMMENT ON COLUMN BXM_CC_MAIN.CC_NM IS '센터컷명';
COMMENT ON COLUMN BXM_CC_MAIN.CC_GRP_ID IS '센터컷그룹ID';
COMMENT ON COLUMN BXM_CC_MAIN.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_CC_MAIN.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_CC_MAIN.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_CC_MAIN.SVC_NM IS '서비스명';
COMMENT ON COLUMN BXM_CC_MAIN.OP_NM IS '오퍼레이션명';
COMMENT ON COLUMN BXM_CC_MAIN.CC_INPUT_DTO IS '센터컷입력DTO';
COMMENT ON COLUMN BXM_CC_MAIN.TOTAL_EXEC_TH IS '총실행회차';
COMMENT ON COLUMN BXM_CC_MAIN.PARLL_PROC_CNT IS '병렬처리수';
COMMENT ON COLUMN BXM_CC_MAIN.SCHED_TYPE_CD IS '스케쥴유형코드';
COMMENT ON COLUMN BXM_CC_MAIN.SCHED_CNT IS '스케쥴건수';
COMMENT ON COLUMN BXM_CC_MAIN.INPUT_DATA_TYPE_CD IS '입력데이터유형코드';
COMMENT ON COLUMN BXM_CC_MAIN.AUTO_EXEC_TYPE_CD IS '자동실행구분코드';
COMMENT ON COLUMN BXM_CC_MAIN.AUTO_EXEC_START_TIME IS '자동실행시작시간';
COMMENT ON COLUMN BXM_CC_MAIN.AUTO_EXEC_END_TIME IS '자동실행종료시간';
COMMENT ON COLUMN BXM_CC_MAIN.ERR_STOP_YN IS '오류중지여부';
COMMENT ON COLUMN BXM_CC_MAIN.ERR_PROC_CD IS '오류처리코드';
COMMENT ON COLUMN BXM_CC_MAIN.REPROC_WAIT_SEC IS '재처리대기초';
COMMENT ON COLUMN BXM_CC_MAIN.WORK_IMPORTANCE_CD IS '작업중요도코드';
COMMENT ON COLUMN BXM_CC_MAIN.NODE_CFG_METHOD_CD IS '노드설정방법코드';
COMMENT ON COLUMN BXM_CC_MAIN.USER_ID IS '조작자ID';
COMMENT ON COLUMN BXM_CC_MAIN.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_CC_MAIN.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_CC_MAIN.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_CC_MAIN.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_SCHEDULE_CONFIG (
	 SCHEDULE_KEY VARCHAR2(128) NOT NULL,
	 SCHEDULE_VAL VARCHAR2(128) NOT NULL,
	 USE_YN VARCHAR2(1) NOT NULL,
	 DESC VARCHAR2(512) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_CONFIG ON BXM_SCHEDULE_CONFIG 
( 
	 SCHEDULE_KEY ASC
);

ALTER TABLE BXM_SCHEDULE_CONFIG ADD CONSTRAINT PK_BXM_SCHEDULE_CONFIG PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_CONFIG;

COMMENT ON TABLE BXM_SCHEDULE_CONFIG IS 'BXM 스케줄 환경';
COMMENT ON COLUMN BXM_SCHEDULE_CONFIG.SCHEDULE_KEY IS '스케줄키';
COMMENT ON COLUMN BXM_SCHEDULE_CONFIG.SCHEDULE_VAL IS '스케줄값';
COMMENT ON COLUMN BXM_SCHEDULE_CONFIG.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_SCHEDULE_CONFIG.DESC IS '설명';

CREATE TABLE BXM_CC_NODE (
	 CC_NODE_NO NUMBER(2) NOT NULL,
	 CC_NODE_NM VARCHAR2(128) NULL,
	 MAX_PROC_EXEC_CNT NUMBER(18) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_NODE ON BXM_CC_NODE 
( 
	 CC_NODE_NO ASC
);

ALTER TABLE BXM_CC_NODE ADD CONSTRAINT PK_BXM_CC_NODE PRIMARY KEY USING INDEX PK_BXM_CC_NODE;

COMMENT ON TABLE BXM_CC_NODE IS 'BXM 센터컷 노드';
COMMENT ON COLUMN BXM_CC_NODE.CC_NODE_NO IS '센터컷노드번호';
COMMENT ON COLUMN BXM_CC_NODE.CC_NODE_NM IS '센터컷노드명';
COMMENT ON COLUMN BXM_CC_NODE.MAX_PROC_EXEC_CNT IS '최대처리실행수';

CREATE TABLE BXM_CC_NODE_CTRL (
	 CC_ID VARCHAR2(10) NOT NULL,
	 CC_NODE_NO NUMBER(2) NOT NULL,
	 MAX_PROC_EXEC_CNT NUMBER(18) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_NODE_CTRL ON BXM_CC_NODE_CTRL 
( 
	 CC_ID ASC,
	 CC_NODE_NO ASC
);

ALTER TABLE BXM_CC_NODE_CTRL ADD CONSTRAINT PK_BXM_CC_NODE_CTRL PRIMARY KEY USING INDEX PK_BXM_CC_NODE_CTRL;

COMMENT ON TABLE BXM_CC_NODE_CTRL IS 'BXM 센터컷 노드 제어';
COMMENT ON COLUMN BXM_CC_NODE_CTRL.CC_ID IS '센터컷ID';
COMMENT ON COLUMN BXM_CC_NODE_CTRL.CC_NODE_NO IS '센터컷노드번호';
COMMENT ON COLUMN BXM_CC_NODE_CTRL.MAX_PROC_EXEC_CNT IS '최대처리실행수';

CREATE TABLE BXM_CC_MAIN_STATUS (
	 CC_ID VARCHAR2(10) NOT NULL,
	 PROC_DT NUMBER(18) NOT NULL,
	 RECEIPT_NO NUMBER(5) NOT NULL,
	 TH_NO NUMBER(5) NOT NULL,
	 PROC_STATUS_CD VARCHAR2(2) NULL,
	 ERR_YN VARCHAR2(1) NULL,
	 FIRST_EXEC_DT VARCHAR2(8) NULL,
	 FIRST_EXEC_TIME VARCHAR2(6) NULL,
	 END_DT VARCHAR2(8) NULL,
	 END_TIME VARCHAR2(6) NULL,
	 ALARM_OCCUR_YN VARCHAR2(1) NULL,
	 PARLL_PROC_CNT NUMBER(4) NULL,
	 PROC_CNT NUMBER(10) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_MAIN_STATUS ON BXM_CC_MAIN_STATUS 
( 
	 CC_ID ASC,
	 PROC_DT ASC,
	 RECEIPT_NO ASC,
	 TH_NO ASC
);

ALTER TABLE BXM_CC_MAIN_STATUS ADD CONSTRAINT PK_BXM_CC_MAIN_STATUS PRIMARY KEY USING INDEX PK_BXM_CC_MAIN_STATUS;

COMMENT ON TABLE BXM_CC_MAIN_STATUS IS 'BXM 센터컷 메인 상태';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.CC_ID IS '센터컷ID';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.PROC_DT IS '처리일자';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.RECEIPT_NO IS '접수번호';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.TH_NO IS '회차번호';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.PROC_STATUS_CD IS '처리상태코드';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.ERR_YN IS '에러여부';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.FIRST_EXEC_DT IS '최초실행일자';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.FIRST_EXEC_TIME IS '최초실행시간';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.END_DT IS '종료일자';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.END_TIME IS '종료시간';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.ALARM_OCCUR_YN IS '알람발생여부';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.PARLL_PROC_CNT IS '병렬처리수';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.PROC_CNT IS '처리건수';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.MODIFY_USER_ID IS '변경사용자ID';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.MODIFY_OCCUR_DTTM IS '변경발생일시';

CREATE TABLE BXM_CC_NODE_STATUS (
	 CC_ID VARCHAR2(10) NOT NULL,
	 PROC_DT NUMBER(18) NOT NULL,
	 RECEIPT_NO NUMBER(5) NOT NULL,
	 TH_NO NUMBER(5) NOT NULL,
	 CC_NODE_NO NUMBER(2) NOT NULL,
	 PROC_EXEC_CNT NUMBER(18) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_NODE_STATUS ON BXM_CC_NODE_STATUS 
( 
	 CC_ID ASC,
	 PROC_DT ASC,
	 RECEIPT_NO ASC,
	 TH_NO ASC,
	 CC_NODE_NO ASC
);

ALTER TABLE BXM_CC_NODE_STATUS ADD CONSTRAINT PK_BXM_CC_NODE_STATUS PRIMARY KEY USING INDEX PK_BXM_CC_NODE_STATUS;

COMMENT ON TABLE BXM_CC_NODE_STATUS IS 'BXM 센터컷 노드 상태';
COMMENT ON COLUMN BXM_CC_NODE_STATUS.CC_ID IS '센터컷ID';
COMMENT ON COLUMN BXM_CC_NODE_STATUS.PROC_DT IS '처리일자';
COMMENT ON COLUMN BXM_CC_NODE_STATUS.RECEIPT_NO IS '접수번호';
COMMENT ON COLUMN BXM_CC_NODE_STATUS.TH_NO IS '회차번호';
COMMENT ON COLUMN BXM_CC_NODE_STATUS.CC_NODE_NO IS '센터컷노드번호';
COMMENT ON COLUMN BXM_CC_NODE_STATUS.PROC_EXEC_CNT IS '처리실행수';

CREATE TABLE BXM_CC_ERROR (
	 CC_ID VARCHAR2(10) NOT NULL,
	 PROC_DT VARCHAR2(8) NOT NULL,
	 RECEIPT_NO NUMBER(5) NOT NULL,
	 EXEC_NO NUMBER(6) NOT NULL,
	 TH_NO NUMBER(5) NOT NULL,
	 CC_PROC_SEQ NUMBER(19) NOT NULL,
	 SEQUENCE_PROC_KEY VARCHAR2(128) NULL,
	 INPUT_DATA_TYPE_CD VARCHAR2(1) NULL,
	 ERR_OCCUR_DT VARCHAR2(8) NULL,
	 ERR_OCCUR_TIME VARCHAR2(6) NULL,
	 ERR_CD VARCHAR2(9) NULL,
	 ERR_MSG_CTT VARCHAR2(4000) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_ERROR ON BXM_CC_ERROR 
( 
	 CC_ID ASC,
	 PROC_DT ASC,
	 RECEIPT_NO ASC,
	 EXEC_NO ASC,
	 TH_NO ASC,
	 CC_PROC_SEQ ASC
);

ALTER TABLE BXM_CC_ERROR ADD CONSTRAINT PK_BXM_CC_ERROR PRIMARY KEY USING INDEX PK_BXM_CC_ERROR;

COMMENT ON TABLE BXM_CC_ERROR IS 'BXM 센터컷 에러';
COMMENT ON COLUMN BXM_CC_ERROR.CC_ID IS '센터컷ID';
COMMENT ON COLUMN BXM_CC_ERROR.PROC_DT IS '처리일자';
COMMENT ON COLUMN BXM_CC_ERROR.RECEIPT_NO IS '접수번호';
COMMENT ON COLUMN BXM_CC_ERROR.EXEC_NO IS '실행번호';
COMMENT ON COLUMN BXM_CC_ERROR.TH_NO IS '회차번호';
COMMENT ON COLUMN BXM_CC_ERROR.CC_PROC_SEQ IS '센터컷처리일련번호';
COMMENT ON COLUMN BXM_CC_ERROR.SEQUENCE_PROC_KEY IS '순차처리키';
COMMENT ON COLUMN BXM_CC_ERROR.INPUT_DATA_TYPE_CD IS '입력데이터유형코드';
COMMENT ON COLUMN BXM_CC_ERROR.ERR_OCCUR_DT IS '에러발생일자';
COMMENT ON COLUMN BXM_CC_ERROR.ERR_OCCUR_TIME IS '에러발생시간';
COMMENT ON COLUMN BXM_CC_ERROR.ERR_CD IS '에러코드';
COMMENT ON COLUMN BXM_CC_ERROR.ERR_MSG_CTT IS '에러메시지내용';

CREATE TABLE BXM_CC_INPUT_DATA (
	 CC_ID VARCHAR2(10) NOT NULL,
	 PROC_DT VARCHAR2(8) NOT NULL,
	 RECEIPT_NO NUMBER(5) NOT NULL,
	 EXEC_NO NUMBER(6) NOT NULL,
	 TH_NO NUMBER(5) NOT NULL,
	 CC_PROC_SEQ NUMBER(19) NOT NULL,
	 SEQUENCE_PROC_KEY VARCHAR2(128) NULL,
	 INPUT_DATA_TYPE_CD VARCHAR2(1) NULL,
	 PROC_STATUS_CD VARCHAR2(2) NULL,
	 PROC_AMT NUMBER(18,2) NULL,
	 INPUT_DATA_LEN NUMBER(8) NULL,
	 INPUT_1_DATA VARCHAR2(4000) NULL,
	 INPUT_2_DATA VARCHAR2(4000) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_INPUT_DATA ON BXM_CC_INPUT_DATA 
( 
	 CC_ID ASC,
	 PROC_DT ASC,
	 RECEIPT_NO ASC,
	 EXEC_NO ASC,
	 TH_NO ASC,
	 CC_PROC_SEQ ASC
);

ALTER TABLE BXM_CC_INPUT_DATA ADD CONSTRAINT PK_BXM_CC_INPUT_DATA PRIMARY KEY USING INDEX PK_BXM_CC_INPUT_DATA;

COMMENT ON TABLE BXM_CC_INPUT_DATA IS 'BXM 센터컷 입력 데이터';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.CC_ID IS '센터컷ID';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.PROC_DT IS '처리일자';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.RECEIPT_NO IS '접수번호';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.EXEC_NO IS '실행번호';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.TH_NO IS '회차번호';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.CC_PROC_SEQ IS '센터컷처리일련번호';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.SEQUENCE_PROC_KEY IS '순차처리키';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.INPUT_DATA_TYPE_CD IS '입력데이터유형코드';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.PROC_STATUS_CD IS '처리상태코드';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.PROC_AMT IS '처리금액';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.INPUT_DATA_LEN IS '입력데이터길이';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.INPUT_1_DATA IS '입력1데이터';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.INPUT_2_DATA IS '입력2데이터';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.MODIFY_USER_ID IS '변경사용자ID';
COMMENT ON COLUMN BXM_CC_INPUT_DATA.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_CC_SVC_CTRL (
	 CC_ID VARCHAR2(10) NOT NULL,
	 PROC_DT VARCHAR2(8) NOT NULL,
	 RECEIPT_NO NUMBER(5) NOT NULL,
	 EXEC_NO NUMBER(6) NOT NULL,
	 TH_NO NUMBER(5) NOT NULL,
	 SERVER_SEQ NUMBER NOT NULL,
	 PROC_SEQUENCE_NO NUMBER(5) NOT NULL,
	 PROC_NODE_NO NUMBER(2) NULL,
	 PROC_STATUS_CD VARCHAR2(2) NULL,
	 SEQUENCE_PROC_KEY VARCHAR2(128) NULL,
	 START_SEQ NUMBER NULL,
	 END_SEQ NUMBER NULL,
	 CMPL_SEQ NUMBER NULL,
	 NORMAL_PROC_CNT NUMBER(10) NULL,
	 NORMAL_PROC_AMT NUMBER(18,2) NULL,
	 ERR_PROC_CNT NUMBER(10) NULL,
	 ERR_PROC_AMT NUMBER(18,2) NULL,
	 START_DTTM VARCHAR2(14) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_SVC_CTRL ON BXM_CC_SVC_CTRL 
( 
	 CC_ID ASC,
	 PROC_DT ASC,
	 RECEIPT_NO ASC,
	 EXEC_NO ASC,
	 TH_NO ASC,
	 SERVER_SEQ ASC,
	 PROC_SEQUENCE_NO ASC
);

ALTER TABLE BXM_CC_SVC_CTRL ADD CONSTRAINT PK_BXM_CC_SVC_CTRL PRIMARY KEY USING INDEX PK_BXM_CC_SVC_CTRL;

COMMENT ON TABLE BXM_CC_SVC_CTRL IS 'BXM 센터컷 서비스 관리';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.CC_ID IS '센터컷ID';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.PROC_DT IS '처리일자';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.RECEIPT_NO IS '접수번호';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.EXEC_NO IS '실행번호';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.TH_NO IS '회차번호';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.SERVER_SEQ IS '서버일련번호';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.PROC_SEQUENCE_NO IS '처리순서번호';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.PROC_NODE_NO IS '처리노드번호';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.PROC_STATUS_CD IS '처리상태코드';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.SEQUENCE_PROC_KEY IS '순차처리키';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.START_SEQ IS '시작일련번호';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.END_SEQ IS '종료일련번호';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.CMPL_SEQ IS '완료일련번호';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.NORMAL_PROC_CNT IS '정상처리건수';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.NORMAL_PROC_AMT IS '정상처리금액';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.ERR_PROC_CNT IS '오류처리건수';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.ERR_PROC_AMT IS '오류처리금액';
COMMENT ON COLUMN BXM_CC_SVC_CTRL.START_DTTM IS '시작일시';

CREATE TABLE BXM_CC_WOR_STATUS (
	 CC_ID VARCHAR2(10) NOT NULL,
	 PROC_DT VARCHAR2(8) NOT NULL,
	 RECEIPT_NO NUMBER(5) NOT NULL,
	 EXEC_NO NUMBER(6) NOT NULL,
	 TH_NO NUMBER(5) NOT NULL,
	 PROC_STATUS_CD VARCHAR2(2) NOT NULL,
	 FIRST_START_DT VARCHAR2(8) NULL,
	 FIRST_START_TIME VARCHAR2(6) NULL,
	 RE_START_DT VARCHAR2(8) NULL,
	 RE_START_TIME VARCHAR2(6) NULL,
	 END_DT VARCHAR2(8) NULL,
	 END_TIME VARCHAR2(6) NULL,
	 MAX_PROC_CNT NUMBER(10) NULL,
	 LAST_PROC_NO NUMBER(15) NULL,
	 TOTAL_TARGET_CNT NUMBER(10) NULL,
	 TOTAL_TARGET_AMT NUMBER(18,2) NULL,
	 NORMAL_PROC_CNT NUMBER(10) NULL,
	 NORMAL_PROC_AMT NUMBER(18,2) NULL,
	 ERR_PROC_CNT NUMBER(10) NULL,
	 ERR_PROC_AMT NUMBER(18,2) NULL,
	 DEL_PROC_CNT NUMBER(10) NULL,
	 DEL_PROC_AMT NUMBER(18,2) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_WOR_STATUS ON BXM_CC_WOR_STATUS 
( 
	 CC_ID ASC,
	 PROC_DT ASC,
	 RECEIPT_NO ASC,
	 EXEC_NO ASC,
	 TH_NO ASC
);

ALTER TABLE BXM_CC_WOR_STATUS ADD CONSTRAINT PK_BXM_CC_WOR_STATUS PRIMARY KEY USING INDEX PK_BXM_CC_WOR_STATUS;

COMMENT ON TABLE BXM_CC_WOR_STATUS IS 'BXM 센터컷 작업 상태';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.CC_ID IS '센터컷ID';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.PROC_DT IS '처리일자';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.RECEIPT_NO IS '접수번호';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.EXEC_NO IS '실행번호';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.TH_NO IS '회차번호';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.PROC_STATUS_CD IS '처리상태코드';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.FIRST_START_DT IS '최초시작일자';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.FIRST_START_TIME IS '최초시작시간';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.RE_START_DT IS '재시작일자';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.RE_START_TIME IS '재시작시간';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.END_DT IS '종료일자';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.END_TIME IS '종료시간';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.MAX_PROC_CNT IS '최대처리건수';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.LAST_PROC_NO IS '최종처리번호';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.TOTAL_TARGET_CNT IS '총대상건수';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.TOTAL_TARGET_AMT IS '총대상금액';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.NORMAL_PROC_CNT IS '정상처리건수';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.NORMAL_PROC_AMT IS '정상처리금액';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.ERR_PROC_CNT IS '오류처리건수';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.ERR_PROC_AMT IS '오류처리금액';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.DEL_PROC_CNT IS '삭제처리건수';
COMMENT ON COLUMN BXM_CC_WOR_STATUS.DEL_PROC_AMT IS '삭제처리금액';

CREATE TABLE TABLE (
);

CREATE UNIQUE INDEX PK_TABLE ON TABLE 
( 
);

ALTER TABLE TABLE ADD CONSTRAINT PK_TABLE PRIMARY KEY USING INDEX PK_TABLE;

COMMENT ON TABLE TABLE IS '새 테이블';

CREATE TABLE TABLE2 (
);

CREATE UNIQUE INDEX PK_TABLE2 ON TABLE2 
( 
);

ALTER TABLE TABLE2 ADD CONSTRAINT PK_TABLE2 PRIMARY KEY USING INDEX PK_TABLE2;

COMMENT ON TABLE TABLE2 IS '새 테이블2';

CREATE TABLE TABLE4 (
);

CREATE UNIQUE INDEX PK_TABLE4 ON TABLE4 
( 
);

ALTER TABLE TABLE4 ADD CONSTRAINT PK_TABLE4 PRIMARY KEY USING INDEX PK_TABLE4;

COMMENT ON TABLE TABLE4 IS '새 테이블3';

CREATE TABLE BXM_SCHEDULE_INFO (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_NM VARCHAR2(200) NOT NULL,
	 JOB_ID VARCHAR2(100) NULL,
	 JOB_EXEC_TYPE_CD VARCHAR2(1) NULL,
	 USE_YN VARCHAR2(1) NOT NULL,
	 SCHEDULE_USE_START_DT VARCHAR2(8) NULL,
	 SCHEDULE_USE_END_DT VARCHAR2(8) NULL,
	 SCHEDULE_GRP_ID VARCHAR2(100) NOT NULL,
	 ERR_PROC_CD VARCHAR2(2) NOT NULL,
	 RE_EXEC_CNT NUMBER(3) NULL,
	 RE_EXEC_INTERVAL_SEC NUMBER(4) NULL,
	 EXPECTED_ELAPSED_TIME_SEC NUMBER(5) NULL,
	 START_DELAY_PROC_YN VARCHAR2(1) NOT NULL,
	 START_DELAY_WAIT_SEC NUMBER(4) NULL,
	 CMPL_DELAY_PROC_YN VARCHAR2(1) NOT NULL,
	 CMPL_DELAY_WAIT_SEC NUMBER(4) NULL,
	 ALARM_USE_YN VARCHAR2(1) NOT NULL,
	 CONCURR_EXEC_USE_YN VARCHAR2(1) NOT NULL,
	 IMPORTANCE_CD VARCHAR2(1) NOT NULL,
	 MEM_VAL VARCHAR2(200) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NOT NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_INFO ON BXM_SCHEDULE_INFO 
( 
	 SYS_ID ASC,
	 SCHEDULE_ID ASC
);

ALTER TABLE BXM_SCHEDULE_INFO ADD CONSTRAINT PK_BXM_SCHEDULE_INFO PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_INFO;

COMMENT ON TABLE BXM_SCHEDULE_INFO IS 'BXM 스케줄 정보';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.SCHEDULE_NM IS '스케줄명';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.JOB_ID IS '배치작업ID';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.JOB_EXEC_TYPE_CD IS '배치작업실행유형코드';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.SCHEDULE_USE_START_DT IS '스케줄허용시작일자';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.SCHEDULE_USE_END_DT IS '스케줄허용종료일자';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.SCHEDULE_GRP_ID IS '스케줄그룹ID';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.ERR_PROC_CD IS '에러처리코드';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.RE_EXEC_CNT IS '재실행수';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.RE_EXEC_INTERVAL_SEC IS '재실행주기초';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.EXPECTED_ELAPSED_TIME_SEC IS '예정경과시간초';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.START_DELAY_PROC_YN IS '시작지연처리여부';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.START_DELAY_WAIT_SEC IS '시작지연대기초';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.CMPL_DELAY_PROC_YN IS '완료지연처리여부';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.CMPL_DELAY_WAIT_SEC IS '완료지연대기초';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.ALARM_USE_YN IS '알람사용여부';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.CONCURR_EXEC_USE_YN IS '동시실행가능여부';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.IMPORTANCE_CD IS '중요도코드';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.MEM_VAL IS '메모리값';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.MODIFY_USER_ID IS '변경사용자ID';
COMMENT ON COLUMN BXM_SCHEDULE_INFO.MODIFY_OCCUR_DTTM IS '변경발생일시';

CREATE TABLE BXM_SCHEDULE_ALARM (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 ALARM_CD VARCHAR2(7) NOT NULL,
	 ALARM_CTT VARCHAR2(100) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_ALARM ON BXM_SCHEDULE_ALARM 
( 
	 SYS_ID ASC,
	 SCHEDULE_ID ASC,
	 ALARM_CD ASC
);

ALTER TABLE BXM_SCHEDULE_ALARM ADD CONSTRAINT PK_BXM_SCHEDULE_ALARM PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_ALARM;

COMMENT ON TABLE BXM_SCHEDULE_ALARM IS 'BXM 스케줄 알람';
COMMENT ON COLUMN BXM_SCHEDULE_ALARM.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_ALARM.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_ALARM.ALARM_CD IS '알람코드';
COMMENT ON COLUMN BXM_SCHEDULE_ALARM.ALARM_CTT IS '알람내용';

CREATE TABLE BXM_SCHEDULE_USER (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 USER_ID VARCHAR2(16) NOT NULL,
	 SCHEDULE_USER_CD VARCHAR2(1) NOT NULL,
	 ALARM_PROC_YN VARCHAR2(1) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_USER ON BXM_SCHEDULE_USER 
( 
	 SYS_ID ASC,
	 SCHEDULE_ID ASC,
	 USER_ID ASC
);

ALTER TABLE BXM_SCHEDULE_USER ADD CONSTRAINT PK_BXM_SCHEDULE_USER PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_USER;

COMMENT ON TABLE BXM_SCHEDULE_USER IS 'BXM 스케줄 담당자';
COMMENT ON COLUMN BXM_SCHEDULE_USER.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_USER.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_USER.USER_ID IS '담당자ID';
COMMENT ON COLUMN BXM_SCHEDULE_USER.SCHEDULE_USER_CD IS '스케줄담당자코드';
COMMENT ON COLUMN BXM_SCHEDULE_USER.ALARM_PROC_YN IS '알람처리여부';

CREATE TABLE BXM_SCHEDULE_PARAM (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 PARAM_SEQ NUMBER(3) NOT NULL,
	 PARAM_CD VARCHAR2(10) NOT NULL,
	 PARAM_VAL VARCHAR2(200) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_PARAM ON BXM_SCHEDULE_PARAM 
( 
	 SYS_ID ASC,
	 SCHEDULE_ID ASC,
	 PARAM_SEQ ASC
);

ALTER TABLE BXM_SCHEDULE_PARAM ADD CONSTRAINT PK_BXM_SCHEDULE_PARAM PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_PARAM;

COMMENT ON TABLE BXM_SCHEDULE_PARAM IS 'BXM 스케줄 파라미터';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM.PARAM_SEQ IS '파라미터일련번호';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM.PARAM_CD IS '파라미터코드';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM.PARAM_VAL IS '파라미터값';

CREATE TABLE BXM_SCHEDULE_PARAM_CD (
	 PARAM_CD VARCHAR2(10) NOT NULL,
	 PARAM_CD_NM VARCHAR2(50) NOT NULL,
	 PARAM_TYPE_CD VARCHAR2(2) NOT NULL,
	 CD_PROC_KEY VARCHAR2(4000) NULL,
	 FIXED_INPUT_VAL VARCHAR2(100) NULL,
	 MODIF_USE_YN VARCHAR2(1) NULL,
	 AUTO_REG_YN VARCHAR2(1) NULL,
	 AUTO_REG_SEQ NUMBER NULL,
	 CURR_PARAM_VAL VARCHAR2(200) NULL,
	 CD_DESC VARCHAR2(512) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_PARAM_CD ON BXM_SCHEDULE_PARAM_CD 
( 
	 PARAM_CD ASC
);

ALTER TABLE BXM_SCHEDULE_PARAM_CD ADD CONSTRAINT PK_BXM_SCHEDULE_PARAM_CD PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_PARAM_CD;

COMMENT ON TABLE BXM_SCHEDULE_PARAM_CD IS 'BXM 스케줄 파라미터 코드';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM_CD.PARAM_CD IS '파라미터코드';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM_CD.PARAM_CD_NM IS '파라미터코드명';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM_CD.PARAM_TYPE_CD IS '파라미터유형코드';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM_CD.CD_PROC_KEY IS '코드처리키';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM_CD.FIXED_INPUT_VAL IS '고정입력값';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM_CD.MODIF_USE_YN IS '수정가능여부';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM_CD.AUTO_REG_YN IS '자동등록여부';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM_CD.AUTO_REG_SEQ IS '자동등록일련번호';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM_CD.CURR_PARAM_VAL IS '현재파라미터값';
COMMENT ON COLUMN BXM_SCHEDULE_PARAM_CD.CD_DESC IS '코드설명';

CREATE TABLE BXM_SCHEDULE_FILE (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 PATTERN_SEQ NUMBER(1) NOT NULL,
	 FILE_PATH VARCHAR2(2048) NOT NULL,
	 FILE_NM_PATTERN VARCHAR2(512) NOT NULL,
	 FILE_SIZE_CHECK_INTERVAL_SEC NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_FILE ON BXM_SCHEDULE_FILE 
( 
	 SYS_ID ASC,
	 SCHEDULE_ID ASC,
	 PATTERN_SEQ ASC
);

ALTER TABLE BXM_SCHEDULE_FILE ADD CONSTRAINT PK_BXM_SCHEDULE_FILE PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_FILE;

COMMENT ON TABLE BXM_SCHEDULE_FILE IS 'BXM 스케줄 파일';
COMMENT ON COLUMN BXM_SCHEDULE_FILE.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_FILE.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_FILE.PATTERN_SEQ IS '패턴일련번호';
COMMENT ON COLUMN BXM_SCHEDULE_FILE.FILE_PATH IS '파일경로';
COMMENT ON COLUMN BXM_SCHEDULE_FILE.FILE_NM_PATTERN IS '파일명패턴';
COMMENT ON COLUMN BXM_SCHEDULE_FILE.FILE_SIZE_CHECK_INTERVAL_SEC IS '파일크기체크주기초';

CREATE TABLE BXM_SCHEDULE_TYPE (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_TYPE_CD VARCHAR2(3) NOT NULL,
	 SCHEDULE_SUB_CD VARCHAR2(10) NOT NULL,
	 SCHEDULE_1_VAL VARCHAR2(128) NULL,
	 SCHEDULE_2_VAL VARCHAR2(128) NULL,
	 SCHEDULE_3_VAL VARCHAR2(128) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_TYPE ON BXM_SCHEDULE_TYPE 
( 
	 SYS_ID ASC,
	 SCHEDULE_ID ASC
);

ALTER TABLE BXM_SCHEDULE_TYPE ADD CONSTRAINT PK_BXM_SCHEDULE_TYPE PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_TYPE;

COMMENT ON TABLE BXM_SCHEDULE_TYPE IS 'BXM 스케줄 유형';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE.SCHEDULE_TYPE_CD IS '스케줄유형코드';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE.SCHEDULE_SUB_CD IS '스케줄서브코드';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE.SCHEDULE_1_VAL IS '스케줄1값';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE.SCHEDULE_2_VAL IS '스케줄2값';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE.SCHEDULE_3_VAL IS '스케줄3값';

CREATE TABLE BXM_SCHEDULE_TYPE_CD (
	 SCHEDULE_TYPE_CD VARCHAR2(3) NOT NULL,
	 SCHEDULE_SUB_CD VARCHAR2(10) NOT NULL,
	 CD_NM VARCHAR2(128) NOT NULL,
	 LANG_CD VARCHAR2(2) NOT NULL,
	 CD_DESC VARCHAR2(512) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_TYPE_CD ON BXM_SCHEDULE_TYPE_CD 
( 
	 SCHEDULE_TYPE_CD ASC,
	 SCHEDULE_SUB_CD ASC
);

ALTER TABLE BXM_SCHEDULE_TYPE_CD ADD CONSTRAINT PK_BXM_SCHEDULE_TYPE_CD PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_TYPE_CD;

COMMENT ON TABLE BXM_SCHEDULE_TYPE_CD IS 'BXM 스케줄 유형 코드';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE_CD.SCHEDULE_TYPE_CD IS '스케줄유형코드';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE_CD.SCHEDULE_SUB_CD IS '스케줄서브코드';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE_CD.CD_NM IS '코드명';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE_CD.LANG_CD IS '언어코드';
COMMENT ON COLUMN BXM_SCHEDULE_TYPE_CD.CD_DESC IS '코드설명';

CREATE TABLE BXM_SCHEDULE_GRP (
	 SCHEDULE_GRP_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_GRP_NM VARCHAR2(200) NOT NULL,
	 SYS_ID VARCHAR2(100) NOT NULL,
	 PARENT_SCHEDULE_GRP_ID VARCHAR2(100) NULL,
	 SCHEDULE_GRP_DESC VARCHAR2(512) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_GRP ON BXM_SCHEDULE_GRP 
( 
	 SCHEDULE_GRP_ID ASC
);

ALTER TABLE BXM_SCHEDULE_GRP ADD CONSTRAINT PK_BXM_SCHEDULE_GRP PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_GRP;

COMMENT ON TABLE BXM_SCHEDULE_GRP IS 'BXM 스케줄 그룹';
COMMENT ON COLUMN BXM_SCHEDULE_GRP.SCHEDULE_GRP_ID IS '스케줄그룹ID';
COMMENT ON COLUMN BXM_SCHEDULE_GRP.SCHEDULE_GRP_NM IS '스케줄그룹명';
COMMENT ON COLUMN BXM_SCHEDULE_GRP.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_GRP.PARENT_SCHEDULE_GRP_ID IS '상위스케줄그룹ID';
COMMENT ON COLUMN BXM_SCHEDULE_GRP.SCHEDULE_GRP_DESC IS '스케줄그룹설명';

CREATE TABLE BXM_SCHEDULE_PREPOST_GRP (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 PREPOST_GRP_ID VARCHAR2(100) NOT NULL,
	 PREPOST_GRP_NM VARCHAR2(200) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_PREPOST_GRP ON BXM_SCHEDULE_PREPOST_GRP 
( 
	 SYS_ID ASC,
	 PREPOST_GRP_ID ASC
);

ALTER TABLE BXM_SCHEDULE_PREPOST_GRP ADD CONSTRAINT PK_BXM_SCHEDULE_PREPOST_GRP PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_PREPOST_GRP;

COMMENT ON TABLE BXM_SCHEDULE_PREPOST_GRP IS 'BXM 스케줄 선/후행 그룹';
COMMENT ON COLUMN BXM_SCHEDULE_PREPOST_GRP.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_PREPOST_GRP.PREPOST_GRP_ID IS '선후행그룹ID';
COMMENT ON COLUMN BXM_SCHEDULE_PREPOST_GRP.PREPOST_GRP_NM IS '선후행그룹명';

CREATE TABLE BXM_SCHEDULE_PREPOST_REL (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 PRE_SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 PRE_WORK_CHECK_CD VARCHAR2(7) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_PREPOST_REL ON BXM_SCHEDULE_PREPOST_REL 
( 
	 SYS_ID ASC,
	 PRE_SCHEDULE_ID ASC,
	 SCHEDULE_ID ASC
);

ALTER TABLE BXM_SCHEDULE_PREPOST_REL ADD CONSTRAINT PK_BXM_SCHEDULE_PREPOST_REL PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_PREPOST_REL;

COMMENT ON TABLE BXM_SCHEDULE_PREPOST_REL IS 'BXM 스케줄 선/후행 관계';
COMMENT ON COLUMN BXM_SCHEDULE_PREPOST_REL.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_PREPOST_REL.PRE_SCHEDULE_ID IS '선스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_PREPOST_REL.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_PREPOST_REL.PRE_WORK_CHECK_CD IS '선작업체크코드';

CREATE TABLE BXM_SCHEDULE_TIME (
	 SCHEDULE_DT VARCHAR2(8) NOT NULL,
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 SCHEDULING_CD VARCHAR2(7) NOT NULL,
	 SCHEDULE_NO NUMBER(6) NOT NULL,
	 EXPECTED_START_DT VARCHAR2(8) NULL,
	 EXPECTED_START_TIME VARCHAR2(6) NULL,
	 END_DT VARCHAR2(8) NULL,
	 END_TIME VARCHAR2(6) NULL,
	 EXEC_PARAM_CTT VARCHAR2(2000) NULL,
	 MASTER_START_YN VARCHAR2(1) NOT NULL,
	 MASTER_START_NODE_NM VARCHAR2(128) NULL,
	 CURR_PROC_STATUS_CD VARCHAR2(7) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NOT NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_TIME ON BXM_SCHEDULE_TIME 
( 
	 SCHEDULE_DT ASC,
	 SYS_ID ASC,
	 SCHEDULE_ID ASC,
	 SCHEDULING_CD ASC,
	 SCHEDULE_NO ASC
);

ALTER TABLE BXM_SCHEDULE_TIME ADD CONSTRAINT PK_BXM_SCHEDULE_TIME PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_TIME;

COMMENT ON TABLE BXM_SCHEDULE_TIME IS 'BXM 스케줄 타임';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.SCHEDULE_DT IS '스케줄일자';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.SCHEDULING_CD IS '스케줄링코드';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.SCHEDULE_NO IS '스케줄번호';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.EXPECTED_START_DT IS '예정시작일자';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.EXPECTED_START_TIME IS '예정시작시간';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.END_DT IS '종료일자';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.END_TIME IS '종료시간';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.EXEC_PARAM_CTT IS '실행파라미터내용';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.MASTER_START_YN IS '마스터시작여부';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.MASTER_START_NODE_NM IS '마스터시작노드명';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.CURR_PROC_STATUS_CD IS '현재처리상태코드';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.MODIFY_USER_ID IS '변경사용자ID';
COMMENT ON COLUMN BXM_SCHEDULE_TIME.MODIFY_OCCUR_DTTM IS '변경발생일시';

CREATE TABLE BXM_SCHEDULE_EXEC (
	 SCHEDULE_DT VARCHAR2(8) NOT NULL,
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 SCHEDULING_CD VARCHAR2(7) NOT NULL,
	 SCHEDULE_NO NUMBER(6) NOT NULL,
	 EXEC_NO NUMBER(6) NOT NULL,
	 SCHEDULE_EXEC_ID VARCHAR2(200) NOT NULL,
	 START_DT VARCHAR2(8) NOT NULL,
	 START_TIME VARCHAR2(6) NOT NULL,
	 END_DT VARCHAR2(8) NULL,
	 END_TIME VARCHAR2(6) NULL,
	 PROC_STATUS_CD VARCHAR2(7) NOT NULL,
	 NODE_NM VARCHAR2(128) NULL,
	 PID VARCHAR2(42) NULL,
	 EXEC_PARAM_CTT VARCHAR2(2000) NOT NULL,
	 LOG_FILE_NM VARCHAR2(512) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_EXEC ON BXM_SCHEDULE_EXEC 
( 
	 SCHEDULE_DT ASC,
	 SYS_ID ASC,
	 SCHEDULE_ID ASC,
	 SCHEDULING_CD ASC,
	 SCHEDULE_NO ASC,
	 EXEC_NO ASC
);

ALTER TABLE BXM_SCHEDULE_EXEC ADD CONSTRAINT PK_BXM_SCHEDULE_EXEC PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_EXEC;

COMMENT ON TABLE BXM_SCHEDULE_EXEC IS 'BXM 스케줄 실행';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.SCHEDULE_DT IS '스케줄일자';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.SCHEDULING_CD IS '스케줄링코드';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.SCHEDULE_NO IS '스케줄번호';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.EXEC_NO IS '실행번호';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.SCHEDULE_EXEC_ID IS '스케줄실행ID';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.START_DT IS '시작일자';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.START_TIME IS '시작시간';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.END_DT IS '종료일자';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.END_TIME IS '종료시간';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.PROC_STATUS_CD IS '처리상태코드';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.NODE_NM IS '노드명';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.PID IS 'PID';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.EXEC_PARAM_CTT IS '실행파라미터내용';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC.LOG_FILE_NM IS '로그파일명';

CREATE TABLE BXM_SCHEDULE_FILE_HIST (
	 REG_DT VARCHAR2(8) NOT NULL,
	 FILE_NM VARCHAR2(512) NOT NULL,
	 REG_TIME VARCHAR2(6) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 PATTERN_SEQ NUMBER(1) NOT NULL,
	 SYS_ID VARCHAR2(100) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_FILE_HIST ON BXM_SCHEDULE_FILE_HIST 
( 
	 REG_DT ASC,
	 FILE_NM ASC
);

ALTER TABLE BXM_SCHEDULE_FILE_HIST ADD CONSTRAINT PK_BXM_SCHEDULE_FILE_HIST PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_FILE_HIST;

COMMENT ON TABLE BXM_SCHEDULE_FILE_HIST IS 'BXM 스케줄 파일 이력';
COMMENT ON COLUMN BXM_SCHEDULE_FILE_HIST.REG_DT IS '등록일자';
COMMENT ON COLUMN BXM_SCHEDULE_FILE_HIST.FILE_NM IS '파일명';
COMMENT ON COLUMN BXM_SCHEDULE_FILE_HIST.REG_TIME IS '등록시간';
COMMENT ON COLUMN BXM_SCHEDULE_FILE_HIST.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_FILE_HIST.PATTERN_SEQ IS '패턴일련번호';
COMMENT ON COLUMN BXM_SCHEDULE_FILE_HIST.SYS_ID IS '시스템ID';

CREATE TABLE BXM_SCHEDULE_NODE (
	 NODE_NM VARCHAR2(128) NOT NULL,
	 MAX_EXEC_CNT NUMBER(3) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_NODE ON BXM_SCHEDULE_NODE 
( 
	 NODE_NM ASC
);

ALTER TABLE BXM_SCHEDULE_NODE ADD CONSTRAINT PK_BXM_SCHEDULE_NODE PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_NODE;

COMMENT ON TABLE BXM_SCHEDULE_NODE IS 'BXM 스케줄 노드';
COMMENT ON COLUMN BXM_SCHEDULE_NODE.NODE_NM IS '노드명';
COMMENT ON COLUMN BXM_SCHEDULE_NODE.MAX_EXEC_CNT IS '최대실행수';

CREATE TABLE BXM_SCHEDULE_CTRL (
	 CTRL_TYPE_CD VARCHAR2(7) NOT NULL,
	 CTRL_VAL VARCHAR2(128) NOT NULL,
	 STOP_YN VARCHAR2(1) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_CTRL ON BXM_SCHEDULE_CTRL 
( 
	 CTRL_TYPE_CD ASC,
	 CTRL_VAL ASC
);

ALTER TABLE BXM_SCHEDULE_CTRL ADD CONSTRAINT PK_BXM_SCHEDULE_CTRL PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_CTRL;

COMMENT ON TABLE BXM_SCHEDULE_CTRL IS 'BXM 스케줄 제어';
COMMENT ON COLUMN BXM_SCHEDULE_CTRL.CTRL_TYPE_CD IS '제어유형코드';
COMMENT ON COLUMN BXM_SCHEDULE_CTRL.CTRL_VAL IS '제어값';
COMMENT ON COLUMN BXM_SCHEDULE_CTRL.STOP_YN IS '중지여부';

CREATE TABLE BXM_SCHEDULE_INSTANCE (
	 INSTANCE_TYPE VARCHAR2(100) NOT NULL,
	 SCHEDULE_GRP_NM VARCHAR2(200) NOT NULL,
	 SCHEDULE_GRP_DESC VARCHAR2(512) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_INSTANCE ON BXM_SCHEDULE_INSTANCE 
( 
	 INSTANCE_TYPE ASC
);

ALTER TABLE BXM_SCHEDULE_INSTANCE ADD CONSTRAINT PK_BXM_SCHEDULE_INSTANCE PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_INSTANCE;

COMMENT ON TABLE BXM_SCHEDULE_INSTANCE IS 'BXM 스케줄 인스턴스';
COMMENT ON COLUMN BXM_SCHEDULE_INSTANCE.INSTANCE_TYPE IS '인스턴스유형';
COMMENT ON COLUMN BXM_SCHEDULE_INSTANCE.SCHEDULE_GRP_NM IS '스케줄그룹명';
COMMENT ON COLUMN BXM_SCHEDULE_INSTANCE.SCHEDULE_GRP_DESC IS '스케줄그룹설명';

CREATE TABLE BXM_DNI_METHOD_PARAM (
	 METHOD_ID VARCHAR2(40) NOT NULL,
	 PARAM_FQN VARCHAR2(1024) NOT NULL,
	 PARAM_SEQ NUMBER NULL,
	 PARAM_TYPE_CD VARCHAR2(1) NOT NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DNI_METHOD_PARAM ON BXM_DNI_METHOD_PARAM 
( 
);

ALTER TABLE BXM_DNI_METHOD_PARAM ADD CONSTRAINT PK_BXM_DNI_METHOD_PARAM PRIMARY KEY USING INDEX PK_BXM_DNI_METHOD_PARAM;

COMMENT ON TABLE BXM_DNI_METHOD_PARAM IS '메소드 파라미터 정보';
COMMENT ON COLUMN BXM_DNI_METHOD_PARAM.METHOD_ID IS '메소드 ID';
COMMENT ON COLUMN BXM_DNI_METHOD_PARAM.PARAM_FQN IS '파라미터 FQN';
COMMENT ON COLUMN BXM_DNI_METHOD_PARAM.PARAM_SEQ IS '파라미터 일련번호';
COMMENT ON COLUMN BXM_DNI_METHOD_PARAM.PARAM_TYPE_CD IS '파라미터 타입 코드';
COMMENT ON COLUMN BXM_DNI_METHOD_PARAM.MODIFY_DTTM IS '변경 일시';

CREATE TABLE BXM_SCHEDULE_AGENT (
	 AGENT_ID VARCHAR2(128) NOT NULL,
	 AGENT_CONN_URL VARCHAR2(512) NOT NULL,
	 NODE_NM VARCHAR2(128) NOT NULL,
	 AGENT_STATUS_CD VARCHAR2(7) NOT NULL,
	 SCHEDULE_EXEC_CNT NUMBER(3) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_AGENT ON BXM_SCHEDULE_AGENT 
( 
	 AGENT_ID ASC,
	 AGENT_CONN_URL ASC
);

ALTER TABLE BXM_SCHEDULE_AGENT ADD CONSTRAINT PK_BXM_SCHEDULE_AGENT PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_AGENT;

COMMENT ON TABLE BXM_SCHEDULE_AGENT IS 'BXM 스케줄 에이전트';
COMMENT ON COLUMN BXM_SCHEDULE_AGENT.AGENT_ID IS '에이전트ID';
COMMENT ON COLUMN BXM_SCHEDULE_AGENT.AGENT_CONN_URL IS '에이전트접속URL';
COMMENT ON COLUMN BXM_SCHEDULE_AGENT.NODE_NM IS '노드명';
COMMENT ON COLUMN BXM_SCHEDULE_AGENT.AGENT_STATUS_CD IS '에이전트상태코드';
COMMENT ON COLUMN BXM_SCHEDULE_AGENT.SCHEDULE_EXEC_CNT IS '스케줄실행수';

CREATE TABLE BXM_SCHEDULE_DATE (
	 SCHEDULE_DT VARCHAR2(8) NOT NULL,
	 SCHEDULE_DTCHG_CD VARCHAR2(3) NOT NULL,
	 START_DTTM VARCHAR2(14) NOT NULL,
	 END_DTTM VARCHAR2(14) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_DATE ON BXM_SCHEDULE_DATE 
( 
	 SCHEDULE_DT ASC
);

ALTER TABLE BXM_SCHEDULE_DATE ADD CONSTRAINT PK_BXM_SCHEDULE_DATE PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_DATE;

COMMENT ON TABLE BXM_SCHEDULE_DATE IS 'BXM 스케줄 일자';
COMMENT ON COLUMN BXM_SCHEDULE_DATE.SCHEDULE_DT IS '스케줄일자';
COMMENT ON COLUMN BXM_SCHEDULE_DATE.SCHEDULE_DTCHG_CD IS '스케줄일자변경코드';
COMMENT ON COLUMN BXM_SCHEDULE_DATE.START_DTTM IS '시작일시';
COMMENT ON COLUMN BXM_SCHEDULE_DATE.END_DTTM IS '종료일시';

CREATE TABLE BXM_SCHEDULE_EVENT (
	 OCCUR_DTTM VARCHAR2(14) NOT NULL,
	 OCCUR_TYPE_CD VARCHAR2(3) NOT NULL,
	 SYS_ID VARCHAR2(100) NULL,
	 SCHEDULE_ID VARCHAR2(100) NULL,
	 ALARM_CD VARCHAR2(7) NULL,
	 IMPORTANCE_CD VARCHAR2(1) NULL,
	 EVENT_CTT VARCHAR2(2000) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_EVENT ON BXM_SCHEDULE_EVENT 
( 
);

ALTER TABLE BXM_SCHEDULE_EVENT ADD CONSTRAINT PK_BXM_SCHEDULE_EVENT PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_EVENT;

COMMENT ON TABLE BXM_SCHEDULE_EVENT IS 'BXM 스케줄 이벤트';
COMMENT ON COLUMN BXM_SCHEDULE_EVENT.OCCUR_DTTM IS '발생일시';
COMMENT ON COLUMN BXM_SCHEDULE_EVENT.OCCUR_TYPE_CD IS '발생유형코드';
COMMENT ON COLUMN BXM_SCHEDULE_EVENT.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_EVENT.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_EVENT.ALARM_CD IS '알람코드';
COMMENT ON COLUMN BXM_SCHEDULE_EVENT.IMPORTANCE_CD IS '중요도코드';
COMMENT ON COLUMN BXM_SCHEDULE_EVENT.EVENT_CTT IS '이벤트내용';

CREATE TABLE BXM_DBIO_QUERY (
	 GUID VARCHAR2(40) NULL,
	 NAMESPACE VARCHAR2(256) NULL,
	 SQL_ID VARCHAR2(512) NULL,
	 SQL_TYPE_CD VARCHAR2(1) NULL,
	 DBIO_PATH VARCHAR2(512) NULL,
	 BXM_APP_ID VARCHAR2(40) NULL,
	 EXEC_QUERY CLOB NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DBIO_QUERY ON BXM_DBIO_QUERY 
( 
);

ALTER TABLE BXM_DBIO_QUERY ADD CONSTRAINT PK_BXM_DBIO_QUERY PRIMARY KEY USING INDEX PK_BXM_DBIO_QUERY;

COMMENT ON TABLE BXM_DBIO_QUERY IS 'BXM DBIO 쿼리';
COMMENT ON COLUMN BXM_DBIO_QUERY.GUID IS 'GUID';
COMMENT ON COLUMN BXM_DBIO_QUERY.NAMESPACE IS 'NAMESPACE';
COMMENT ON COLUMN BXM_DBIO_QUERY.SQL_ID IS 'SQLID';
COMMENT ON COLUMN BXM_DBIO_QUERY.SQL_TYPE_CD IS 'SQL구분코드';
COMMENT ON COLUMN BXM_DBIO_QUERY.DBIO_PATH IS 'DBIO경로';
COMMENT ON COLUMN BXM_DBIO_QUERY.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_DBIO_QUERY.EXEC_QUERY IS '실행쿼리';
COMMENT ON COLUMN BXM_DBIO_QUERY.MODIFY_DTTM IS '변경일시';

CREATE TABLE BXM_SCHEDULE_SYS (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SYS_NM VARCHAR2(200) NOT NULL,
	 PARENT_SYS_ID VARCHAR2(100) NULL,
	 SYS_DESC VARCHAR2(512) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_SYS ON BXM_SCHEDULE_SYS 
( 
	 SYS_ID ASC
);

ALTER TABLE BXM_SCHEDULE_SYS ADD CONSTRAINT PK_BXM_SCHEDULE_SYS PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_SYS;

COMMENT ON TABLE BXM_SCHEDULE_SYS IS 'BXM 스케줄 시스템';
COMMENT ON COLUMN BXM_SCHEDULE_SYS.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_SYS.SYS_NM IS '시스템명';
COMMENT ON COLUMN BXM_SCHEDULE_SYS.PARENT_SYS_ID IS '상위시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_SYS.SYS_DESC IS '시스템설명';

CREATE TABLE BXM_SCHEDULE_SYS_NODE (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 NODE_NM VARCHAR2(128) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_SYS_NODE ON BXM_SCHEDULE_SYS_NODE 
( 
	 SYS_ID ASC,
	 NODE_NM ASC
);

ALTER TABLE BXM_SCHEDULE_SYS_NODE ADD CONSTRAINT PK_BXM_SCHEDULE_SYS_NODE PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_SYS_NODE;

COMMENT ON TABLE BXM_SCHEDULE_SYS_NODE IS 'BXM 스케줄 시스템 노드';
COMMENT ON COLUMN BXM_SCHEDULE_SYS_NODE.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_SYS_NODE.NODE_NM IS '노드명';

CREATE TABLE BXM_SCHEDULE_TIME_HIST (
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NOT NULL,
	 SCHEDULE_DT VARCHAR2(8) NOT NULL,
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 SCHEDULING_CD VARCHAR2(7) NOT NULL,
	 SCHEDULE_NO NUMBER(6) NOT NULL,
	 EXPECTED_START_DT VARCHAR2(8) NULL,
	 EXPECTED_START_TIME VARCHAR2(6) NULL,
	 EXEC_PARAM_CTT VARCHAR2(2000) NOT NULL,
	 LAST_PROC_STATUS_CD VARCHAR2(7) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_TIME_HIST ON BXM_SCHEDULE_TIME_HIST 
( 
);

ALTER TABLE BXM_SCHEDULE_TIME_HIST ADD CONSTRAINT PK_BXM_SCHEDULE_TIME_HIST PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_TIME_HIST;

COMMENT ON TABLE BXM_SCHEDULE_TIME_HIST IS 'BXM 스케줄 타임 이력';
COMMENT ON COLUMN BXM_SCHEDULE_TIME_HIST.MODIFY_OCCUR_DTTM IS '변경발생일시';
COMMENT ON COLUMN BXM_SCHEDULE_TIME_HIST.SCHEDULE_DT IS '스케줄일자';
COMMENT ON COLUMN BXM_SCHEDULE_TIME_HIST.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_TIME_HIST.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_TIME_HIST.SCHEDULING_CD IS '스케줄링코드';
COMMENT ON COLUMN BXM_SCHEDULE_TIME_HIST.SCHEDULE_NO IS '스케줄번호';
COMMENT ON COLUMN BXM_SCHEDULE_TIME_HIST.EXPECTED_START_DT IS '예정시작일자';
COMMENT ON COLUMN BXM_SCHEDULE_TIME_HIST.EXPECTED_START_TIME IS '예정시작시간';
COMMENT ON COLUMN BXM_SCHEDULE_TIME_HIST.EXEC_PARAM_CTT IS '실행파라미터내용';
COMMENT ON COLUMN BXM_SCHEDULE_TIME_HIST.LAST_PROC_STATUS_CD IS '최종처리상태코드';
COMMENT ON COLUMN BXM_SCHEDULE_TIME_HIST.MODIFY_USER_ID IS '변경사용자ID';

CREATE TABLE BXM_SCHEDULE_EXEC_EXPECT (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 PREV_EXEC_DT VARCHAR2(8) NULL,
	 PREV_EXEC_TIME VARCHAR2(6) NULL,
	 EXPECTED_START_DT VARCHAR2(8) NOT NULL,
	 EXPECTED_START_TIME VARCHAR2(6) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_EXEC_EXPECT ON BXM_SCHEDULE_EXEC_EXPECT 
( 
	 SYS_ID ASC,
	 SCHEDULE_ID ASC
);

ALTER TABLE BXM_SCHEDULE_EXEC_EXPECT ADD CONSTRAINT PK_BXM_SCHEDULE_EXEC_EXPECT PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_EXEC_EXPECT;

COMMENT ON TABLE BXM_SCHEDULE_EXEC_EXPECT IS 'BXM 스케줄 실행 예정';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC_EXPECT.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC_EXPECT.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC_EXPECT.PREV_EXEC_DT IS '직전실행일자';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC_EXPECT.PREV_EXEC_TIME IS '직전실행시간';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC_EXPECT.EXPECTED_START_DT IS '예정시작일자';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC_EXPECT.EXPECTED_START_TIME IS '예정시작시간';

CREATE TABLE BXM_JOB_APP_LOG (
	 JOB_EXECUTION_ID NUMBER(19) NOT NULL,
	 JOB_ID VARCHAR2(100) NOT NULL,
	 LOG_SEQ NUMBER(19) NOT NULL,
	 STEP_EXECUTION_ID NUMBER(19) NOT NULL,
	 STEP_NAME VARCHAR2(100) NOT NULL,
	 LOG_OCCUR_DTTM VARCHAR2(14) NOT NULL,
	 APP_LOG_CTT VARCHAR2(4000) NULL
);

CREATE UNIQUE INDEX PK_BXM_JOB_APP_LOG ON BXM_JOB_APP_LOG 
( 
);

ALTER TABLE BXM_JOB_APP_LOG ADD CONSTRAINT PK_BXM_JOB_APP_LOG PRIMARY KEY USING INDEX PK_BXM_JOB_APP_LOG;

COMMENT ON TABLE BXM_JOB_APP_LOG IS 'BXM 배치 작업 어플리케이선 로그';
COMMENT ON COLUMN BXM_JOB_APP_LOG.JOB_EXECUTION_ID IS '배치작업 실행 아이디';
COMMENT ON COLUMN BXM_JOB_APP_LOG.JOB_ID IS '배치작업ID';
COMMENT ON COLUMN BXM_JOB_APP_LOG.LOG_SEQ IS '로그일련번호';
COMMENT ON COLUMN BXM_JOB_APP_LOG.STEP_EXECUTION_ID IS '배치스텝 아이디';
COMMENT ON COLUMN BXM_JOB_APP_LOG.STEP_NAME IS '배치스텝 이름';
COMMENT ON COLUMN BXM_JOB_APP_LOG.LOG_OCCUR_DTTM IS '로그발생일시';
COMMENT ON COLUMN BXM_JOB_APP_LOG.APP_LOG_CTT IS '어플리케이션로그내용';

CREATE TABLE BXM_DBIO_QUERY_ERROR (
	 GUID VARCHAR2(40) NULL,
	 NAMESPACE VARCHAR2(256) NULL,
	 SQL_ID VARCHAR2(512) NULL,
	 SQL_TYPE_CD VARCHAR2(1) NULL,
	 DBIO_PATH VARCHAR2(512) NULL,
	 BXM_APP_ID VARCHAR2(40) NULL,
	 EXEC_QUERY CLOB NULL,
	 REG_DTTM VARCHAR2(23) NULL,
	 PARSING_DTTM VARCHAR2(23) NULL,
	 ERR_MSG VARCHAR2(4000) NULL
);

CREATE UNIQUE INDEX PK_BXM_DBIO_QUERY_ERROR ON BXM_DBIO_QUERY_ERROR 
( 
);

ALTER TABLE BXM_DBIO_QUERY_ERROR ADD CONSTRAINT PK_BXM_DBIO_QUERY_ERROR PRIMARY KEY USING INDEX PK_BXM_DBIO_QUERY_ERROR;

COMMENT ON TABLE BXM_DBIO_QUERY_ERROR IS 'BXM DBIO 쿼리 에러 내역';
COMMENT ON COLUMN BXM_DBIO_QUERY_ERROR.GUID IS 'GUID';
COMMENT ON COLUMN BXM_DBIO_QUERY_ERROR.NAMESPACE IS 'NAMESPACE';
COMMENT ON COLUMN BXM_DBIO_QUERY_ERROR.SQL_ID IS 'SQLID';
COMMENT ON COLUMN BXM_DBIO_QUERY_ERROR.SQL_TYPE_CD IS 'SQL구분코드';
COMMENT ON COLUMN BXM_DBIO_QUERY_ERROR.DBIO_PATH IS 'DBIO경로';
COMMENT ON COLUMN BXM_DBIO_QUERY_ERROR.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_DBIO_QUERY_ERROR.EXEC_QUERY IS '실행쿼리';
COMMENT ON COLUMN BXM_DBIO_QUERY_ERROR.REG_DTTM IS '등록일시';
COMMENT ON COLUMN BXM_DBIO_QUERY_ERROR.PARSING_DTTM IS '파싱일시';
COMMENT ON COLUMN BXM_DBIO_QUERY_ERROR.ERR_MSG IS '에러메시지';

CREATE TABLE BXM_SCHEDULE_PREPOST_GRP_REL (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 PREPOST_GRP_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_PREPOST_GRP_REL ON BXM_SCHEDULE_PREPOST_GRP_REL 
( 
	 SYS_ID ASC,
	 PREPOST_GRP_ID ASC,
	 SCHEDULE_ID ASC
);

ALTER TABLE BXM_SCHEDULE_PREPOST_GRP_REL ADD CONSTRAINT PK_BXM_SCHEDULE_PREPOST_GRP_REL PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_PREPOST_GRP_REL;

COMMENT ON TABLE BXM_SCHEDULE_PREPOST_GRP_REL IS 'BXM 스케줄 선/후행 그룹 관계';
COMMENT ON COLUMN BXM_SCHEDULE_PREPOST_GRP_REL.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_PREPOST_GRP_REL.PREPOST_GRP_ID IS '선후행그룹ID';
COMMENT ON COLUMN BXM_SCHEDULE_PREPOST_GRP_REL.SCHEDULE_ID IS '스케줄ID';

CREATE TABLE BXM_SCHEDULE_EXEC_TIME_STAT (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 SCHEDULE_ID VARCHAR2(100) NOT NULL,
	 DATA_CNT NUMBER NULL,
	 AVG NUMBER NULL,
	 STD_DEVIATION NUMBER NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_EXEC_TIME_STAT ON BXM_SCHEDULE_EXEC_TIME_STAT 
( 
	 SYS_ID ASC,
	 SCHEDULE_ID ASC
);

ALTER TABLE BXM_SCHEDULE_EXEC_TIME_STAT ADD CONSTRAINT PK_BXM_SCHEDULE_EXEC_TIME_STAT PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_EXEC_TIME_STAT;

COMMENT ON TABLE BXM_SCHEDULE_EXEC_TIME_STAT IS 'BXM 스케줄 실행시간 통계';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC_TIME_STAT.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC_TIME_STAT.SCHEDULE_ID IS '스케줄ID';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC_TIME_STAT.DATA_CNT IS '데이터수';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC_TIME_STAT.AVG IS '평균';
COMMENT ON COLUMN BXM_SCHEDULE_EXEC_TIME_STAT.STD_DEVIATION IS '표준편차';

CREATE TABLE BXM_SCHEDULE_HOURLY_STAT (
	 SYS_ID VARCHAR2(100) NOT NULL,
	 STAT_DTTM VARCHAR2(14) NOT NULL,
	 OK_CNT NUMBER(6) NULL,
	 ERROR_CNT NUMBER(6) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_HOURLY_STAT ON BXM_SCHEDULE_HOURLY_STAT 
( 
	 SYS_ID ASC,
	 STAT_DTTM ASC
);

ALTER TABLE BXM_SCHEDULE_HOURLY_STAT ADD CONSTRAINT PK_BXM_SCHEDULE_HOURLY_STAT PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_HOURLY_STAT;

COMMENT ON TABLE BXM_SCHEDULE_HOURLY_STAT IS 'BXM 시간별 스케줄 통계';
COMMENT ON COLUMN BXM_SCHEDULE_HOURLY_STAT.SYS_ID IS '시스템ID';
COMMENT ON COLUMN BXM_SCHEDULE_HOURLY_STAT.STAT_DTTM IS '통계시간';
COMMENT ON COLUMN BXM_SCHEDULE_HOURLY_STAT.OK_CNT IS '정산건수';
COMMENT ON COLUMN BXM_SCHEDULE_HOURLY_STAT.ERROR_CNT IS '에러건수';

CREATE TABLE TABLE5 (
);

CREATE UNIQUE INDEX PK_TABLE5 ON TABLE5 
( 
);

ALTER TABLE TABLE5 ADD CONSTRAINT PK_TABLE5 PRIMARY KEY USING INDEX PK_TABLE5;

COMMENT ON TABLE TABLE5 IS '새 테이블4';

CREATE TABLE BXM_APP_CD (
	 APP_CD VARCHAR2(20) NOT NULL,
	 PARENT_APP_CD VARCHAR2(20) NULL,
	 LV_CD VARCHAR2(3) NULL,
	 APP_NM VARCHAR2(512) NULL,
	 APP_ENG_NM VARCHAR2(512) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_TS DATE NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_TS DATE NULL
);

CREATE UNIQUE INDEX PK_BXM_APP_CD ON BXM_APP_CD 
( 
	 APP_CD ASC
);

ALTER TABLE BXM_APP_CD ADD CONSTRAINT PK_BXM_APP_CD PRIMARY KEY USING INDEX PK_BXM_APP_CD;

COMMENT ON TABLE BXM_APP_CD IS 'BXM Studio 엑셀 설계서 어플리케이션 코드';
COMMENT ON COLUMN BXM_APP_CD.APP_CD IS '어플리케이션코드';
COMMENT ON COLUMN BXM_APP_CD.PARENT_APP_CD IS '상위어플리케이션코드';
COMMENT ON COLUMN BXM_APP_CD.LV_CD IS '레벨코드';
COMMENT ON COLUMN BXM_APP_CD.APP_NM IS '어플리케이션명';
COMMENT ON COLUMN BXM_APP_CD.APP_ENG_NM IS '어플리케이션영문명';
COMMENT ON COLUMN BXM_APP_CD.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_APP_CD.REG_USER_ID IS '등록사용자ID';
COMMENT ON COLUMN BXM_APP_CD.REG_TS IS '등록TS';
COMMENT ON COLUMN BXM_APP_CD.MODIFY_USER_ID IS '변경사용자ID';
COMMENT ON COLUMN BXM_APP_CD.MODIFY_TS IS '변경TS';

CREATE TABLE BXM_USER_DB_ACCESS_AUTH (
	 USER_ID VARCHAR2(32) NOT NULL,
	 ACCESS_USE_DATABASE VARCHAR2(512) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_USER_DB_ACCESS_AUTH ON BXM_USER_DB_ACCESS_AUTH 
( 
	 USER_ID ASC,
	 ACCESS_USE_DATABASE ASC
);

ALTER TABLE BXM_USER_DB_ACCESS_AUTH ADD CONSTRAINT PK_BXM_USER_DB_ACCESS_AUTH PRIMARY KEY USING INDEX PK_BXM_USER_DB_ACCESS_AUTH;

COMMENT ON TABLE BXM_USER_DB_ACCESS_AUTH IS 'BXM 사용자 DB 접근 권한';
COMMENT ON COLUMN BXM_USER_DB_ACCESS_AUTH.USER_ID IS '사용자ID';
COMMENT ON COLUMN BXM_USER_DB_ACCESS_AUTH.ACCESS_USE_DATABASE IS '접근가능DB';

CREATE TABLE BXM_OMM_VALIDATOR (
	 VALID_RULE_ID VARCHAR2(20) NOT NULL,
	 VALID_RULE_NM VARCHAR2(50) NOT NULL,
	 VALID_RULE_DESC VARCHAR2(512) NOT NULL,
	 VALID_RULE_CLASS_NM VARCHAR2(1024) NOT NULL,
	 VALID_RULE_SEQUENCE NUMBER(5) NULL,
	 VALID_RULE_PARAM VARCHAR2(2000) NULL,
	 ERR_MSG_ID VARCHAR2(9) NOT NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_OMM_VALIDATOR ON BXM_OMM_VALIDATOR 
( 
	 VALID_RULE_ID ASC
);

ALTER TABLE BXM_OMM_VALIDATOR ADD CONSTRAINT PK_BXM_OMM_VALIDATOR PRIMARY KEY USING INDEX PK_BXM_OMM_VALIDATOR;

COMMENT ON TABLE BXM_OMM_VALIDATOR IS 'BXM OMM 검증';
COMMENT ON COLUMN BXM_OMM_VALIDATOR.VALID_RULE_ID IS '검증룰ID';
COMMENT ON COLUMN BXM_OMM_VALIDATOR.VALID_RULE_NM IS '검증룰명';
COMMENT ON COLUMN BXM_OMM_VALIDATOR.VALID_RULE_DESC IS '검증룰설명';
COMMENT ON COLUMN BXM_OMM_VALIDATOR.VALID_RULE_CLASS_NM IS '검증룰클래스명';
COMMENT ON COLUMN BXM_OMM_VALIDATOR.VALID_RULE_SEQUENCE IS '검증룰순차';
COMMENT ON COLUMN BXM_OMM_VALIDATOR.VALID_RULE_PARAM IS '검증룰파라미터';
COMMENT ON COLUMN BXM_OMM_VALIDATOR.ERR_MSG_ID IS '에러메시지ID';
COMMENT ON COLUMN BXM_OMM_VALIDATOR.REG_USER_ID IS '등록 사용자 ID';
COMMENT ON COLUMN BXM_OMM_VALIDATOR.REG_OCCUR_DTTM IS '등록 발생 일시';
COMMENT ON COLUMN BXM_OMM_VALIDATOR.MODIFY_USER_ID IS '변경 사용자 ID';
COMMENT ON COLUMN BXM_OMM_VALIDATOR.MODIFY_OCCUR_DTTM IS '변경 발생 일시';

CREATE TABLE BXM_OMM_VALIDATOR_APPLY_TYPE (
	 VALID_RULE_ID VARCHAR2(20) NOT NULL,
	 TYPE VARCHAR2(32) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_OMM_VALIDATOR_APPLY_TYPE ON BXM_OMM_VALIDATOR_APPLY_TYPE 
( 
	 VALID_RULE_ID ASC,
	 TYPE ASC
);

ALTER TABLE BXM_OMM_VALIDATOR_APPLY_TYPE ADD CONSTRAINT PK_BXM_OMM_VALIDATOR_APPLY_TYPE PRIMARY KEY USING INDEX PK_BXM_OMM_VALIDATOR_APPLY_TYPE;

COMMENT ON TABLE BXM_OMM_VALIDATOR_APPLY_TYPE IS 'BXM OMM 검증 적용 타입';
COMMENT ON COLUMN BXM_OMM_VALIDATOR_APPLY_TYPE.VALID_RULE_ID IS '검증룰ID';
COMMENT ON COLUMN BXM_OMM_VALIDATOR_APPLY_TYPE.TYPE IS '타입';

CREATE TABLE BXM_SCHEDULE_MSG (
	 SCHEDULE_EXEC_ID VARCHAR2(100) NOT NULL,
	 MSG_CTT VARCHAR2(4000) NULL
);

CREATE UNIQUE INDEX PK_BXM_SCHEDULE_MSG ON BXM_SCHEDULE_MSG 
( 
	 SCHEDULE_EXEC_ID ASC
);

ALTER TABLE BXM_SCHEDULE_MSG ADD CONSTRAINT PK_BXM_SCHEDULE_MSG PRIMARY KEY USING INDEX PK_BXM_SCHEDULE_MSG;

COMMENT ON TABLE BXM_SCHEDULE_MSG IS 'BXM 스케줄 메시지';
COMMENT ON COLUMN BXM_SCHEDULE_MSG.SCHEDULE_EXEC_ID IS '스케줄실행ID';
COMMENT ON COLUMN BXM_SCHEDULE_MSG.MSG_CTT IS '메시지내용';

CREATE TABLE BXM_DEFERRED_MAIN (
	 DEFERRED_ID VARCHAR2(20) NOT NULL,
	 TRX_CD VARCHAR2(12) NULL,
	 BXM_APP_ID VARCHAR2(40) NULL,
	 SVC_NM VARCHAR2(512) NULL,
	 OP_NM VARCHAR2(512) NULL,
	 DEFERRED_NM VARCHAR2(100) NOT NULL,
	 USE_YN VARCHAR2(1) NOT NULL,
	 ERR_STOP_YN VARCHAR2(1) NOT NULL,
	 ERR_SKIP_YN VARCHAR2(1) NOT NULL,
	 NODE_EXEC_YN VARCHAR2(1) NOT NULL,
	 START_TYPE_CD VARCHAR2(1) NOT NULL,
	 SVC_PROC_CD VARCHAR2(1) NOT NULL,
	 DEFERRED_TRAN_CD VARCHAR2(1) NOT NULL,
	 EXEC_INTERVAL_SEC NUMBER(8) NOT NULL,
	 DELAY_INTERVAL_SEC NUMBER(8) NULL,
	 FETCH_CNT NUMBER(5) NOT NULL,
	 PARLL_EXEC_CNT NUMBER NOT NULL,
	 TARGET_TABLE_NM VARCHAR2(100) NULL,
	 DAY_TABLE_YN VARCHAR2(1) NULL,
	 TARGET_COLUMN_NM VARCHAR2(100) NULL,
	 TABLE_READER_BEAN_NM VARCHAR2(100) NULL,
	 TABLE_NUMBERING_USE_YN VARCHAR2(1) NULL,
	 TABLE_NUMBERING_BEAN_NM VARCHAR2(100) NULL,
	 ORG_CD VARCHAR2(15) NULL,
	 ERR_REPROC_CNT NUMBER NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_MAIN ON BXM_DEFERRED_MAIN 
( 
	 DEFERRED_ID ASC
);

ALTER TABLE BXM_DEFERRED_MAIN ADD CONSTRAINT PK_BXM_DEFERRED_MAIN PRIMARY KEY USING INDEX PK_BXM_DEFERRED_MAIN;

COMMENT ON TABLE BXM_DEFERRED_MAIN IS 'BXM 후행 MAIN';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.DEFERRED_ID IS '후행ID';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.SVC_NM IS '서비스명';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.OP_NM IS '오퍼레이션명';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.DEFERRED_NM IS '후행명';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.ERR_STOP_YN IS '에러중지여부';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.ERR_SKIP_YN IS '에러SKIP여부';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.NODE_EXEC_YN IS '노드별실행여부';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.START_TYPE_CD IS '시작유형코드';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.SVC_PROC_CD IS '서비스처리코드';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.DEFERRED_TRAN_CD IS '후행트랜잭션코드';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.EXEC_INTERVAL_SEC IS '실행주기초';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.DELAY_INTERVAL_SEC IS '지연주기초';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.FETCH_CNT IS 'FETCH건수';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.PARLL_EXEC_CNT IS '병렬실행수';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.TARGET_TABLE_NM IS '대상테이블명';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.DAY_TABLE_YN IS '일별테이블여부';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.TARGET_COLUMN_NM IS '대상컬럼명';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.TABLE_READER_BEAN_NM IS '테이블리더빈명';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.TABLE_NUMBERING_USE_YN IS '테이블채번사용여부';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.TABLE_NUMBERING_BEAN_NM IS '테이블채번빈명';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.ORG_CD IS '기관코드';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.ERR_REPROC_CNT IS '에러재처리수';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.MODIFY_USER_ID IS '변경사용자ID';
COMMENT ON COLUMN BXM_DEFERRED_MAIN.MODIFY_OCCUR_DTTM IS '변경발생일시';

CREATE TABLE BXM_DEFERRED_WORK (
	 DEFERRED_ID VARCHAR2(20) NOT NULL,
	 NODE_NO NUMBER(2) NOT NULL,
	 BIZ_DT VARCHAR2(8) NOT NULL,
	 START_SEQ NUMBER NULL,
	 END_SEQ NUMBER NULL,
	 END_YN VARCHAR2(1) NULL,
	 MODIFY_DTTM VARCHAR2(14) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_WORK ON BXM_DEFERRED_WORK 
( 
	 DEFERRED_ID ASC,
	 NODE_NO ASC,
	 BIZ_DT ASC
);

ALTER TABLE BXM_DEFERRED_WORK ADD CONSTRAINT PK_BXM_DEFERRED_WORK PRIMARY KEY USING INDEX PK_BXM_DEFERRED_WORK;

COMMENT ON TABLE BXM_DEFERRED_WORK IS 'BXM 후행Main 작업진행상황';
COMMENT ON COLUMN BXM_DEFERRED_WORK.DEFERRED_ID IS '후행ID';
COMMENT ON COLUMN BXM_DEFERRED_WORK.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_DEFERRED_WORK.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_DEFERRED_WORK.START_SEQ IS '시작일련번호';
COMMENT ON COLUMN BXM_DEFERRED_WORK.END_SEQ IS '종료일련번호';
COMMENT ON COLUMN BXM_DEFERRED_WORK.END_YN IS '종료여부';
COMMENT ON COLUMN BXM_DEFERRED_WORK.MODIFY_DTTM IS '변경일시';

CREATE TABLE BXM_DEFERRED_EXEC (
	 DEFERRED_ID VARCHAR2(20) NOT NULL,
	 NODE_NO NUMBER(2) NOT NULL,
	 BIZ_DT VARCHAR2(8) NOT NULL,
	 PARLL_PROC_SEQ NUMBER NOT NULL,
	 DEFERRED_PROC_CD VARCHAR2(1) NOT NULL,
	 START_SEQ NUMBER NULL,
	 END_SEQ NUMBER NULL,
	 CURR_SEQ NUMBER NULL,
	 ERR_SEQ NUMBER NULL,
	 DEFERRED_STATUS_CD VARCHAR2(1) NULL,
	 START_DTTM VARCHAR2(14) NULL,
	 ERR_CD VARCHAR2(9) NULL,
	 ERR_MSG_CTT VARCHAR2(4000) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_EXEC ON BXM_DEFERRED_EXEC 
( 
	 DEFERRED_ID ASC,
	 NODE_NO ASC,
	 BIZ_DT ASC,
	 PARLL_PROC_SEQ ASC,
	 DEFERRED_PROC_CD ASC
);

ALTER TABLE BXM_DEFERRED_EXEC ADD CONSTRAINT PK_BXM_DEFERRED_EXEC PRIMARY KEY USING INDEX PK_BXM_DEFERRED_EXEC;

COMMENT ON TABLE BXM_DEFERRED_EXEC IS 'BXM 후행 실행프로세스 처리현황';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.DEFERRED_ID IS '후행ID';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.PARLL_PROC_SEQ IS '병렬처리일련번호';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.DEFERRED_PROC_CD IS '후행실행처리코드';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.START_SEQ IS '시작일련번호';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.END_SEQ IS '종료일련번호';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.CURR_SEQ IS '현재일련번호';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.ERR_SEQ IS '에러일련번호';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.DEFERRED_STATUS_CD IS '후행실행상태코드';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.START_DTTM IS '시작일시';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.ERR_CD IS '에러코드';
COMMENT ON COLUMN BXM_DEFERRED_EXEC.ERR_MSG_CTT IS '에러메시지내용';

CREATE TABLE BXM_DEFERRED_WORK_STATUS (
	 DEFERRED_ID VARCHAR2(20) NOT NULL,
	 BIZ_DT VARCHAR2(8) NOT NULL,
	 NODE_NO NUMBER(2) NOT NULL,
	 LAST_SEQ NUMBER NULL,
	 INCMPL_NUMBERING_CNT NUMBER(10) NULL,
	 INCMPL_DATA_CNT NUMBER(10) NULL,
	 MODIFY_DTTM VARCHAR2(14) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_WORK_STATUS ON BXM_DEFERRED_WORK_STATUS 
( 
	 DEFERRED_ID ASC,
	 BIZ_DT ASC,
	 NODE_NO ASC
);

ALTER TABLE BXM_DEFERRED_WORK_STATUS ADD CONSTRAINT PK_BXM_DEFERRED_WORK_STATUS PRIMARY KEY USING INDEX PK_BXM_DEFERRED_WORK_STATUS;

COMMENT ON TABLE BXM_DEFERRED_WORK_STATUS IS 'BXM 후행 대상테이블 진행상태';
COMMENT ON COLUMN BXM_DEFERRED_WORK_STATUS.DEFERRED_ID IS '후행ID';
COMMENT ON COLUMN BXM_DEFERRED_WORK_STATUS.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_DEFERRED_WORK_STATUS.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_DEFERRED_WORK_STATUS.LAST_SEQ IS '최종일련번호';
COMMENT ON COLUMN BXM_DEFERRED_WORK_STATUS.INCMPL_NUMBERING_CNT IS '미완료넘버링건수';
COMMENT ON COLUMN BXM_DEFERRED_WORK_STATUS.INCMPL_DATA_CNT IS '미완료데이터건수';
COMMENT ON COLUMN BXM_DEFERRED_WORK_STATUS.MODIFY_DTTM IS '변경일시';

CREATE TABLE BXM_DEFERRED_HIST (
	 DEFERRED_PROC_CD VARCHAR2(1) NOT NULL,
	 PARLL_PROC_SEQ NUMBER NOT NULL,
	 NODE_NO NUMBER(2) NOT NULL,
	 BIZ_DT VARCHAR2(8) NOT NULL,
	 DEFERRED_ID VARCHAR2(20) NOT NULL,
	 START_SEQ NUMBER NOT NULL,
	 END_SEQ NUMBER NULL,
	 ERR_SEQ NUMBER NULL,
	 DEFERRED_STATUS_CD VARCHAR2(1) NULL,
	 START_DTTM VARCHAR2(14) NOT NULL,
	 END_DTTM VARCHAR2(14) NULL,
	 ERR_CD VARCHAR2(9) NULL,
	 ERR_MSG_CTT VARCHAR2(4000) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_HIST ON BXM_DEFERRED_HIST 
( 
	 DEFERRED_PROC_CD ASC,
	 PARLL_PROC_SEQ ASC,
	 NODE_NO ASC,
	 BIZ_DT ASC,
	 DEFERRED_ID ASC,
	 START_SEQ ASC
);

ALTER TABLE BXM_DEFERRED_HIST ADD CONSTRAINT PK_BXM_DEFERRED_HIST PRIMARY KEY USING INDEX PK_BXM_DEFERRED_HIST;

COMMENT ON TABLE BXM_DEFERRED_HIST IS 'BXM 후행 실행 내역';
COMMENT ON COLUMN BXM_DEFERRED_HIST.DEFERRED_PROC_CD IS '후행실행처리코드';
COMMENT ON COLUMN BXM_DEFERRED_HIST.PARLL_PROC_SEQ IS '병렬처리일련번호';
COMMENT ON COLUMN BXM_DEFERRED_HIST.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_DEFERRED_HIST.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_DEFERRED_HIST.DEFERRED_ID IS '후행ID';
COMMENT ON COLUMN BXM_DEFERRED_HIST.START_SEQ IS '시작일련번호';
COMMENT ON COLUMN BXM_DEFERRED_HIST.END_SEQ IS '종료일련번호';
COMMENT ON COLUMN BXM_DEFERRED_HIST.ERR_SEQ IS '에러일련번호';
COMMENT ON COLUMN BXM_DEFERRED_HIST.DEFERRED_STATUS_CD IS '후행실행상태코드';
COMMENT ON COLUMN BXM_DEFERRED_HIST.START_DTTM IS '시작일시';
COMMENT ON COLUMN BXM_DEFERRED_HIST.END_DTTM IS '종료일시';
COMMENT ON COLUMN BXM_DEFERRED_HIST.ERR_CD IS '에러코드';
COMMENT ON COLUMN BXM_DEFERRED_HIST.ERR_MSG_CTT IS '에러메시지내용';

CREATE TABLE BXM_DEFERRED_ERR_LOG (
	 DEFERRED_ID VARCHAR2(20) NOT NULL,
	 BIZ_DT VARCHAR2(8) NOT NULL,
	 NODE_NO NUMBER(2) NOT NULL,
	 ERR_SEQ NUMBER NOT NULL,
	 ERR_GUID VARCHAR2(40) NULL,
	 ERR_PROC_STATUS_CD VARCHAR2(1) NULL,
	 ERR_PROC_TYPE_CD VARCHAR2(1) NULL,
	 START_SEQ NUMBER NULL,
	 END_SEQ NUMBER NULL,
	 ERR_REG_DTTM VARCHAR2(14) NULL,
	 PROC_END_DTTM VARCHAR2(14) NULL,
	 ERR_CD VARCHAR2(9) NULL,
	 ERR_MSG_CTT VARCHAR2(4000) NULL,
	 CURR_ERR_REPROC_CNT NUMBER NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_ERR_LOG ON BXM_DEFERRED_ERR_LOG 
( 
	 DEFERRED_ID ASC,
	 BIZ_DT ASC,
	 NODE_NO ASC,
	 ERR_SEQ ASC
);

ALTER TABLE BXM_DEFERRED_ERR_LOG ADD CONSTRAINT PK_BXM_DEFERRED_ERR_LOG PRIMARY KEY USING INDEX PK_BXM_DEFERRED_ERR_LOG;

COMMENT ON TABLE BXM_DEFERRED_ERR_LOG IS 'BXM 후행 처리대상 중 에러 데이터';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.DEFERRED_ID IS '후행ID';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.ERR_SEQ IS '에러일련번호';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.ERR_GUID IS '에러GUID';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.ERR_PROC_STATUS_CD IS '에러처리상태코드';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.ERR_PROC_TYPE_CD IS '에러처리유형코드';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.START_SEQ IS '시작일련번호';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.END_SEQ IS '종료일련번호';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.ERR_REG_DTTM IS '에러등록일시';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.PROC_END_DTTM IS '처리종료일시';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.ERR_CD IS '에러코드';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.ERR_MSG_CTT IS '에러메시지내용';
COMMENT ON COLUMN BXM_DEFERRED_ERR_LOG.CURR_ERR_REPROC_CNT IS '현재에러재처리수';

CREATE TABLE BXM_DEFERRED_STATUS_HIST (
	 DEFERRED_ID VARCHAR2(20) NOT NULL,
	 NODE_NO NUMBER(2) NOT NULL,
	 BIZ_DT VARCHAR2(8) NOT NULL,
	 MODIFY_DTTM VARCHAR2(14) NOT NULL,
	 PARLL_PROC_SEQ NUMBER NOT NULL,
	 DEFERRED_MAIN_STATUS_CD VARCHAR2(1) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_STATUS_HIST ON BXM_DEFERRED_STATUS_HIST 
( 
	 DEFERRED_ID ASC,
	 NODE_NO ASC,
	 BIZ_DT ASC,
	 MODIFY_DTTM ASC,
	 PARLL_PROC_SEQ ASC
);

ALTER TABLE BXM_DEFERRED_STATUS_HIST ADD CONSTRAINT PK_BXM_DEFERRED_STATUS_HIST PRIMARY KEY USING INDEX PK_BXM_DEFERRED_STATUS_HIST;

COMMENT ON TABLE BXM_DEFERRED_STATUS_HIST IS 'BXM 후행 MAIN 상태 내역';
COMMENT ON COLUMN BXM_DEFERRED_STATUS_HIST.DEFERRED_ID IS '후행ID';
COMMENT ON COLUMN BXM_DEFERRED_STATUS_HIST.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_DEFERRED_STATUS_HIST.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_DEFERRED_STATUS_HIST.MODIFY_DTTM IS '변경일시';
COMMENT ON COLUMN BXM_DEFERRED_STATUS_HIST.PARLL_PROC_SEQ IS '병렬처리일련번호';
COMMENT ON COLUMN BXM_DEFERRED_STATUS_HIST.DEFERRED_MAIN_STATUS_CD IS '후행메인상태코드';

CREATE TABLE BXM_DEFERRED_SEQ (
	 DEFERRED_ID VARCHAR2(20) NOT NULL,
	 BIZ_DT VARCHAR2(8) NOT NULL,
	 NODE_NO NUMBER(2) NOT NULL,
	 LAST_PROC_LOG_SEQ NUMBER(19) NULL,
	 FIRST_PROC_START_DTTM VARCHAR2(14) NOT NULL,
	 CURR_PROC_START_DTTM VARCHAR2(14) NULL,
	 LAST_PROC_END_DTTM VARCHAR2(14) NULL,
	 PROC_EXEC_CNT NUMBER(18) NOT NULL,
	 PROC_END_YN VARCHAR2(1) NOT NULL,
	 PROC_ERR_YN VARCHAR2(1) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_SEQ ON BXM_DEFERRED_SEQ 
( 
	 DEFERRED_ID ASC,
	 BIZ_DT ASC,
	 NODE_NO ASC
);

ALTER TABLE BXM_DEFERRED_SEQ ADD CONSTRAINT PK_BXM_DEFERRED_SEQ PRIMARY KEY USING INDEX PK_BXM_DEFERRED_SEQ;

COMMENT ON TABLE BXM_DEFERRED_SEQ IS 'BXM 후행 대상테이블 넘버링';
COMMENT ON COLUMN BXM_DEFERRED_SEQ.DEFERRED_ID IS '후행ID';
COMMENT ON COLUMN BXM_DEFERRED_SEQ.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_DEFERRED_SEQ.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_DEFERRED_SEQ.LAST_PROC_LOG_SEQ IS '최종처리로그일련번호';
COMMENT ON COLUMN BXM_DEFERRED_SEQ.FIRST_PROC_START_DTTM IS '최초처리시작일시';
COMMENT ON COLUMN BXM_DEFERRED_SEQ.CURR_PROC_START_DTTM IS '현재처리시작일시';
COMMENT ON COLUMN BXM_DEFERRED_SEQ.LAST_PROC_END_DTTM IS '최종처리종료일시';
COMMENT ON COLUMN BXM_DEFERRED_SEQ.PROC_EXEC_CNT IS '처리실행수';
COMMENT ON COLUMN BXM_DEFERRED_SEQ.PROC_END_YN IS '처리종료여부';
COMMENT ON COLUMN BXM_DEFERRED_SEQ.PROC_ERR_YN IS '처리에러여부';

CREATE TABLE BXM_DEFERRED_INPUT_00 (
	 DEFERRED_ID VARCHAR2(20) NOT NULL,
	 GUID VARCHAR2(40) NOT NULL,
	 LINK_SEQ NUMBER(3) NOT NULL,
	 BIZ_DT VARCHAR2(8) NOT NULL,
	 TRX_DT VARCHAR2(8) NOT NULL,
	 SYS_DT VARCHAR2(8) NOT NULL,
	 SYS_TIME VARCHAR2(6) NOT NULL,
	 NODE_NM VARCHAR2(128) NOT NULL,
	 NODE_NO NUMBER(2) NULL,
	 LOG_SEQ NUMBER(19) NOT NULL,
	 LOGGING_MILLS NUMBER(18) NOT NULL,
	 INPUT_PROC_CD VARCHAR(1) NOT NULL,
	 INPUT_1_DATA VARCHAR2(4000) NULL,
	 INPUT_2_DATA VARCHAR2(4000) NULL,
	 INPUT_3_DATA VARCHAR2(4000) NULL,
	 REG_DTTM VARCHAR2(14) NOT NULL,
	 MODIF_DTTM VARCHAR2(14) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_INPUT_00 ON BXM_DEFERRED_INPUT_00 
( 
	 DEFERRED_ID ASC,
	 GUID ASC,
	 LINK_SEQ ASC
);

ALTER TABLE BXM_DEFERRED_INPUT_00 ADD CONSTRAINT PK_BXM_DEFERRED_INPUT_00 PRIMARY KEY USING INDEX PK_BXM_DEFERRED_INPUT_00;

COMMENT ON TABLE BXM_DEFERRED_INPUT_00 IS 'BXM 후행 처리대상 테이블';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.DEFERRED_ID IS '후행ID';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.GUID IS 'GUID';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.LINK_SEQ IS '연동일련번호';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.TRX_DT IS '거래일자';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.SYS_DT IS '시스템일자';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.SYS_TIME IS '시스템시간';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.NODE_NM IS '노드명';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.LOG_SEQ IS '로그일련번호';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.LOGGING_MILLS IS '로깅밀리초';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.INPUT_PROC_CD IS '입력처리코드';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.INPUT_1_DATA IS '입력1데이터';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.INPUT_2_DATA IS '입력2데이터';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.INPUT_3_DATA IS '입력3데이터';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.REG_DTTM IS '등록일시';
COMMENT ON COLUMN BXM_DEFERRED_INPUT_00.MODIF_DTTM IS '수정일시';

CREATE TABLE BXM_DEFERRED_STATUS (
	 DEFERRED_ID VARCHAR2(20) NOT NULL,
	 NODE_NO NUMBER(2) NOT NULL,
	 BIZ_DT VARCHAR2(8) NULL,
	 DEFERRED_MAIN_STATUS_CD VARCHAR2(1) NULL,
	 MODIFY_DTTM VARCHAR2(14) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_STATUS ON BXM_DEFERRED_STATUS 
( 
	 DEFERRED_ID ASC,
	 NODE_NO ASC
);

ALTER TABLE BXM_DEFERRED_STATUS ADD CONSTRAINT PK_BXM_DEFERRED_STATUS PRIMARY KEY USING INDEX PK_BXM_DEFERRED_STATUS;

COMMENT ON TABLE BXM_DEFERRED_STATUS IS 'BXM 후행Main 노드별 상태';
COMMENT ON COLUMN BXM_DEFERRED_STATUS.DEFERRED_ID IS '후행ID';
COMMENT ON COLUMN BXM_DEFERRED_STATUS.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_DEFERRED_STATUS.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_DEFERRED_STATUS.DEFERRED_MAIN_STATUS_CD IS '후행메인상태코드';
COMMENT ON COLUMN BXM_DEFERRED_STATUS.MODIFY_DTTM IS '변경일시';

CREATE TABLE BXM_DEFERRED_HIST_DETAIL (
	 DEFERRED_ID VARCHAR2(20) NOT NULL,
	 NODE_NO NUMBER(2) NOT NULL,
	 BIZ_DT VARCHAR2(8) NOT NULL,
	 LOG_SEQ NUMBER NOT NULL,
	 GUID VARCHAR2(40) NOT NULL,
	 LINK_SEQ NUMBER(3) NOT NULL,
	 DEFERRED_STATUS_CD VARCHAR2(1) NULL,
	 START_DTTM VARCHAR2(14) NULL,
	 END_DTTM VARCHAR2(14) NULL
);

CREATE UNIQUE INDEX PK_BXM_DEFERRED_HIST_DETAIL ON BXM_DEFERRED_HIST_DETAIL 
( 
	 DEFERRED_ID ASC,
	 NODE_NO ASC,
	 BIZ_DT ASC,
	 LOG_SEQ ASC
);

ALTER TABLE BXM_DEFERRED_HIST_DETAIL ADD CONSTRAINT PK_BXM_DEFERRED_HIST_DETAIL PRIMARY KEY USING INDEX PK_BXM_DEFERRED_HIST_DETAIL;

COMMENT ON TABLE BXM_DEFERRED_HIST_DETAIL IS 'BXM 후행 실행 상세 내역';
COMMENT ON COLUMN BXM_DEFERRED_HIST_DETAIL.DEFERRED_ID IS '후행ID';
COMMENT ON COLUMN BXM_DEFERRED_HIST_DETAIL.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_DEFERRED_HIST_DETAIL.BIZ_DT IS '영업일자';
COMMENT ON COLUMN BXM_DEFERRED_HIST_DETAIL.LOG_SEQ IS '로그일련번호';
COMMENT ON COLUMN BXM_DEFERRED_HIST_DETAIL.GUID IS 'GUID';
COMMENT ON COLUMN BXM_DEFERRED_HIST_DETAIL.LINK_SEQ IS '연동일련번호';
COMMENT ON COLUMN BXM_DEFERRED_HIST_DETAIL.DEFERRED_STATUS_CD IS '후행실행상태코드';
COMMENT ON COLUMN BXM_DEFERRED_HIST_DETAIL.START_DTTM IS '시작일시';
COMMENT ON COLUMN BXM_DEFERRED_HIST_DETAIL.END_DTTM IS '종료일시';

CREATE TABLE BXM_BEFORE_IMG_LOG (
	 TABLE_NM VARCHAR2(100) NULL,
	 TRX_DT VARCHAR2(8) NULL,
	 PROC_DTTM VARCHAR2(17) NULL,
	 SQL_TYPE_CD VARCHAR2(1) NULL,
	 DATA_BEF_AFT_TYPE_CD VARCHAR2(1) NULL,
	 ROW_ID VARCHAR2(64) NOT NULL,
	 PK_COLUMN_NM_LIST VARCHAR2(4000) NULL,
	 ALL_COLUMN_NM_LIST CLOB NULL,
	 PK_COLUMN_VAL_LIST VARCHAR2(4000) NULL,
	 MODIFY_BEF_DATA CLOB NULL,
	 MODIFY_AFT_DATA CLOB NULL,
	 SQL_INPUT_DATA CLOB NULL,
	 TRX_CD VARCHAR2(12) NULL,
	 GUID VARCHAR2(40) NULL,
	 REVERT_RESULT_CD VARCHAR2(1) NULL,
	 NANO_PROC_DTTM VARCHAR(30) NULL
);

CREATE UNIQUE INDEX PK_BXM_BEFORE_IMG_LOG ON BXM_BEFORE_IMG_LOG 
( 
);

ALTER TABLE BXM_BEFORE_IMG_LOG ADD CONSTRAINT PK_BXM_BEFORE_IMG_LOG PRIMARY KEY USING INDEX PK_BXM_BEFORE_IMG_LOG;

COMMENT ON TABLE BXM_BEFORE_IMG_LOG IS 'BXM Before Image 로그 테이블';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.TABLE_NM IS '테이블명';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.TRX_DT IS '거래일자';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.PROC_DTTM IS '처리일시';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.SQL_TYPE_CD IS 'SQL타입코드';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.DATA_BEF_AFT_TYPE_CD IS '데이터전후구분코드';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.ROW_ID IS 'ROWID';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.PK_COLUMN_NM_LIST IS 'PK컬럼명목록';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.ALL_COLUMN_NM_LIST IS '전체컬럼명목록';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.PK_COLUMN_VAL_LIST IS 'PK컬럼값목록';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.MODIFY_BEF_DATA IS '변경 전 데이터';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.MODIFY_AFT_DATA IS '변경후데이터';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.SQL_INPUT_DATA IS 'SQL 입력 데이터 ';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.TRX_CD IS '거래 코드';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.GUID IS 'GUID';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.REVERT_RESULT_CD IS '보정결과코드';
COMMENT ON COLUMN BXM_BEFORE_IMG_LOG.NANO_PROC_DTTM IS '나노초처리일시';

CREATE TABLE BXM_LINK_FLOW_MAIN (
	 LINK_MAIN_CD VARCHAR2(14) NOT NULL,
	 LINK_START_TRX_CD VARCHAR2(12) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 LINK_OUTPUT_MAPPING_TYPE VARCHAR2(1) NULL,
	 LINK_OUTPUT_MAPPING_CTT VARCHAR2(4000) NULL,
	 LINK_OUTPUT_CHECK_YN VARCHAR2(1) NULL,
	 LINK_OUTPUT_FQN VARCHAR2(1024) NULL
);

CREATE UNIQUE INDEX PK_BXM_LINK_FLOW_MAIN ON BXM_LINK_FLOW_MAIN 
( 
	 LINK_MAIN_CD ASC
);

ALTER TABLE BXM_LINK_FLOW_MAIN ADD CONSTRAINT PK_BXM_LINK_FLOW_MAIN PRIMARY KEY USING INDEX PK_BXM_LINK_FLOW_MAIN;

COMMENT ON TABLE BXM_LINK_FLOW_MAIN IS 'BXM 연동 Flow 메인 테이블';
COMMENT ON COLUMN BXM_LINK_FLOW_MAIN.LINK_MAIN_CD IS '연동대표코드';
COMMENT ON COLUMN BXM_LINK_FLOW_MAIN.LINK_START_TRX_CD IS '연동기동 거래코드';
COMMENT ON COLUMN BXM_LINK_FLOW_MAIN.USE_YN IS '사용 여부';
COMMENT ON COLUMN BXM_LINK_FLOW_MAIN.LINK_OUTPUT_MAPPING_TYPE IS '연동출력맵핑구분';
COMMENT ON COLUMN BXM_LINK_FLOW_MAIN.LINK_OUTPUT_MAPPING_CTT IS '연동출력맵핑내용';
COMMENT ON COLUMN BXM_LINK_FLOW_MAIN.LINK_OUTPUT_CHECK_YN IS '연동출력확인여부';
COMMENT ON COLUMN BXM_LINK_FLOW_MAIN.LINK_OUTPUT_FQN IS '연동출력FQN';

CREATE TABLE BXM_LINK_FLOW_DETAIL (
	 LINK_MAIN_CD VARCHAR2(14) NOT NULL,
	 LINK_SEQ NUMBER(3) NOT NULL,
	 TRX_CD VARCHAR2(12) NULL,
	 TRAN_PROC_CD VARCHAR2(10) NULL,
	 START_YN VARCHAR2(1) NULL,
	 INPUT_CHECK_YN VARCHAR2(1) NULL,
	 INPUT_CHECK_CTT VARCHAR2(4000) NULL,
	 INPUT_MAPPING_TYPE VARCHAR2(1) NULL,
	 INPUT_MAPPING_CTT VARCHAR2(4000) NULL,
	 OUTPUT_TYPE VARCHAR2(1) NULL,
	 LINK_BEF_CHECK_YN VARCHAR2(1) NULL,
	 LINK_AFT_CHECK_YN VARCHAR2(1) NULL,
	 LINK_CHECK_FQN VARCHAR2(1024) NULL
);

CREATE UNIQUE INDEX PK_BXM_LINK_FLOW_DETAIL ON BXM_LINK_FLOW_DETAIL 
( 
	 LINK_MAIN_CD ASC,
	 LINK_SEQ ASC
);

ALTER TABLE BXM_LINK_FLOW_DETAIL ADD CONSTRAINT PK_BXM_LINK_FLOW_DETAIL PRIMARY KEY USING INDEX PK_BXM_LINK_FLOW_DETAIL;

COMMENT ON TABLE BXM_LINK_FLOW_DETAIL IS 'BXM 연동 Flow 상세 테이블';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.LINK_MAIN_CD IS '연동대표코드';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.LINK_SEQ IS '연동순번';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.TRAN_PROC_CD IS '트랜잭션처리코드';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.START_YN IS '기동여부';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.INPUT_CHECK_YN IS '입력확인여부';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.INPUT_CHECK_CTT IS '입력확인내용';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.INPUT_MAPPING_TYPE IS '입력맵핑구분';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.INPUT_MAPPING_CTT IS '입력맵핑내용';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.OUTPUT_TYPE IS '출력구분';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.LINK_BEF_CHECK_YN IS '연동전확인여부';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.LINK_AFT_CHECK_YN IS '연동후확인여부';
COMMENT ON COLUMN BXM_LINK_FLOW_DETAIL.LINK_CHECK_FQN IS '연동확인FQN';

CREATE TABLE BXM_LOG_ERR_TM (
	 TRX_CD VARCHAR2(12) NOT NULL,
	 SYS_CD VARCHAR2(5) NOT NULL,
	 NODE_NO NUMBER(2) NOT NULL,
	 CHL_TYPE_CD VARCHAR2(3) NOT NULL,
	 LOG_OCCUR_DTTM VARCHAR2(14) NOT NULL,
	 ERR_CD VARCHAR2(9) NOT NULL,
	 SQL_ERR_CD VARCHAR2(20) NOT NULL,
	 ERR_OCCUR_CNT NUMBER(5) NULL,
	 LAST_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_LOG_ERR_TM ON BXM_LOG_ERR_TM 
( 
	 TRX_CD ASC,
	 SYS_CD ASC,
	 NODE_NO ASC,
	 CHL_TYPE_CD ASC,
	 LOG_OCCUR_DTTM ASC,
	 ERR_CD ASC,
	 SQL_ERR_CD ASC
);

ALTER TABLE BXM_LOG_ERR_TM ADD CONSTRAINT PK_BXM_LOG_ERR_TM PRIMARY KEY USING INDEX PK_BXM_LOG_ERR_TM;

COMMENT ON TABLE BXM_LOG_ERR_TM IS '시간별 에러 집계';
COMMENT ON COLUMN BXM_LOG_ERR_TM.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_LOG_ERR_TM.SYS_CD IS '시스템코드';
COMMENT ON COLUMN BXM_LOG_ERR_TM.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_LOG_ERR_TM.CHL_TYPE_CD IS '채널타입코드';
COMMENT ON COLUMN BXM_LOG_ERR_TM.LOG_OCCUR_DTTM IS '로그발생일시';
COMMENT ON COLUMN BXM_LOG_ERR_TM.ERR_CD IS '에러코드';
COMMENT ON COLUMN BXM_LOG_ERR_TM.SQL_ERR_CD IS 'SQL에러코드';
COMMENT ON COLUMN BXM_LOG_ERR_TM.ERR_OCCUR_CNT IS '에러발생건수';
COMMENT ON COLUMN BXM_LOG_ERR_TM.LAST_OCCUR_DTTM IS '최종발생일시';

CREATE TABLE BXM_LOG_ERR_DT (
	 TRX_CD VARCHAR2(12) NOT NULL,
	 SYS_CD VARCHAR2(5) NOT NULL,
	 NODE_NO NUMBER(2) NOT NULL,
	 CHL_TYPE_CD VARCHAR2(3) NOT NULL,
	 LOG_OCCUR_DT VARCHAR2(8) NOT NULL,
	 ERR_CD VARCHAR2(9) NOT NULL,
	 ERR_OCCUR_CNT NUMBER(5) NULL,
	 LAST_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_LOG_ERR_DT ON BXM_LOG_ERR_DT 
( 
	 TRX_CD ASC,
	 SYS_CD ASC,
	 NODE_NO ASC,
	 CHL_TYPE_CD ASC,
	 LOG_OCCUR_DT ASC,
	 ERR_CD ASC
);

ALTER TABLE BXM_LOG_ERR_DT ADD CONSTRAINT PK_BXM_LOG_ERR_DT PRIMARY KEY USING INDEX PK_BXM_LOG_ERR_DT;

COMMENT ON TABLE BXM_LOG_ERR_DT IS '일자별 에러 집계';
COMMENT ON COLUMN BXM_LOG_ERR_DT.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_LOG_ERR_DT.SYS_CD IS '시스템코드';
COMMENT ON COLUMN BXM_LOG_ERR_DT.NODE_NO IS '노드번호';
COMMENT ON COLUMN BXM_LOG_ERR_DT.CHL_TYPE_CD IS '채널타입코드';
COMMENT ON COLUMN BXM_LOG_ERR_DT.LOG_OCCUR_DT IS '로그발생일자';
COMMENT ON COLUMN BXM_LOG_ERR_DT.ERR_CD IS '에러코드';
COMMENT ON COLUMN BXM_LOG_ERR_DT.ERR_OCCUR_CNT IS '에러발생건수';
COMMENT ON COLUMN BXM_LOG_ERR_DT.LAST_OCCUR_DTTM IS '최종발생일시';

CREATE TABLE BXM_ERR_EVENT_CNDT (
	 CNDT_UID VARCHAR2(10) NOT NULL,
	 CNDT_NM VARCHAR2(128) NULL,
	 TRX_TARGET_CD VARCHAR2(1) NULL,
	 TRX_CD VARCHAR2(12) NULL,
	 ERR_TARGET_CD VARCHAR2(1) NULL,
	 ERR_CD VARCHAR2(9) NULL,
	 SQL_ERR_CD VARCHAR2(20) NULL,
	 STD_PERD_CD VARCHAR2(1) NULL,
	 STD_CNT NUMBER(4) NULL,
	 CTRL_CD VARCHAR2(1) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 REG_OCCUR_DTTM VARCHAR2(23) NULL,
	 REG_USER_ID VARCHAR2(32) NULL,
	 MODIFY_OCCUR_DTTM VARCHAR2(23) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL
);

CREATE UNIQUE INDEX PK_BXM_ERR_EVENT_CNDT ON BXM_ERR_EVENT_CNDT 
( 
	 CNDT_UID ASC
);

ALTER TABLE BXM_ERR_EVENT_CNDT ADD CONSTRAINT PK_BXM_ERR_EVENT_CNDT PRIMARY KEY USING INDEX PK_BXM_ERR_EVENT_CNDT;

COMMENT ON TABLE BXM_ERR_EVENT_CNDT IS '에러 관리 조건';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.CNDT_UID IS '조건UID';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.CNDT_NM IS '조건명';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.TRX_TARGET_CD IS '거래대상코드';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.ERR_TARGET_CD IS '에러대상코드';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.ERR_CD IS '에러코드';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.SQL_ERR_CD IS 'SQL에러코드';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.STD_PERD_CD IS '기준기간코드';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.STD_CNT IS '기준횟수';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.CTRL_CD IS '제어코드';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.REG_OCCUR_DTTM IS '등록발생일시';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.REG_USER_ID IS '등록사용자ID';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.MODIFY_OCCUR_DTTM IS '변경발생일시';
COMMENT ON COLUMN BXM_ERR_EVENT_CNDT.MODIFY_USER_ID IS '변경사용자ID';

CREATE TABLE BXM_ERR_EVENT_HST (
	 CNDT_UID VARCHAR2(10) NOT NULL,
	 LOG_OCCUR_DTTM VARCHAR2(14) NOT NULL,
	 EVENT_OCCUR_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_ERR_EVENT_HST ON BXM_ERR_EVENT_HST 
( 
	 CNDT_UID ASC,
	 LOG_OCCUR_DTTM ASC
);

ALTER TABLE BXM_ERR_EVENT_HST ADD CONSTRAINT PK_BXM_ERR_EVENT_HST PRIMARY KEY USING INDEX PK_BXM_ERR_EVENT_HST;

COMMENT ON TABLE BXM_ERR_EVENT_HST IS '이벤트 발생 내역';
COMMENT ON COLUMN BXM_ERR_EVENT_HST.CNDT_UID IS '조건UID';
COMMENT ON COLUMN BXM_ERR_EVENT_HST.LOG_OCCUR_DTTM IS '로그발생일시';
COMMENT ON COLUMN BXM_ERR_EVENT_HST.EVENT_OCCUR_DTTM IS '이벤트발생일시';

CREATE TABLE BXM_INF_MAPPING (
	 TRX_CD VARCHAR2(12) NOT NULL,
	 CHL_TYPE_CD VARCHAR2(3) NOT NULL,
	 OUTPUT_MAPPING_RULE_TYPE VARCHAR2(1) NULL,
	 OUTPUT_MAP_ID VARCHAR2(1024) NULL,
	 OUTPUT_CLASS_NM VARCHAR2(1024) NULL,
	 INPUT_MAPPING_RULE_TYPE VARCHAR2(1) NULL,
	 INPUT_MAP_ID VARCHAR2(1024) NULL,
	 INPUT_CLASS_NM VARCHAR2(1024) NULL
);

CREATE UNIQUE INDEX PK_BXM_INF_MAPPING ON BXM_INF_MAPPING 
( 
	 TRX_CD ASC,
	 CHL_TYPE_CD ASC
);

ALTER TABLE BXM_INF_MAPPING ADD CONSTRAINT PK_BXM_INF_MAPPING PRIMARY KEY USING INDEX PK_BXM_INF_MAPPING;

COMMENT ON TABLE BXM_INF_MAPPING IS '인터페이스맵핑';
COMMENT ON COLUMN BXM_INF_MAPPING.TRX_CD IS '거래코드';
COMMENT ON COLUMN BXM_INF_MAPPING.CHL_TYPE_CD IS '채널타입코드';
COMMENT ON COLUMN BXM_INF_MAPPING.OUTPUT_MAPPING_RULE_TYPE IS '출력맵핑룰구분';
COMMENT ON COLUMN BXM_INF_MAPPING.OUTPUT_MAP_ID IS '출력맵ID';
COMMENT ON COLUMN BXM_INF_MAPPING.OUTPUT_CLASS_NM IS '출력클래스명';
COMMENT ON COLUMN BXM_INF_MAPPING.INPUT_MAPPING_RULE_TYPE IS '입력맵핑룰구분';
COMMENT ON COLUMN BXM_INF_MAPPING.INPUT_MAP_ID IS '입력맵ID';
COMMENT ON COLUMN BXM_INF_MAPPING.INPUT_CLASS_NM IS '입력클래스명';

CREATE TABLE TABLE6 (
);

CREATE UNIQUE INDEX PK_TABLE6 ON TABLE6 
( 
);

ALTER TABLE TABLE6 ADD CONSTRAINT PK_TABLE6 PRIMARY KEY USING INDEX PK_TABLE6;

COMMENT ON TABLE TABLE6 IS '새 테이블5';

CREATE TABLE TABLE7 (
);

CREATE UNIQUE INDEX PK_TABLE7 ON TABLE7 
( 
);

ALTER TABLE TABLE7 ADD CONSTRAINT PK_TABLE7 PRIMARY KEY USING INDEX PK_TABLE7;

COMMENT ON TABLE TABLE7 IS 'BXM 온라인 그룹';

CREATE TABLE BXM_TRX_GRP (
	 TRX_GRP_ID VARCHAR2(40) NOT NULL,
	 TRX_GRP_NM VARCHAR(128) NULL,
	 USE_YN VARCHAR2(1) NULL
);

CREATE UNIQUE INDEX PK_BXM_TRX_GRP ON BXM_TRX_GRP 
( 
	 TRX_GRP_ID ASC
);

ALTER TABLE BXM_TRX_GRP ADD CONSTRAINT PK_BXM_TRX_GRP PRIMARY KEY USING INDEX PK_BXM_TRX_GRP;

COMMENT ON TABLE BXM_TRX_GRP IS 'BXM 온라인거래 그룹';
COMMENT ON COLUMN BXM_TRX_GRP.TRX_GRP_ID IS '거래그룹ID';
COMMENT ON COLUMN BXM_TRX_GRP.TRX_GRP_NM IS '거래그룹명';
COMMENT ON COLUMN BXM_TRX_GRP.USE_YN IS '사용여부';

CREATE TABLE BXM_TRX_GRP_REL (
	 TRX_GRP_ID VARCHAR2(40) NOT NULL,
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 SVC_NM VARCHAR2(512) NOT NULL,
	 OP_NM VARCHAR2(512) NOT NULL,
	 TRX_CD VARCHAR2(12) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_TRX_GRP_REL ON BXM_TRX_GRP_REL 
( 
	 TRX_GRP_ID ASC,
	 BXM_APP_ID ASC,
	 SVC_NM ASC,
	 OP_NM ASC
);

ALTER TABLE BXM_TRX_GRP_REL ADD CONSTRAINT PK_BXM_TRX_GRP_REL PRIMARY KEY USING INDEX PK_BXM_TRX_GRP_REL;

COMMENT ON TABLE BXM_TRX_GRP_REL IS 'BXM 온라인거래그룹 관계';
COMMENT ON COLUMN BXM_TRX_GRP_REL.TRX_GRP_ID IS '거래그룹ID';
COMMENT ON COLUMN BXM_TRX_GRP_REL.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_TRX_GRP_REL.SVC_NM IS '서비스명';
COMMENT ON COLUMN BXM_TRX_GRP_REL.OP_NM IS '오퍼레이션명';
COMMENT ON COLUMN BXM_TRX_GRP_REL.TRX_CD IS '거래코드';

CREATE TABLE BXM_CACHE (
	 CACHE_NM VARCHAR2(128) NOT NULL,
	 TABLE_NM VARCHAR2(100) NOT NULL,
	 BXM_APP_ID VARCHAR2(40) NOT NULL,
	 DTO_NM VARCHAR2(1024) NOT NULL,
	 CACHE_CONFIG VARCHAR2(1024) NULL,
	 SELECT_CNDT VARCHAR2(1024) NULL,
	 DESCRIPTION VARCHAR2(512) NULL,
	 INIT_LOAD_YN VARCHAR2(1) NULL,
	 USE_YN VARCHAR2(1) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_CACHE ON BXM_CACHE 
( 
	 CACHE_NM ASC
);

ALTER TABLE BXM_CACHE ADD CONSTRAINT PK_BXM_CACHE PRIMARY KEY USING INDEX PK_BXM_CACHE;

COMMENT ON TABLE BXM_CACHE IS '캐시테이블';
COMMENT ON COLUMN BXM_CACHE.CACHE_NM IS '캐시명';
COMMENT ON COLUMN BXM_CACHE.TABLE_NM IS '테이블명';
COMMENT ON COLUMN BXM_CACHE.BXM_APP_ID IS 'BXM어플리케이션ID';
COMMENT ON COLUMN BXM_CACHE.DTO_NM IS 'DTO명';
COMMENT ON COLUMN BXM_CACHE.CACHE_CONFIG IS '캐시환경';
COMMENT ON COLUMN BXM_CACHE.SELECT_CNDT IS '조회조건';
COMMENT ON COLUMN BXM_CACHE.DESCRIPTION IS '설명';
COMMENT ON COLUMN BXM_CACHE.INIT_LOAD_YN IS '초기적재여부';
COMMENT ON COLUMN BXM_CACHE.USE_YN IS '사용여부';
COMMENT ON COLUMN BXM_CACHE.MODIFY_USER_ID IS '변경사용자ID';
COMMENT ON COLUMN BXM_CACHE.MODIFY_DTTM IS '변경일시';

CREATE TABLE BXM_CACHE_RUNTIME (
	 HOST_NM VARCHAR2(128) NULL,
	 CONTAINER_NM VARCHAR2(128) NULL,
	 MNG_SVC_URL VARCHAR2(512) NULL,
	 MNG_SVC_CONTEXT VARCHAR2(128) NULL,
	 MODIFY_USER_ID VARCHAR2(32) NULL,
	 MODIFY_DTTM VARCHAR2(23) NULL
);

CREATE UNIQUE INDEX PK_BXM_CACHE_RUNTIME ON BXM_CACHE_RUNTIME 
( 
);

ALTER TABLE BXM_CACHE_RUNTIME ADD CONSTRAINT PK_BXM_CACHE_RUNTIME PRIMARY KEY USING INDEX PK_BXM_CACHE_RUNTIME;

COMMENT ON TABLE BXM_CACHE_RUNTIME IS '캐시운영정보';
COMMENT ON COLUMN BXM_CACHE_RUNTIME.HOST_NM IS '호스트명';
COMMENT ON COLUMN BXM_CACHE_RUNTIME.CONTAINER_NM IS '컨테이너명';
COMMENT ON COLUMN BXM_CACHE_RUNTIME.MNG_SVC_URL IS '관리서비스URL';
COMMENT ON COLUMN BXM_CACHE_RUNTIME.MNG_SVC_CONTEXT IS '관리서비스컨텍스트';
COMMENT ON COLUMN BXM_CACHE_RUNTIME.MODIFY_USER_ID IS '변경사용자ID';
COMMENT ON COLUMN BXM_CACHE_RUNTIME.MODIFY_DTTM IS '변경일시';

CREATE TABLE F_BATCH_JOB_EXECUTION (
	 JOB_EXECUTION_ID NUMBER(19) NOT NULL,
	 VERSION NUMBER(19) NULL,
	 JOB_INSTANCE_ID NUMBER(19) NOT NULL,
	 FRM_INSTANCE_ID VARCHAR2(40) NULL,
	 CREATE_TIME TIMESTAMP(6) NOT NULL,
	 START_TIME TIMESTAMP(6) NULL,
	 END_TIME TIMESTAMP(6) NULL,
	 STATUS VARCHAR2(10) NULL,
	 EXIT_CODE VARCHAR2(100) NULL,
	 EXIT_MESSAGE VARCHAR2(2500) NULL,
	 SUSPENDED NUMBER(1) NULL,
	 LAST_UPDATED TIMESTAMP(6) NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_JOB_EXECUTION ON F_BATCH_JOB_EXECUTION 
( 
	 JOB_EXECUTION_ID ASC
);

ALTER TABLE F_BATCH_JOB_EXECUTION ADD CONSTRAINT PK_F_BATCH_JOB_EXECUTION PRIMARY KEY USING INDEX PK_F_BATCH_JOB_EXECUTION;

COMMENT ON TABLE F_BATCH_JOB_EXECUTION IS '배치작업 실행정보';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.JOB_EXECUTION_ID IS '배치작업 실행 아이디';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.VERSION IS '배치작업 실행버전';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.JOB_INSTANCE_ID IS '배치작업 인스턴스 아이디';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.FRM_INSTANCE_ID IS '배치작업 실행 프레임워크 인스턴스 아이디';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.CREATE_TIME IS '배치작업 생성시각';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.START_TIME IS '배치작업 시작시각';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.END_TIME IS '배치작업 종료 시각';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.STATUS IS '배치작업 실행상태';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.EXIT_CODE IS '배치작업 종료 구분';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.EXIT_MESSAGE IS '배치작업 종료 메시지';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.SUSPENDED IS '배치일시정지여부';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION.LAST_UPDATED IS '배치작업 상태 업데이트 시각';

CREATE TABLE F_BATCH_JOB_EXECUTION_CONTEXT (
	 JOB_EXECUTION_ID NUMBER(19) NOT NULL,
	 SHORT_CONTEXT VARCHAR2(2500) NOT NULL,
	 SERIALIZED_CONTEXT CLOB NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_JOB_EXECUTION_CONTEXT ON F_BATCH_JOB_EXECUTION_CONTEXT 
( 
	 JOB_EXECUTION_ID ASC
);

ALTER TABLE F_BATCH_JOB_EXECUTION_CONTEXT ADD CONSTRAINT PK_F_BATCH_JOB_EXECUTION_CONTEXT PRIMARY KEY USING INDEX PK_F_BATCH_JOB_EXECUTION_CONTEXT;

COMMENT ON TABLE F_BATCH_JOB_EXECUTION_CONTEXT IS '배치작업 실행 컨텍스트 정보';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION_CONTEXT.JOB_EXECUTION_ID IS '배치작업 실행 아이디';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION_CONTEXT.SHORT_CONTEXT IS 'SHORT 컨텍스트';
COMMENT ON COLUMN F_BATCH_JOB_EXECUTION_CONTEXT.SERIALIZED_CONTEXT IS 'SERIALIZED 컨텍스트';

CREATE TABLE F_BATCH_JOB_INSTANCE (
	 JOB_INSTANCE_ID NUMBER(19) NOT NULL,
	 VERSION NUMBER(19) NULL,
	 JOB_NAME VARCHAR2(100) NOT NULL,
	 JOB_KEY VARCHAR2(32) NOT NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_JOB_INSTANCE ON F_BATCH_JOB_INSTANCE 
( 
	 JOB_INSTANCE_ID ASC
);

ALTER TABLE F_BATCH_JOB_INSTANCE ADD CONSTRAINT PK_F_BATCH_JOB_INSTANCE PRIMARY KEY USING INDEX PK_F_BATCH_JOB_INSTANCE;

COMMENT ON TABLE F_BATCH_JOB_INSTANCE IS '배치작업 인스턴스';
COMMENT ON COLUMN F_BATCH_JOB_INSTANCE.JOB_INSTANCE_ID IS '배치작업 인스턴스 아이디';
COMMENT ON COLUMN F_BATCH_JOB_INSTANCE.VERSION IS '배치작업 버전';
COMMENT ON COLUMN F_BATCH_JOB_INSTANCE.JOB_NAME IS '배치작업 명';
COMMENT ON COLUMN F_BATCH_JOB_INSTANCE.JOB_KEY IS '배치작업 KEY';

CREATE TABLE F_BATCH_JOB_PARAMS (
	 JOB_INSTANCE_ID NUMBER(19) NOT NULL,
	 TYPE_CD VARCHAR2(6) NOT NULL,
	 KEY_NAME VARCHAR2(100) NOT NULL,
	 STRING_VAL VARCHAR2(4000) NULL,
	 DATE_VAL TIMESTAMP(6) NULL,
	 LONG_VAL NUMBER(19) NULL,
	 DOUBLE_VAL NUMBER NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_JOB_PARAMS ON F_BATCH_JOB_PARAMS 
( 
);

ALTER TABLE F_BATCH_JOB_PARAMS ADD CONSTRAINT PK_F_BATCH_JOB_PARAMS PRIMARY KEY USING INDEX PK_F_BATCH_JOB_PARAMS;

COMMENT ON TABLE F_BATCH_JOB_PARAMS IS '배치작업 실행 파라미터';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS.JOB_INSTANCE_ID IS '배치작업 인스턴스 아이디';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS.TYPE_CD IS '실행파라미터 타입코드';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS.KEY_NAME IS '실행파라미터 KEY';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS.STRING_VAL IS '실행파라미터 String 값';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS.DATE_VAL IS '실행파라미터 Date 값';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS.LONG_VAL IS '실행파라미터 Long 값';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS.DOUBLE_VAL IS '실행파라미터 Double 값';

CREATE TABLE F_BATCH_STEP_EXECUTION (
	 STEP_EXECUTION_ID NUMBER(19) NOT NULL,
	 VERSION NUMBER(19) NOT NULL,
	 STEP_NAME VARCHAR2(100) NOT NULL,
	 JOB_EXECUTION_ID NUMBER(19) NOT NULL,
	 START_TIME TIMESTAMP(6) NOT NULL,
	 END_TIME TIMESTAMP(6) NULL,
	 STATUS VARCHAR2(10) NULL,
	 COMMIT_COUNT NUMBER(19) NULL,
	 READ_COUNT NUMBER(19) NULL,
	 FILTER_COUNT NUMBER(19) NULL,
	 WRITE_COUNT NUMBER(19) NULL,
	 READ_SKIP_COUNT NUMBER(19) NULL,
	 WRITE_SKIP_COUNT NUMBER(19) NULL,
	 PROCESS_SKIP_COUNT NUMBER(19) NULL,
	 ROLLBACK_COUNT NUMBER(19) NULL,
	 EXIT_CODE VARCHAR2(100) NULL,
	 EXIT_MESSAGE VARCHAR2(2500) NULL,
	 LAST_UPDATED TIMESTAMP(6) NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_STEP_EXECUTION ON F_BATCH_STEP_EXECUTION 
( 
	 STEP_EXECUTION_ID ASC
);

ALTER TABLE F_BATCH_STEP_EXECUTION ADD CONSTRAINT PK_F_BATCH_STEP_EXECUTION PRIMARY KEY USING INDEX PK_F_BATCH_STEP_EXECUTION;

COMMENT ON TABLE F_BATCH_STEP_EXECUTION IS '배치작업 스텝 실행정보';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.STEP_EXECUTION_ID IS '배치스텝 아이디';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.VERSION IS '배치스텝 실행버전';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.STEP_NAME IS '배치스텝 이름';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.JOB_EXECUTION_ID IS '배치작업 아이디';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.START_TIME IS '배치스텝 시작시각';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.END_TIME IS '배치스텝 종료시각';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.STATUS IS '배치스텝 상태';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.COMMIT_COUNT IS '배치스텝 커밋카운트';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.READ_COUNT IS '배치스텝 READ 카운트';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.FILTER_COUNT IS '배치스텝 FILTER 카운트';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.WRITE_COUNT IS '배치스텝 WRITE 카운트';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.READ_SKIP_COUNT IS '배치스텝 READSKIP 카운트';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.WRITE_SKIP_COUNT IS '배치스텝 WRITESKIP 카운트';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.PROCESS_SKIP_COUNT IS '배치스텝 PROCESSSKIP 카운트';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.ROLLBACK_COUNT IS '배치스텝 ROLLBACK 카운트';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.EXIT_CODE IS '배치스텝 종료 구분';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.EXIT_MESSAGE IS '배치스텝 종료 메시지';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION.LAST_UPDATED IS '배치스텝 상태 업테이트 시각';

CREATE TABLE F_BATCH_STEP_EXECUTION_CONTEXT (
	 STEP_EXECUTION_ID NUMBER(19) NOT NULL,
	 SHORT_CONTEXT VARCHAR2(2500) NOT NULL,
	 SERIALIZED_CONTEXT CLOB NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_STEP_EXECUTION_CONTEXT ON F_BATCH_STEP_EXECUTION_CONTEXT 
( 
	 STEP_EXECUTION_ID ASC
);

ALTER TABLE F_BATCH_STEP_EXECUTION_CONTEXT ADD CONSTRAINT PK_F_BATCH_STEP_EXECUTION_CONTEXT PRIMARY KEY USING INDEX PK_F_BATCH_STEP_EXECUTION_CONTEXT;

COMMENT ON TABLE F_BATCH_STEP_EXECUTION_CONTEXT IS '배치작업 스텝 실행 컨텍스트 정보';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION_CONTEXT.STEP_EXECUTION_ID IS '배치스텝 아이디';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION_CONTEXT.SHORT_CONTEXT IS 'SHORT 컨텍스트';
COMMENT ON COLUMN F_BATCH_STEP_EXECUTION_CONTEXT.SERIALIZED_CONTEXT IS 'SERIALIZED 컨텍스트';

CREATE TABLE F_BATCH_DISTD_SERVICE (
	 DISTRIBUTED_NAME VARCHAR2(512) NOT NULL,
	 APPLICATION_NAME VARCHAR2(512) NOT NULL,
	 SERVICE_NAME VARCHAR2(512) NOT NULL,
	 OPERATION_NAME VARCHAR2(512) NOT NULL,
	 LAST_UPDATED TIMESTAMP(6) NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_DISTD_SERVICE ON F_BATCH_DISTD_SERVICE 
( 
	 DISTRIBUTED_NAME ASC
);

ALTER TABLE F_BATCH_DISTD_SERVICE ADD CONSTRAINT PK_F_BATCH_DISTD_SERVICE PRIMARY KEY USING INDEX PK_F_BATCH_DISTD_SERVICE;

COMMENT ON TABLE F_BATCH_DISTD_SERVICE IS '배치 분산 서비스 관리';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE.DISTRIBUTED_NAME IS '분산(DISTRIBUTED)명';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE.APPLICATION_NAME IS '어플리케이션명';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE.SERVICE_NAME IS '서비스명';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE.OPERATION_NAME IS '오퍼레이션명';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE.LAST_UPDATED IS '최종수정일시';

CREATE TABLE F_BATCH_DISTD_SERVICEINFO (
	 DISTRIBUTED_NAME VARCHAR2(512) NOT NULL,
	 SERVICE_URL VARCHAR2(2500) NULL,
	 JNDI_ENV_PROPS VARCHAR2(2500) NULL,
	 JNDI_NAME VARCHAR2(512) NULL,
	 DISTRIBUTE_RATIO NUMBER(2) NOT NULL,
	 LAST_UPDATED TIMESTAMP(6) NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_DISTD_SERVICEINFO ON F_BATCH_DISTD_SERVICEINFO 
( 
);

ALTER TABLE F_BATCH_DISTD_SERVICEINFO ADD CONSTRAINT PK_F_BATCH_DISTD_SERVICEINFO PRIMARY KEY USING INDEX PK_F_BATCH_DISTD_SERVICEINFO;

COMMENT ON TABLE F_BATCH_DISTD_SERVICEINFO IS '배치 분산 서비스 정보';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICEINFO.DISTRIBUTED_NAME IS '분산(DISTRIBUTED)명';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICEINFO.SERVICE_URL IS '서비스 URL';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICEINFO.JNDI_ENV_PROPS IS 'JNDI 환경 Propery정보';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICEINFO.JNDI_NAME IS 'JNDI 명';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICEINFO.DISTRIBUTE_RATIO IS '분산비율';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICEINFO.LAST_UPDATED IS '최종수정일시';

CREATE TABLE F_BATCH_DISTD_SERVICE_RECOVERY (
	 JOB_EXECUTION_ID NUMBER(19) NOT NULL,
	 JOB_NAME VARCHAR2(100) NOT NULL,
	 STEP_EXECUTION_ID NUMBER(19) NOT NULL,
	 STEP_NAME VARCHAR2(100) NOT NULL,
	 INPUT_SEQ NUMBER(20) NOT NULL,
	 UUID VARCHAR2(40) NOT NULL,
	 MESSAGE_SEQ NUMBER(20) NOT NULL,
	 APPLICATION_NAME VARCHAR2(512) NOT NULL,
	 SERVICE_NAME VARCHAR2(512) NOT NULL,
	 OPERATION_NAME VARCHAR2(512) NOT NULL,
	 MESSAGE BLOB NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_DISTD_SERVICE_RECOVERY ON F_BATCH_DISTD_SERVICE_RECOVERY 
( 
	 UUID ASC,
	 MESSAGE_SEQ ASC,
);

ALTER TABLE F_BATCH_DISTD_SERVICE_RECOVERY ADD CONSTRAINT PK_F_BATCH_DISTD_SERVICE_RECOVERY PRIMARY KEY USING INDEX PK_F_BATCH_DISTD_SERVICE_RECOVERY;

COMMENT ON TABLE F_BATCH_DISTD_SERVICE_RECOVERY IS '배치 분산 서비스 복구처리';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE_RECOVERY.JOB_EXECUTION_ID IS '배치작업 실행 아이디';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE_RECOVERY.JOB_NAME IS '배치작업명';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE_RECOVERY.STEP_EXECUTION_ID IS '배치스텝 실행 아이디';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE_RECOVERY.STEP_NAME IS '배치스텝명';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE_RECOVERY.INPUT_SEQ IS 'INPUT SEQ';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE_RECOVERY.UUID IS 'UUID';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE_RECOVERY.MESSAGE_SEQ IS 'MESSAGE SEQ';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE_RECOVERY.APPLICATION_NAME IS '어플리케이션명';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE_RECOVERY.SERVICE_NAME IS '서비스명';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE_RECOVERY.OPERATION_NAME IS '오퍼레이션명';
COMMENT ON COLUMN F_BATCH_DISTD_SERVICE_RECOVERY.MESSAGE IS 'MESSAGE';

CREATE TABLE F_BATCH_JOB_REGISTRY (
	 APPLICATION_NAME VARCHAR2(512) NOT NULL,
	 JOB_NAME VARCHAR2(512) NOT NULL,
	 FRM_INSTANCE_ID VARCHAR2(40) NULL,
	 JOB_DEFINITION_SOURCE CLOB NULL,
	 CREATE_TIME TIMESTAMP(6) NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_JOB_REGISTRY ON F_BATCH_JOB_REGISTRY 
( 
);

ALTER TABLE F_BATCH_JOB_REGISTRY ADD CONSTRAINT PK_F_BATCH_JOB_REGISTRY PRIMARY KEY USING INDEX PK_F_BATCH_JOB_REGISTRY;

COMMENT ON TABLE F_BATCH_JOB_REGISTRY IS '배치 작업 실시간 레지스트리';
COMMENT ON COLUMN F_BATCH_JOB_REGISTRY.APPLICATION_NAME IS '어플리케이션명';
COMMENT ON COLUMN F_BATCH_JOB_REGISTRY.JOB_NAME IS '배치작업명';
COMMENT ON COLUMN F_BATCH_JOB_REGISTRY.FRM_INSTANCE_ID IS '프레임워크 인스턴스 아이디';
COMMENT ON COLUMN F_BATCH_JOB_REGISTRY.JOB_DEFINITION_SOURCE IS 'JOB 정의 SOURCE';
COMMENT ON COLUMN F_BATCH_JOB_REGISTRY.CREATE_TIME IS '생성일시';

CREATE TABLE BXM_BUILDER_CONFIG_NS (
	 NAME VARCHAR2(50) NOT NULL,
	 DESCRIPTION VARCHAR2(200) NULL
);

CREATE UNIQUE INDEX PK_BXM_BUILDER_CONFIG_NS ON BXM_BUILDER_CONFIG_NS 
( 
	 NAME ASC
);

ALTER TABLE BXM_BUILDER_CONFIG_NS ADD CONSTRAINT PK_BXM_BUILDER_CONFIG_NS PRIMARY KEY USING INDEX PK_BXM_BUILDER_CONFIG_NS;

COMMENT ON TABLE BXM_BUILDER_CONFIG_NS IS 'BXM Studio 환경 설정 네임스페이스';
COMMENT ON COLUMN BXM_BUILDER_CONFIG_NS.NAME IS '이름';
COMMENT ON COLUMN BXM_BUILDER_CONFIG_NS.DESCRIPTION IS '설명';

CREATE TABLE BXM_BUILDER_CONFIG (
	 NAMESPACE VARCHAR2(50) NOT NULL,
	 PROPERTY VARCHAR2(100) NOT NULL,
	 VALUE VARCHAR2(500) NOT NULL,
	 DESCRIPTION VARCHAR2(1000) NULL,
	 USE_YN VARCHAR2(1) NULL
);

CREATE UNIQUE INDEX PK_BXM_BUILDER_CONFIG ON BXM_BUILDER_CONFIG 
( 
	 NAMESPACE ASC,
	 PROPERTY ASC,
	 VALUE ASC
);

ALTER TABLE BXM_BUILDER_CONFIG ADD CONSTRAINT PK_BXM_BUILDER_CONFIG PRIMARY KEY USING INDEX PK_BXM_BUILDER_CONFIG;

COMMENT ON TABLE BXM_BUILDER_CONFIG IS 'BXM Studio 환경 설정';
COMMENT ON COLUMN BXM_BUILDER_CONFIG.NAMESPACE IS 'Namespace';
COMMENT ON COLUMN BXM_BUILDER_CONFIG.PROPERTY IS '설정 Key값';
COMMENT ON COLUMN BXM_BUILDER_CONFIG.VALUE IS '설정 Value값';
COMMENT ON COLUMN BXM_BUILDER_CONFIG.DESCRIPTION IS '설명';
COMMENT ON COLUMN BXM_BUILDER_CONFIG.USE_YN IS '사용여부';

CREATE TABLE BXM_OMM_META_VERSION (
	 META_VERSION NUMBER NOT NULL,
	 IS_LOCK VARCHAR2(1) NOT NULL,
	 DATA BLOB NULL
);

CREATE UNIQUE INDEX PK_BXM_OMM_META_VERSION ON BXM_OMM_META_VERSION 
( 
	 META_VERSION ASC
);

ALTER TABLE BXM_OMM_META_VERSION ADD CONSTRAINT PK_BXM_OMM_META_VERSION PRIMARY KEY USING INDEX PK_BXM_OMM_META_VERSION;

COMMENT ON TABLE BXM_OMM_META_VERSION IS 'META 시스템 버젼';
COMMENT ON COLUMN BXM_OMM_META_VERSION.META_VERSION IS '메타버전';
COMMENT ON COLUMN BXM_OMM_META_VERSION.IS_LOCK IS '잠김';
COMMENT ON COLUMN BXM_OMM_META_VERSION.DATA IS '메타데이타';

CREATE TABLE BXM_OMM_META (
	 META_NAME VARCHAR2(50) NOT NULL,
	 DATA_TYPE VARCHAR2(50) NOT NULL,
	 META_DESC VARCHAR2(200) NOT NULL,
	 META_LENGTH NUMBER NULL,
	 META_DECIMAL NUMBER NULL,
	 META_ENCRYPT VARCHAR2(50) NULL,
	 USE_YN CHAR(1) NULL
);

CREATE UNIQUE INDEX PK_BXM_OMM_META ON BXM_OMM_META 
( 
	 META_NAME ASC
);

ALTER TABLE BXM_OMM_META ADD CONSTRAINT PK_BXM_OMM_META PRIMARY KEY USING INDEX PK_BXM_OMM_META;

COMMENT ON TABLE BXM_OMM_META IS 'META 시스템 동기화';
COMMENT ON COLUMN BXM_OMM_META.META_NAME IS '메타이름';
COMMENT ON COLUMN BXM_OMM_META.DATA_TYPE IS '데이타타입';
COMMENT ON COLUMN BXM_OMM_META.META_DESC IS '메타설명';
COMMENT ON COLUMN BXM_OMM_META.META_LENGTH IS '자료길이';
COMMENT ON COLUMN BXM_OMM_META.META_DECIMAL IS '소수점이하 자료길이';
COMMENT ON COLUMN BXM_OMM_META.META_ENCRYPT IS '암호화형태';
COMMENT ON COLUMN BXM_OMM_META.USE_YN IS '사용여부';

CREATE TABLE BXM_BUILDER_LOG (
	 BUNDLE_ID VARCHAR2(50) NOT NULL,
	 BUNDLE_VERSION VARCHAR2(32) NOT NULL,
	 USER_ID VARCHAR2(50) NULL,
	 IP VARCHAR2(20) NULL,
	 LOG_DATE VARCHAR2(16) NOT NULL,
	 EXCEPTION_TYPE VARCHAR2(50) NOT NULL,
	 NAMESPACE VARCHAR2(100) NOT NULL,
	 CAUSED_BY VARCHAR2(100) NOT NULL,
	 CONTENTS CLOB NULL
);

CREATE UNIQUE INDEX PK_BXM_BUILDER_LOG ON BXM_BUILDER_LOG 
( 
);

ALTER TABLE BXM_BUILDER_LOG ADD CONSTRAINT PK_BXM_BUILDER_LOG PRIMARY KEY USING INDEX PK_BXM_BUILDER_LOG;

COMMENT ON TABLE BXM_BUILDER_LOG IS '개발툴 로그';
COMMENT ON COLUMN BXM_BUILDER_LOG.BUNDLE_ID IS '플러그인 ID';
COMMENT ON COLUMN BXM_BUILDER_LOG.BUNDLE_VERSION IS '플러그인 버전';
COMMENT ON COLUMN BXM_BUILDER_LOG.USER_ID IS '사용자ID';
COMMENT ON COLUMN BXM_BUILDER_LOG.IP IS '사용자IP';
COMMENT ON COLUMN BXM_BUILDER_LOG.LOG_DATE IS '발생날짜';
COMMENT ON COLUMN BXM_BUILDER_LOG.EXCEPTION_TYPE IS '예외타입';
COMMENT ON COLUMN BXM_BUILDER_LOG.NAMESPACE IS '네임스페이스';
COMMENT ON COLUMN BXM_BUILDER_LOG.CAUSED_BY IS '발생원인';
COMMENT ON COLUMN BXM_BUILDER_LOG.CONTENTS IS '내용';

CREATE TABLE BXM_DATA_HISTORY (
	 PROC_DATE VARCHAR2(40) NOT NULL,
	 PROC_ID VARCHAR2(40) NOT NULL,
	 H_TYPE VARCHAR2(1) NOT NULL,
	 PROC_SEQ VARCHAR2(10) NOT NULL,
	 NAMESPACE VARCHAR2(512) NULL,
	 ID VARCHAR2(512) NULL,
	 STATEMENT VARCHAR2(512) NULL,
	 TABLE_NAME VARCHAR2(128) NULL,
	 PK_COLUMN_NAMES VARCHAR2(4000) NULL,
	 BEFORE_PK VARCHAR2(4000) NULL,
	 DATA_COLUMN_NAMES VARCHAR2(4000) NULL,
	 BEFORE_DATA VARCHAR2(4000) NULL,
	 AFTER_DATA VARCHAR2(4000) NULL,
	 GUID VARCHAR2(40) NULL
);

CREATE UNIQUE INDEX PK_BXM_DATA_HISTORY ON BXM_DATA_HISTORY 
( 
	 PROC_DATE ASC,
	 PROC_ID ASC,
	 H_TYPE ASC
);

ALTER TABLE BXM_DATA_HISTORY ADD CONSTRAINT PK_BXM_DATA_HISTORY PRIMARY KEY USING INDEX PK_BXM_DATA_HISTORY;

COMMENT ON TABLE BXM_DATA_HISTORY IS '중요원장데이터변경내용';
COMMENT ON COLUMN BXM_DATA_HISTORY.PROC_DATE IS '처리일시';
COMMENT ON COLUMN BXM_DATA_HISTORY.PROC_ID IS '처리ID(ROWID)';
COMMENT ON COLUMN BXM_DATA_HISTORY.H_TYPE IS 'B : BEFORE, F : AFTER';
COMMENT ON COLUMN BXM_DATA_HISTORY.PROC_SEQ IS '일련번호';
COMMENT ON COLUMN BXM_DATA_HISTORY.NAMESPACE IS 'CLASSNAME';
COMMENT ON COLUMN BXM_DATA_HISTORY.ID IS 'METHODNAME';
COMMENT ON COLUMN BXM_DATA_HISTORY.STATEMENT IS 'STATEMENT';
COMMENT ON COLUMN BXM_DATA_HISTORY.TABLE_NAME IS '테이블명';
COMMENT ON COLUMN BXM_DATA_HISTORY.PK_COLUMN_NAMES IS 'PK컬럼명';
COMMENT ON COLUMN BXM_DATA_HISTORY.BEFORE_PK IS '변경전PK';
COMMENT ON COLUMN BXM_DATA_HISTORY.DATA_COLUMN_NAMES IS '데이터컬럼명';
COMMENT ON COLUMN BXM_DATA_HISTORY.BEFORE_DATA IS '변경전데이터';
COMMENT ON COLUMN BXM_DATA_HISTORY.AFTER_DATA IS '변경후데이터';
COMMENT ON COLUMN BXM_DATA_HISTORY.GUID IS '변경거래GUID';

CREATE TABLE BXM_DBIO_DEPENDENCY (
	 NAMESPACE VARCHAR2(256) NOT NULL,
	 ID VARCHAR2(256) NOT NULL,
	 TABLE_NAME VARCHAR2(256) NOT NULL,
	 COLUMN_NAME VARCHAR2(256) NOT NULL,
	 STATEMENT VARCHAR2(256) NOT NULL,
	 STATUS_MSG VARCHAR2(256) NULL,
	 DBIO_PATH VARCHAR2(256) NOT NULL,
	 APPLICATION_NAME VARCHAR2(40) NOT NULL
);

CREATE UNIQUE INDEX PK_BXM_DBIO_DEPENDENCY ON BXM_DBIO_DEPENDENCY 
( 
	 NAMESPACE ASC,
	 ID ASC,
	 TABLE_NAME ASC,
	 COLUMN_NAME ASC
);

ALTER TABLE BXM_DBIO_DEPENDENCY ADD CONSTRAINT PK_BXM_DBIO_DEPENDENCY PRIMARY KEY USING INDEX PK_BXM_DBIO_DEPENDENCY;

COMMENT ON TABLE BXM_DBIO_DEPENDENCY IS 'BXM_DBIO_DEPENDENCY';
COMMENT ON COLUMN BXM_DBIO_DEPENDENCY.NAMESPACE IS 'NAMESPACE';
COMMENT ON COLUMN BXM_DBIO_DEPENDENCY.ID IS 'STATEMENT(S/U/I/D)';
COMMENT ON COLUMN BXM_DBIO_DEPENDENCY.TABLE_NAME IS '테이블명';
COMMENT ON COLUMN BXM_DBIO_DEPENDENCY.COLUMN_NAME IS '컬럼명';
COMMENT ON COLUMN BXM_DBIO_DEPENDENCY.STATEMENT IS 'STATEMENT';
COMMENT ON COLUMN BXM_DBIO_DEPENDENCY.STATUS_MSG IS '상태메시지';
COMMENT ON COLUMN BXM_DBIO_DEPENDENCY.DBIO_PATH IS 'DBIO경로';
COMMENT ON COLUMN BXM_DBIO_DEPENDENCY.APPLICATION_NAME IS '어플리케이션명';

CREATE TABLE F_BATCH_JOB_PARAMS_EXT (
	 JOB_INSTANCE_ID NUMBER(19) NOT NULL,
	 TYPE_CD VARCHAR2(6) NOT NULL,
	 KEY_NAME VARCHAR2(100) NOT NULL,
	 STRING_VAL VARCHAR2(4000) NULL,
	 DATE_VAL TIMESTAMP(6) NULL,
	 LONG_VAL NUMBER(19) NULL,
	 DOUBLE_VAL NUMBER NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_JOB_PARAMS_EXT ON F_BATCH_JOB_PARAMS_EXT 
( 
);

ALTER TABLE F_BATCH_JOB_PARAMS_EXT ADD CONSTRAINT PK_F_BATCH_JOB_PARAMS_EXT PRIMARY KEY USING INDEX PK_F_BATCH_JOB_PARAMS_EXT;

COMMENT ON TABLE F_BATCH_JOB_PARAMS_EXT IS '배치작업 실행 파라미터 확장';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS_EXT.JOB_INSTANCE_ID IS '배치작업 인스턴스 아이디';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS_EXT.TYPE_CD IS '실행파라미터 타입코드';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS_EXT.KEY_NAME IS '실행파라미터 KEY';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS_EXT.STRING_VAL IS '실행파라미터 String 값';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS_EXT.DATE_VAL IS '실행파라미터 Date 값';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS_EXT.LONG_VAL IS '실행파라미터 Long 값';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS_EXT.DOUBLE_VAL IS '실행파라미터 Double 값';

CREATE TABLE F_BATCH_JOB_PARAMS_EXCEPT (
	 KEY_NAME VARCHAR2(100) NOT NULL,
	 USE_YN VARCHAR2(1) NOT NULL
);

CREATE UNIQUE INDEX PK_F_BATCH_JOB_PARAMS_EXCEPT ON F_BATCH_JOB_PARAMS_EXCEPT 
( 
	 KEY_NAME ASC
);

ALTER TABLE F_BATCH_JOB_PARAMS_EXCEPT ADD CONSTRAINT PK_F_BATCH_JOB_PARAMS_EXCEPT PRIMARY KEY USING INDEX PK_F_BATCH_JOB_PARAMS_EXCEPT;

COMMENT ON TABLE F_BATCH_JOB_PARAMS_EXCEPT IS '배치작업 실행 파라미터 제외';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS_EXCEPT.KEY_NAME IS '실행파라미터 KEY';
COMMENT ON COLUMN F_BATCH_JOB_PARAMS_EXCEPT.USE_YN IS '사용여부';

CREATE TABLE BXM_CC_ALARM (
	 CC_ID VARCHAR2(10) NOT NULL,
	 CC_ALRM_NO NUMBER(3) NOT NULL,
	 ALRM_OCCR_VL VARCHAR2(20) NULL,
	 TRNF_TGPS_ID VARCHAR2(20) NULL,
	 TRNF_TGPS_ID2 VARCHAR2(20) NULL,
	 EXPL VARCHAR2(200) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_ALARM ON BXM_CC_ALARM 
( 
	 CC_ID ASC,
	 CC_ALRM_NO ASC
);

ALTER TABLE BXM_CC_ALARM ADD CONSTRAINT PK_BXM_CC_ALARM PRIMARY KEY USING INDEX PK_BXM_CC_ALARM;

COMMENT ON TABLE BXM_CC_ALARM IS '센터컷 알람';
COMMENT ON COLUMN BXM_CC_ALARM.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_ALARM.CC_ALRM_NO IS 'CC_ALRM_NO';
COMMENT ON COLUMN BXM_CC_ALARM.ALRM_OCCR_VL IS 'ALRM_OCCR_VL';
COMMENT ON COLUMN BXM_CC_ALARM.TRNF_TGPS_ID IS 'TRNF_TGPS_ID';
COMMENT ON COLUMN BXM_CC_ALARM.TRNF_TGPS_ID2 IS 'TRNF_TGPS_ID2';
COMMENT ON COLUMN BXM_CC_ALARM.EXPL IS 'EXPL';
COMMENT ON COLUMN BXM_CC_ALARM.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_ALARM.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_CONCURRENT_CONTROL (
	 CNRL_ID VARCHAR2(8) NOT NULL,
	 DT_ATRB_CD VARCHAR2(2) NOT NULL,
	 CNRL_SRT_TIME VARCHAR2(4) NOT NULL,
	 CNRL_END_TIME VARCHAR2(4) NOT NULL,
	 SMTM_EXEC_CNT NUMBER(3) NOT NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_CONCURRENT_CONTROL ON BXM_CC_CONCURRENT_CONTROL 
( 
	 CNRL_ID ASC,
	 DT_ATRB_CD ASC,
	 CNRL_SRT_TIME ASC
);

ALTER TABLE BXM_CC_CONCURRENT_CONTROL ADD CONSTRAINT PK_BXM_CC_CONCURRENT_CONTROL PRIMARY KEY USING INDEX PK_BXM_CC_CONCURRENT_CONTROL;

COMMENT ON TABLE BXM_CC_CONCURRENT_CONTROL IS 'BXM_CC_CONCURRENT_CONTROL';
COMMENT ON COLUMN BXM_CC_CONCURRENT_CONTROL.CNRL_ID IS 'CNRL_ID';
COMMENT ON COLUMN BXM_CC_CONCURRENT_CONTROL.DT_ATRB_CD IS 'DT_ATRB_CD';
COMMENT ON COLUMN BXM_CC_CONCURRENT_CONTROL.CNRL_SRT_TIME IS 'CNRL_SRT_TIME';
COMMENT ON COLUMN BXM_CC_CONCURRENT_CONTROL.CNRL_END_TIME IS 'CNRL_END_TIME';
COMMENT ON COLUMN BXM_CC_CONCURRENT_CONTROL.SMTM_EXEC_CNT IS 'SMTM_EXEC_CNT';
COMMENT ON COLUMN BXM_CC_CONCURRENT_CONTROL.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_CONCURRENT_CONTROL.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_ENV (
	 TRX_KN_CD VARCHAR2(2) NOT NULL,
	 USER_DEFN_CLSE_NM1 VARCHAR2(100) NOT NULL,
	 USER_DEFN_CLSE_NM2 VARCHAR2(100) NULL,
	 USER_DEFN_CLSE_NM3 VARCHAR2(100) NULL,
	 USER_DEFN_CLSE_NM4 VARCHAR2(100) NULL,
	 USER_DEFN_CLSE_NM5 VARCHAR2(100) NULL,
	 USER_DEFN_CLSE_NM6 VARCHAR2(100) NULL,
	 USER_DEFN_CLSE_NM7 VARCHAR2(100) NULL,
	 USER_DEFN_CLSE_NM8 VARCHAR2(100) NULL,
	 USER_DEFN_CLSE_NM9 VARCHAR2(100) NULL,
	 USER_DEFN_CLSE_NM10 VARCHAR2(100) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_ENV ON BXM_CC_ENV 
( 
	 TRX_KN_CD ASC,
	 USER_DEFN_CLSE_NM1 ASC
);

ALTER TABLE BXM_CC_ENV ADD CONSTRAINT PK_BXM_CC_ENV PRIMARY KEY USING INDEX PK_BXM_CC_ENV;

COMMENT ON TABLE BXM_CC_ENV IS 'BXM_CC_ENV';
COMMENT ON COLUMN BXM_CC_ENV.TRX_KN_CD IS 'TRX_KN_CD';
COMMENT ON COLUMN BXM_CC_ENV.USER_DEFN_CLSE_NM1 IS 'USER_DEFN_CLSE_NM1';
COMMENT ON COLUMN BXM_CC_ENV.USER_DEFN_CLSE_NM2 IS 'USER_DEFN_CLSE_NM2';
COMMENT ON COLUMN BXM_CC_ENV.USER_DEFN_CLSE_NM3 IS 'USER_DEFN_CLSE_NM3';
COMMENT ON COLUMN BXM_CC_ENV.USER_DEFN_CLSE_NM4 IS 'USER_DEFN_CLSE_NM4';
COMMENT ON COLUMN BXM_CC_ENV.USER_DEFN_CLSE_NM5 IS 'USER_DEFN_CLSE_NM5';
COMMENT ON COLUMN BXM_CC_ENV.USER_DEFN_CLSE_NM6 IS 'USER_DEFN_CLSE_NM6';
COMMENT ON COLUMN BXM_CC_ENV.USER_DEFN_CLSE_NM7 IS 'USER_DEFN_CLSE_NM7';
COMMENT ON COLUMN BXM_CC_ENV.USER_DEFN_CLSE_NM8 IS 'USER_DEFN_CLSE_NM8';
COMMENT ON COLUMN BXM_CC_ENV.USER_DEFN_CLSE_NM9 IS 'USER_DEFN_CLSE_NM9';
COMMENT ON COLUMN BXM_CC_ENV.USER_DEFN_CLSE_NM10 IS 'USER_DEFN_CLSE_NM10';
COMMENT ON COLUMN BXM_CC_ENV.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_ENV.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_ERROR (
	 CC_ID VARCHAR2(9) NOT NULL,
	 PCSN_DT VARCHAR2(8) NOT NULL,
	 ACPT_NO NUMBER(3) NOT NULL,
	 EXEC_NO NUMBER(6) NOT NULL,
	 TN_NO NUMBER(2) NOT NULL,
	 CC_TRX_SQNO NUMBER(15) NOT NULL,
	 SERI_PCSN_KEY VARCHAR2(100) NULL,
	 PCSN_ELTM VARCHAR2(6) NULL,
	 RE_REG_CD VARCHAR2(2) NULL,
	 MSG_CD VARCHAR2(8) NULL,
	 ERR_PRGM_ID VARCHAR2(12) NULL,
	 OPUT_MSG VARCHAR2(4000) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_ERROR ON BXM_CC_ERROR 
( 
	 CC_ID ASC,
	 PCSN_DT ASC,
	 ACPT_NO ASC,
	 EXEC_NO ASC,
	 TN_NO ASC,
	 CC_TRX_SQNO ASC
);

ALTER TABLE BXM_CC_ERROR ADD CONSTRAINT PK_BXM_CC_ERROR PRIMARY KEY USING INDEX PK_BXM_CC_ERROR;

COMMENT ON TABLE BXM_CC_ERROR IS 'BXM_CC_ERROR';
COMMENT ON COLUMN BXM_CC_ERROR.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_ERROR.PCSN_DT IS 'PCSN_DT';
COMMENT ON COLUMN BXM_CC_ERROR.ACPT_NO IS 'ACPT_NO';
COMMENT ON COLUMN BXM_CC_ERROR.EXEC_NO IS 'EXEC_NO';
COMMENT ON COLUMN BXM_CC_ERROR.TN_NO IS 'TN_NO';
COMMENT ON COLUMN BXM_CC_ERROR.CC_TRX_SQNO IS 'CC_TRX_SQNO';
COMMENT ON COLUMN BXM_CC_ERROR.SERI_PCSN_KEY IS 'SERI_PCSN_KEY';
COMMENT ON COLUMN BXM_CC_ERROR.PCSN_ELTM IS 'PCSN_ELTM';
COMMENT ON COLUMN BXM_CC_ERROR.RE_REG_CD IS 'RE_REG_CD';
COMMENT ON COLUMN BXM_CC_ERROR.MSG_CD IS 'MSG_CD';
COMMENT ON COLUMN BXM_CC_ERROR.ERR_PRGM_ID IS 'ERR_PRGM_ID';
COMMENT ON COLUMN BXM_CC_ERROR.OPUT_MSG IS 'OPUT_MSG';
COMMENT ON COLUMN BXM_CC_ERROR.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_ERROR.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_ERROR_SEQ (
	 CC_ID VARCHAR2(9) NOT NULL,
	 PCSN_DT VARCHAR2(8) NOT NULL,
	 ACPT_NO NUMBER(3) NOT NULL,
	 TN_NO NUMBER(2) NOT NULL,
	 SERI_PCSN_KEY VARCHAR2(100) NULL,
	 CC_TRX_SQNO NUMBER(15) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_ERROR_SEQ ON BXM_CC_ERROR_SEQ 
( 
	 CC_ID ASC,
	 PCSN_DT ASC,
	 ACPT_NO ASC,
	 TN_NO ASC
);

ALTER TABLE BXM_CC_ERROR_SEQ ADD CONSTRAINT PK_BXM_CC_ERROR_SEQ PRIMARY KEY USING INDEX PK_BXM_CC_ERROR_SEQ;

COMMENT ON TABLE BXM_CC_ERROR_SEQ IS 'BXM_CC_ERROR_SEQ';
COMMENT ON COLUMN BXM_CC_ERROR_SEQ.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_ERROR_SEQ.PCSN_DT IS 'PCSN_DT';
COMMENT ON COLUMN BXM_CC_ERROR_SEQ.ACPT_NO IS 'ACPT_NO';
COMMENT ON COLUMN BXM_CC_ERROR_SEQ.TN_NO IS 'TN_NO';
COMMENT ON COLUMN BXM_CC_ERROR_SEQ.SERI_PCSN_KEY IS 'SERI_PCSN_KEY';
COMMENT ON COLUMN BXM_CC_ERROR_SEQ.CC_TRX_SQNO IS 'CC_TRX_SQNO';
COMMENT ON COLUMN BXM_CC_ERROR_SEQ.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_ERROR_SEQ.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_INPUT_BATCH (
	 CC_ID VARCHAR2(9) NOT NULL,
	 PCSN_DT VARCHAR2(8) NOT NULL,
	 ACPT_NO NUMBER(3) NOT NULL,
	 EXEC_NO NUMBER(6) NOT NULL,
	 TN_NO NUMBER(2) NOT NULL,
	 CC_TRX_SQNO NUMBER(15) NOT NULL,
	 SERI_PCSN_KEY VARCHAR2(100) NULL,
	 PCSN_STAT NUMBER(2) NOT NULL,
	 PCSN_AMT NUMBER(19, 2) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL,
	 INPT_DATA_LTH NUMBER(4) NULL,
	 INPT_DATA VARCHAR2(4000) NULL,
	 INPT_DATA2 VARCHAR2(4000) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_INPUT_BATCH ON BXM_CC_INPUT_BATCH 
( 
	 CC_ID ASC,
	 PCSN_DT ASC,
	 ACPT_NO ASC,
	 EXEC_NO ASC,
	 TN_NO ASC,
	 CC_TRX_SQNO ASC,
	 PCSN_STAT ASC,
);

ALTER TABLE BXM_CC_INPUT_BATCH ADD CONSTRAINT PK_BXM_CC_INPUT_BATCH PRIMARY KEY USING INDEX PK_BXM_CC_INPUT_BATCH;

COMMENT ON TABLE BXM_CC_INPUT_BATCH IS 'BXM_CC_INPUT_BATCH';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.PCSN_DT IS 'PCSN_DT';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.ACPT_NO IS 'ACPT_NO';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.EXEC_NO IS 'EXEC_NO';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.TN_NO IS 'TN_NO';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.CC_TRX_SQNO IS 'CC_TRX_SQNO';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.SERI_PCSN_KEY IS 'SERI_PCSN_KEY';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.PCSN_STAT IS 'PCSN_STAT';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.PCSN_AMT IS 'PCSN_AMT';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.CHNG_USER_ID IS 'CHNG_USER_ID';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.INPT_DATA_LTH IS 'INPT_DATA_LTH';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.INPT_DATA IS 'INPT_DATA';
COMMENT ON COLUMN BXM_CC_INPUT_BATCH.INPT_DATA2 IS 'INPT_DATA2';

CREATE TABLE BXM_CC_INPUT_ONLINE (
	 CC_ID VARCHAR2(9) NOT NULL,
	 PCSN_DT VARCHAR2(8) NOT NULL,
	 ACPT_NO NUMBER(3) NOT NULL,
	 EXEC_NO NUMBER(6) NOT NULL,
	 TN_NO NUMBER(2) NOT NULL,
	 CC_TRX_SQNO NUMBER(15) NOT NULL,
	 SERI_PCSN_KEY VARCHAR2(100) NULL,
	 PCSN_STAT NUMBER(2) NOT NULL,
	 PCSN_AMT NUMBER(19, 2) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL,
	 INPT_DATA_LTH NUMBER(4) NULL,
	 INPT_DATA VARCHAR2(4000) NULL,
	 INPT_DATA2 VARCHAR2(4000) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_INPUT_ONLINE ON BXM_CC_INPUT_ONLINE 
( 
	 CC_ID ASC,
	 PCSN_DT ASC,
	 ACPT_NO ASC,
	 EXEC_NO ASC,
	 TN_NO ASC,
	 CC_TRX_SQNO ASC,
	 PCSN_STAT ASC,
);

ALTER TABLE BXM_CC_INPUT_ONLINE ADD CONSTRAINT PK_BXM_CC_INPUT_ONLINE PRIMARY KEY USING INDEX PK_BXM_CC_INPUT_ONLINE;

COMMENT ON TABLE BXM_CC_INPUT_ONLINE IS 'BXM_CC_INPUT_ONLINE';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.PCSN_DT IS 'PCSN_DT';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.ACPT_NO IS 'ACPT_NO';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.EXEC_NO IS 'EXEC_NO';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.TN_NO IS 'TN_NO';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.CC_TRX_SQNO IS 'CC_TRX_SQNO';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.SERI_PCSN_KEY IS 'SERI_PCSN_KEY';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.PCSN_STAT IS 'PCSN_STAT';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.PCSN_AMT IS 'PCSN_AMT';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.CHNG_USER_ID IS 'CHNG_USER_ID';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.INPT_DATA_LTH IS 'INPT_DATA_LTH';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.INPT_DATA IS 'INPT_DATA';
COMMENT ON COLUMN BXM_CC_INPUT_ONLINE.INPT_DATA2 IS 'INPT_DATA2';

CREATE TABLE BXM_CC_LOG (
	 CC_ID VARCHAR2(9) NOT NULL,
	 PCSN_DT VARCHAR2(8) NOT NULL,
	 ACPT_NO NUMBER(3) NOT NULL,
	 TN_NO NUMBER(2) NOT NULL,
	 LOG_CRTN_ELTM TIMESTAMP(6) NOT NULL,
	 LOG_LV_CD VARCHAR2(1) NULL,
	 LOG_CLSF_NO NUMBER(2) NULL,
	 CC_ALRM_NO NUMBER(3) NULL,
	 LOG_CN VARCHAR2(200) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_LOG ON BXM_CC_LOG 
( 
	 CC_ID ASC,
	 PCSN_DT ASC,
	 ACPT_NO ASC,
	 TN_NO ASC,
	 LOG_CRTN_ELTM ASC
);

ALTER TABLE BXM_CC_LOG ADD CONSTRAINT PK_BXM_CC_LOG PRIMARY KEY USING INDEX PK_BXM_CC_LOG;

COMMENT ON TABLE BXM_CC_LOG IS 'BXM_CC_LOG';
COMMENT ON COLUMN BXM_CC_LOG.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_LOG.PCSN_DT IS 'PCSN_DT';
COMMENT ON COLUMN BXM_CC_LOG.ACPT_NO IS 'ACPT_NO';
COMMENT ON COLUMN BXM_CC_LOG.TN_NO IS 'TN_NO';
COMMENT ON COLUMN BXM_CC_LOG.LOG_CRTN_ELTM IS 'LOG_CRTN_ELTM';
COMMENT ON COLUMN BXM_CC_LOG.LOG_LV_CD IS 'LOG_LV_CD';
COMMENT ON COLUMN BXM_CC_LOG.LOG_CLSF_NO IS 'LOG_CLSF_NO';
COMMENT ON COLUMN BXM_CC_LOG.CC_ALRM_NO IS 'CC_ALRM_NO';
COMMENT ON COLUMN BXM_CC_LOG.LOG_CN IS 'LOG_CN';
COMMENT ON COLUMN BXM_CC_LOG.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_LOG.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_MAIN (
	 CC_ID VARCHAR2(9) NOT NULL,
	 CC_ID_USE_YN VARCHAR2(1) NULL,
	 CC_ID_NM VARCHAR2(100) NULL,
	 CC_ID_EXPL VARCHAR2(100) NULL,
	 APP_LV2_CD VARCHAR2(2) NULL,
	 APP_LV3_CD VARCHAR2(3) NULL,
	 ON_SVC_TRX_CD VARCHAR2(12) NULL,
	 ON_SVC_INPT_DTO VARCHAR2(100) NULL,
	 TT_EXEC_TN NUMBER(2) NULL,
	 PARA_PRCS_CNT NUMBER(3) NULL,
	 SCHD_TP_CD VARCHAR2(1) NULL,
	 SCHD_CNT NUMBER(4) NULL,
	 INPT_DATA_TP_CD VARCHAR2(1) NULL,
	 ATMT_EXEC_CLSF_CD VARCHAR2(1) NULL,
	 ATMT_EXEC_SRT_TIME VARCHAR2(4) NULL,
	 ATMT_EXEC_END_TIME VARCHAR2(4) NULL,
	 PCSN_BRN_CD VARCHAR2(3) NULL,
	 LOG_LV VARCHAR2(1) NULL,
	 CC_COND_CTRN_CD VARCHAR2(1) NULL,
	 EVNT_SECT_CN VARCHAR2(10) NULL,
	 DT_CVRN_EXEC_YN VARCHAR2(1) NULL,
	 ERR_STOP_YN VARCHAR2(1) NULL,
	 ERR_PCSN_METH_CD VARCHAR2(1) NULL,
	 RE_PCSN_WAIT_ELTM NUMBER(3) NULL,
	 FLWN_WRK_KN_CD VARCHAR2(1) NULL,
	 BTCH_EXEC_ID VARCHAR2(40) NULL,
	 INPT_PARM_CN VARCHAR2(500) NULL,
	 TRNF_TGPS_ID VARCHAR2(20) NULL,
	 TRNF_TGPS_ID2 VARCHAR2(6) NULL,
	 WRK_SGNF_CD VARCHAR2(1) NULL,
	 NODE_ASGN_METH_CD VARCHAR2(1) NULL,
	 NODE_PRCS_CNT1 NUMBER(3) NULL,
	 NODE_PRCS_CNT2 NUMBER(3) NULL,
	 NODE_PRCS_CNT3 NUMBER(3) NULL,
	 NODE_PRCS_CNT4 NUMBER(3) NULL,
	 NODE_PRCS_CNT5 NUMBER(3) NULL,
	 NODE_PRCS_CNT6 NUMBER(3) NULL,
	 WRSP_CRG_ENO VARCHAR2(6) NULL,
	 REG_DTTM TIMESTAMP(6) NULL,
	 REG_USER_ID VARCHAR2(20) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL,
	 CC_EXEC_PARAM VARCHAR2(1) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_MAIN ON BXM_CC_MAIN 
( 
	 CC_ID ASC
);

ALTER TABLE BXM_CC_MAIN ADD CONSTRAINT PK_BXM_CC_MAIN PRIMARY KEY USING INDEX PK_BXM_CC_MAIN;

COMMENT ON TABLE BXM_CC_MAIN IS 'BXM_CC_MAIN';
COMMENT ON COLUMN BXM_CC_MAIN.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_MAIN.CC_ID_USE_YN IS 'CC_ID_USE_YN';
COMMENT ON COLUMN BXM_CC_MAIN.CC_ID_NM IS 'CC_ID_NM';
COMMENT ON COLUMN BXM_CC_MAIN.CC_ID_EXPL IS 'CC_ID_EXPL';
COMMENT ON COLUMN BXM_CC_MAIN.APP_LV2_CD IS 'APP_LV2_CD';
COMMENT ON COLUMN BXM_CC_MAIN.APP_LV3_CD IS 'APP_LV3_CD';
COMMENT ON COLUMN BXM_CC_MAIN.ON_SVC_TRX_CD IS 'ON_SVC_TRX_CD';
COMMENT ON COLUMN BXM_CC_MAIN.ON_SVC_INPT_DTO IS 'ON_SVC_INPT_DTO';
COMMENT ON COLUMN BXM_CC_MAIN.TT_EXEC_TN IS 'TT_EXEC_TN';
COMMENT ON COLUMN BXM_CC_MAIN.PARA_PRCS_CNT IS 'PARA_PRCS_CNT';
COMMENT ON COLUMN BXM_CC_MAIN.SCHD_TP_CD IS 'SCHD_TP_CD';
COMMENT ON COLUMN BXM_CC_MAIN.SCHD_CNT IS 'SCHD_CNT';
COMMENT ON COLUMN BXM_CC_MAIN.INPT_DATA_TP_CD IS 'INPT_DATA_TP_CD';
COMMENT ON COLUMN BXM_CC_MAIN.ATMT_EXEC_CLSF_CD IS 'ATMT_EXEC_CLSF_CD';
COMMENT ON COLUMN BXM_CC_MAIN.ATMT_EXEC_SRT_TIME IS 'ATMT_EXEC_SRT_TIME';
COMMENT ON COLUMN BXM_CC_MAIN.ATMT_EXEC_END_TIME IS 'ATMT_EXEC_END_TIME';
COMMENT ON COLUMN BXM_CC_MAIN.PCSN_BRN_CD IS 'PCSN_BRN_CD';
COMMENT ON COLUMN BXM_CC_MAIN.LOG_LV IS 'LOG_LV';
COMMENT ON COLUMN BXM_CC_MAIN.CC_COND_CTRN_CD IS 'CC_COND_CTRN_CD';
COMMENT ON COLUMN BXM_CC_MAIN.EVNT_SECT_CN IS 'EVNT_SECT_CN';
COMMENT ON COLUMN BXM_CC_MAIN.DT_CVRN_EXEC_YN IS 'DT_CVRN_EXEC_YN';
COMMENT ON COLUMN BXM_CC_MAIN.ERR_STOP_YN IS 'ERR_STOP_YN';
COMMENT ON COLUMN BXM_CC_MAIN.ERR_PCSN_METH_CD IS 'ERR_PCSN_METH_CD';
COMMENT ON COLUMN BXM_CC_MAIN.RE_PCSN_WAIT_ELTM IS 'RE_PCSN_WAIT_ELTM';
COMMENT ON COLUMN BXM_CC_MAIN.FLWN_WRK_KN_CD IS 'FLWN_WRK_KN_CD';
COMMENT ON COLUMN BXM_CC_MAIN.BTCH_EXEC_ID IS 'BTCH_EXEC_ID';
COMMENT ON COLUMN BXM_CC_MAIN.INPT_PARM_CN IS 'INPT_PARM_CN';
COMMENT ON COLUMN BXM_CC_MAIN.TRNF_TGPS_ID IS 'TRNF_TGPS_ID';
COMMENT ON COLUMN BXM_CC_MAIN.TRNF_TGPS_ID2 IS 'TRNF_TGPS_ID2';
COMMENT ON COLUMN BXM_CC_MAIN.WRK_SGNF_CD IS 'WRK_SGNF_CD';
COMMENT ON COLUMN BXM_CC_MAIN.NODE_ASGN_METH_CD IS 'NODE_ASGN_METH_CD';
COMMENT ON COLUMN BXM_CC_MAIN.NODE_PRCS_CNT1 IS 'NODE_PRCS_CNT1';
COMMENT ON COLUMN BXM_CC_MAIN.NODE_PRCS_CNT2 IS 'NODE_PRCS_CNT2';
COMMENT ON COLUMN BXM_CC_MAIN.NODE_PRCS_CNT3 IS 'NODE_PRCS_CNT3';
COMMENT ON COLUMN BXM_CC_MAIN.NODE_PRCS_CNT4 IS 'NODE_PRCS_CNT4';
COMMENT ON COLUMN BXM_CC_MAIN.NODE_PRCS_CNT5 IS 'NODE_PRCS_CNT5';
COMMENT ON COLUMN BXM_CC_MAIN.NODE_PRCS_CNT6 IS 'NODE_PRCS_CNT6';
COMMENT ON COLUMN BXM_CC_MAIN.WRSP_CRG_ENO IS 'WRSP_CRG_ENO';
COMMENT ON COLUMN BXM_CC_MAIN.REG_DTTM IS 'REG_DTTM';
COMMENT ON COLUMN BXM_CC_MAIN.REG_USER_ID IS 'REG_USER_ID';
COMMENT ON COLUMN BXM_CC_MAIN.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_MAIN.CHNG_USER_ID IS 'CHNG_USER_ID';
COMMENT ON COLUMN BXM_CC_MAIN.CC_EXEC_PARAM IS 'CC_EXEC_PARAM';

CREATE TABLE BXM_CC_MAIN_HISTORY (
	 CC_ID VARCHAR2(9) NOT NULL,
	 SQNO NUMBER(5) NOT NULL,
	 CC_ID_USE_YN VARCHAR2(1) NULL,
	 CC_ID_NM VARCHAR2(100) NULL,
	 CC_ID_EXPL VARCHAR2(100) NULL,
	 APP_LV2_CD VARCHAR2(2) NULL,
	 APP_LV3_CD VARCHAR2(3) NULL,
	 ON_SVC_TRX_CD VARCHAR2(12) NULL,
	 ON_SVC_INPT_DTO VARCHAR2(100) NULL,
	 TT_EXEC_TN NUMBER(2) NULL,
	 PARA_PRCS_CNT NUMBER(3) NULL,
	 SCHD_TP_CD VARCHAR2(1) NULL,
	 SCHD_CNT NUMBER(4) NULL,
	 INPT_DATA_TP_CD VARCHAR2(1) NULL,
	 ATMT_EXEC_CLSF_CD VARCHAR2(1) NULL,
	 ATMT_EXEC_SRT_TIME VARCHAR2(4) NULL,
	 ATMT_EXEC_END_TIME VARCHAR2(4) NULL,
	 PCSN_BRN_CD VARCHAR2(3) NULL,
	 LOG_LV VARCHAR2(1) NULL,
	 CC_COND_CTRN_CD VARCHAR2(1) NULL,
	 EVNT_SECT_CN VARCHAR2(10) NULL,
	 DT_CVRN_EXEC_YN VARCHAR2(1) NULL,
	 ERR_STOP_YN VARCHAR2(1) NULL,
	 ERR_PCSN_METH_CD VARCHAR2(1) NULL,
	 RE_PCSN_WAIT_ELTM NUMBER(3) NULL,
	 FLWN_WRK_KN_CD VARCHAR2(1) NULL,
	 BTCH_EXEC_ID VARCHAR2(40) NULL,
	 INPT_PARM_CN VARCHAR2(500) NULL,
	 TRNF_TGPS_ID VARCHAR2(20) NULL,
	 TRNF_TGPS_ID2 VARCHAR2(6) NULL,
	 WRK_SGNF_CD VARCHAR2(1) NULL,
	 NODE_ASGN_METH_CD VARCHAR2(1) NULL,
	 NODE_PRCS_CNT1 NUMBER(3) NULL,
	 NODE_PRCS_CNT2 NUMBER(3) NULL,
	 NODE_PRCS_CNT3 NUMBER(3) NULL,
	 NODE_PRCS_CNT4 NUMBER(3) NULL,
	 NODE_PRCS_CNT5 NUMBER(3) NULL,
	 NODE_PRCS_CNT6 NUMBER(3) NULL,
	 WRSP_CRG_ENO VARCHAR2(6) NULL,
	 REG_DTTM TIMESTAMP(6) NULL,
	 REG_USER_ID VARCHAR2(20) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_MAIN_HISTORY ON BXM_CC_MAIN_HISTORY 
( 
	 CC_ID ASC,
	 SQNO ASC
);

ALTER TABLE BXM_CC_MAIN_HISTORY ADD CONSTRAINT PK_BXM_CC_MAIN_HISTORY PRIMARY KEY USING INDEX PK_BXM_CC_MAIN_HISTORY;

COMMENT ON TABLE BXM_CC_MAIN_HISTORY IS 'BXM_CC_MAIN_HISTORY';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.SQNO IS 'SQNO';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.CC_ID_USE_YN IS 'CC_ID_USE_YN';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.CC_ID_NM IS 'CC_ID_NM';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.CC_ID_EXPL IS 'CC_ID_EXPL';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.APP_LV2_CD IS 'APP_LV2_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.APP_LV3_CD IS 'APP_LV3_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.ON_SVC_TRX_CD IS 'ON_SVC_TRX_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.ON_SVC_INPT_DTO IS 'ON_SVC_INPT_DTO';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.TT_EXEC_TN IS 'TT_EXEC_TN';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.PARA_PRCS_CNT IS 'PARA_PRCS_CNT';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.SCHD_TP_CD IS 'SCHD_TP_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.SCHD_CNT IS 'SCHD_CNT';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.INPT_DATA_TP_CD IS 'INPT_DATA_TP_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.ATMT_EXEC_CLSF_CD IS 'ATMT_EXEC_CLSF_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.ATMT_EXEC_SRT_TIME IS 'ATMT_EXEC_SRT_TIME';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.ATMT_EXEC_END_TIME IS 'ATMT_EXEC_END_TIME';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.PCSN_BRN_CD IS 'PCSN_BRN_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.LOG_LV IS 'LOG_LV';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.CC_COND_CTRN_CD IS 'CC_COND_CTRN_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.EVNT_SECT_CN IS 'EVNT_SECT_CN';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.DT_CVRN_EXEC_YN IS 'DT_CVRN_EXEC_YN';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.ERR_STOP_YN IS 'ERR_STOP_YN';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.ERR_PCSN_METH_CD IS 'ERR_PCSN_METH_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.RE_PCSN_WAIT_ELTM IS 'RE_PCSN_WAIT_ELTM';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.FLWN_WRK_KN_CD IS 'FLWN_WRK_KN_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.BTCH_EXEC_ID IS 'BTCH_EXEC_ID';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.INPT_PARM_CN IS 'INPT_PARM_CN';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.TRNF_TGPS_ID IS 'TRNF_TGPS_ID';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.TRNF_TGPS_ID2 IS 'TRNF_TGPS_ID2';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.WRK_SGNF_CD IS 'WRK_SGNF_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.NODE_ASGN_METH_CD IS 'NODE_ASGN_METH_CD';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.NODE_PRCS_CNT1 IS 'NODE_PRCS_CNT1';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.NODE_PRCS_CNT2 IS 'NODE_PRCS_CNT2';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.NODE_PRCS_CNT3 IS 'NODE_PRCS_CNT3';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.NODE_PRCS_CNT4 IS 'NODE_PRCS_CNT4';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.NODE_PRCS_CNT5 IS 'NODE_PRCS_CNT5';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.NODE_PRCS_CNT6 IS 'NODE_PRCS_CNT6';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.WRSP_CRG_ENO IS 'WRSP_CRG_ENO';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.REG_DTTM IS 'REG_DTTM';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.REG_USER_ID IS 'REG_USER_ID';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_MAIN_HISTORY.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_MAIN_STATUS (
	 CC_ID VARCHAR2(9) NOT NULL,
	 PCSN_DT VARCHAR2(8) NOT NULL,
	 ACPT_NO NUMBER(3) NOT NULL,
	 TN_NO NUMBER(2) NOT NULL,
	 PCSN_STAT NUMBER(2) NULL,
	 CC_ECPL_CLSF_CD VARCHAR2(1) NULL,
	 ERR_XST_YN VARCHAR2(1) NULL,
	 FST_SRT_DT VARCHAR2(8) NULL,
	 FST_SRT_TIME VARCHAR2(6) NULL,
	 END_DT VARCHAR2(8) NULL,
	 END_TIME VARCHAR2(6) NULL,
	 ALRM_OCCR_YN VARCHAR2(1) NULL,
	 PARA_PRCS_CNT NUMBER(3) NULL,
	 NODE_PRCS_CNT1 NUMBER(3) NULL,
	 NODE_PRCS_CNT2 NUMBER(3) NULL,
	 NODE_PRCS_CNT3 NUMBER(3) NULL,
	 NODE_PRCS_CNT4 NUMBER(3) NULL,
	 NODE_PRCS_CNT5 NUMBER(3) NULL,
	 NODE_PRCS_CNT6 NUMBER(3) NULL,
	 INPT_DATA_TBL_NM VARCHAR2(32) NULL,
	 CNNT_URL VARCHAR2(256) NULL,
	 SRVR_ID VARCHAR2(4) NULL,
	 UUID VARCHAR2(64) NULL,
	 PCSN_CNT NUMBER(10) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_MAIN_STATUS ON BXM_CC_MAIN_STATUS 
( 
	 CC_ID ASC,
	 PCSN_DT ASC,
	 ACPT_NO ASC,
	 TN_NO ASC
);

ALTER TABLE BXM_CC_MAIN_STATUS ADD CONSTRAINT PK_BXM_CC_MAIN_STATUS PRIMARY KEY USING INDEX PK_BXM_CC_MAIN_STATUS;

COMMENT ON TABLE BXM_CC_MAIN_STATUS IS 'BXM_CC_MAIN_STATUS';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.PCSN_DT IS 'PCSN_DT';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.ACPT_NO IS 'ACPT_NO';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.TN_NO IS 'TN_NO';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.PCSN_STAT IS 'PCSN_STAT';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.CC_ECPL_CLSF_CD IS 'CC_ECPL_CLSF_CD';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.ERR_XST_YN IS 'ERR_XST_YN';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.FST_SRT_DT IS 'FST_SRT_DT';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.FST_SRT_TIME IS 'FST_SRT_TIME';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.END_DT IS 'END_DT';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.END_TIME IS 'END_TIME';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.ALRM_OCCR_YN IS 'ALRM_OCCR_YN';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.PARA_PRCS_CNT IS 'PARA_PRCS_CNT';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.NODE_PRCS_CNT1 IS 'NODE_PRCS_CNT1';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.NODE_PRCS_CNT2 IS 'NODE_PRCS_CNT2';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.NODE_PRCS_CNT3 IS 'NODE_PRCS_CNT3';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.NODE_PRCS_CNT4 IS 'NODE_PRCS_CNT4';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.NODE_PRCS_CNT5 IS 'NODE_PRCS_CNT5';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.NODE_PRCS_CNT6 IS 'NODE_PRCS_CNT6';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.INPT_DATA_TBL_NM IS 'INPT_DATA_TBL_NM';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.CNNT_URL IS 'CNNT_URL';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.SRVR_ID IS 'SRVR_ID';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.UUID IS 'UUID';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.PCSN_CNT IS 'PCSN_CNT';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_MAIN_STATUS.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_SERIAL_NUMBER_EXTRACT (
	 CC_ID VARCHAR2(9) NOT NULL,
	 PCSN_DT VARCHAR2(8) NOT NULL,
	 TRX_SQNO NUMBER(10) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_SERIAL_NUMBER_EXTRACT ON BXM_CC_SERIAL_NUMBER_EXTRACT 
( 
);

ALTER TABLE BXM_CC_SERIAL_NUMBER_EXTRACT ADD CONSTRAINT PK_BXM_CC_SERIAL_NUMBER_EXTRACT PRIMARY KEY USING INDEX PK_BXM_CC_SERIAL_NUMBER_EXTRACT;

COMMENT ON TABLE BXM_CC_SERIAL_NUMBER_EXTRACT IS 'BXM_CC_SERIAL_NUMBER_EXTRACT';
COMMENT ON COLUMN BXM_CC_SERIAL_NUMBER_EXTRACT.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_SERIAL_NUMBER_EXTRACT.PCSN_DT IS 'PCSN_DT';
COMMENT ON COLUMN BXM_CC_SERIAL_NUMBER_EXTRACT.TRX_SQNO IS 'TRX_SQNO';
COMMENT ON COLUMN BXM_CC_SERIAL_NUMBER_EXTRACT.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_SERIAL_NUMBER_EXTRACT.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_SERVICE_CONTROL (
	 CC_ID VARCHAR2(9) NOT NULL,
	 PCSN_DT VARCHAR2(8) NOT NULL,
	 ACPT_NO NUMBER(3) NOT NULL,
	 EXEC_NO NUMBER(6) NOT NULL,
	 TN_NO NUMBER(2) NOT NULL,
	 SRVR_SQNO NUMBER(4) NOT NULL,
	 PCSN_SEQ_NO NUMBER(4) NOT NULL,
	 PCSN_NODE_NO NUMBER(2) NULL,
	 PCSN_STAT NUMBER(2) NULL,
	 SERI_PCSN_KEY VARCHAR2(100) NULL,
	 SRT_SQNO NUMBER(15) NULL,
	 END_SQNO NUMBER(15) NULL,
	 CPLN_SQNO NUMBER(15) NULL,
	 NOML_PCSN_CNT NUMBER(10) NULL,
	 NOML_PCSN_AMT NUMBER(19, 2) NULL,
	 ERR_PCSN_CNT NUMBER(10) NULL,
	 ERR_PCSN_AMT NUMBER(19, 2) NULL,
	 SRT_DTTM DATE NULL,
	 CNNT_URL VARCHAR2(100) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_SERVICE_CONTROL ON BXM_CC_SERVICE_CONTROL 
( 
	 CC_ID ASC,
	 PCSN_DT ASC,
	 ACPT_NO ASC,
	 EXEC_NO ASC,
	 TN_NO ASC,
	 SRVR_SQNO ASC,
	 PCSN_SEQ_NO ASC
);

ALTER TABLE BXM_CC_SERVICE_CONTROL ADD CONSTRAINT PK_BXM_CC_SERVICE_CONTROL PRIMARY KEY USING INDEX PK_BXM_CC_SERVICE_CONTROL;

COMMENT ON TABLE BXM_CC_SERVICE_CONTROL IS 'BXM_CC_SERVICE_CONTROL';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.PCSN_DT IS 'PCSN_DT';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.ACPT_NO IS 'ACPT_NO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.EXEC_NO IS 'EXEC_NO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.TN_NO IS 'TN_NO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.SRVR_SQNO IS 'SRVR_SQNO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.PCSN_SEQ_NO IS 'PCSN_SEQ_NO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.PCSN_NODE_NO IS 'PCSN_NODE_NO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.PCSN_STAT IS 'PCSN_STAT';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.SERI_PCSN_KEY IS 'SERI_PCSN_KEY';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.SRT_SQNO IS 'SRT_SQNO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.END_SQNO IS 'END_SQNO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.CPLN_SQNO IS 'CPLN_SQNO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.NOML_PCSN_CNT IS 'NOML_PCSN_CNT';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.NOML_PCSN_AMT IS 'NOML_PCSN_AMT';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.ERR_PCSN_CNT IS 'ERR_PCSN_CNT';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.ERR_PCSN_AMT IS 'ERR_PCSN_AMT';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.SRT_DTTM IS 'SRT_DTTM';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.CNNT_URL IS 'CNNT_URL';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_SERVICE_CONTROL_HISTORY (
	 CC_ID VARCHAR2(9) NOT NULL,
	 PCSN_DT VARCHAR2(8) NOT NULL,
	 ACPT_NO NUMBER(3) NOT NULL,
	 EXEC_NO NUMBER(6) NOT NULL,
	 TN_NO NUMBER(2) NOT NULL,
	 PCSN_NODE_NO NUMBER(2) NOT NULL,
	 NOML_PCSN_CNT NUMBER(10) NULL,
	 NOML_PCSN_AMT NUMBER(19, 2) NULL,
	 ERR_PCSN_CNT NUMBER(10) NULL,
	 ERR_PCSN_AMT NUMBER(19, 2) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_SERVICE_CONTROL_HISTORY ON BXM_CC_SERVICE_CONTROL_HISTORY 
( 
);

ALTER TABLE BXM_CC_SERVICE_CONTROL_HISTORY ADD CONSTRAINT PK_BXM_CC_SERVICE_CONTROL_HISTORY PRIMARY KEY USING INDEX PK_BXM_CC_SERVICE_CONTROL_HISTORY;

COMMENT ON TABLE BXM_CC_SERVICE_CONTROL_HISTORY IS 'BXM_CC_SERVICE_CONTROL_HISTORY';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.PCSN_DT IS 'PCSN_DT';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.ACPT_NO IS 'ACPT_NO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.EXEC_NO IS 'EXEC_NO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.TN_NO IS 'TN_NO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.PCSN_NODE_NO IS 'PCSN_NODE_NO';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.NOML_PCSN_CNT IS 'NOML_PCSN_CNT';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.NOML_PCSN_AMT IS 'NOML_PCSN_AMT';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.ERR_PCSN_CNT IS 'ERR_PCSN_CNT';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.ERR_PCSN_AMT IS 'ERR_PCSN_AMT';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_SERVICE_CONTROL_HISTORY.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_SERVICE_PORT_MANAGE (
	 CC_ID VARCHAR2(9) NOT NULL,
	 PCSN_DT VARCHAR2(8) NOT NULL,
	 ACPT_NO NUMBER(3) NOT NULL,
	 IPAD VARCHAR2(15) NULL,
	 SRVR_PORT_NO NUMBER(5) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_SERVICE_PORT_MANAGE ON BXM_CC_SERVICE_PORT_MANAGE 
( 
	 CC_ID ASC,
	 PCSN_DT ASC,
	 ACPT_NO ASC
);

ALTER TABLE BXM_CC_SERVICE_PORT_MANAGE ADD CONSTRAINT PK_BXM_CC_SERVICE_PORT_MANAGE PRIMARY KEY USING INDEX PK_BXM_CC_SERVICE_PORT_MANAGE;

COMMENT ON TABLE BXM_CC_SERVICE_PORT_MANAGE IS 'BXM_CC_SERVICE_PORT_MANAGE';
COMMENT ON COLUMN BXM_CC_SERVICE_PORT_MANAGE.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_SERVICE_PORT_MANAGE.PCSN_DT IS 'PCSN_DT';
COMMENT ON COLUMN BXM_CC_SERVICE_PORT_MANAGE.ACPT_NO IS 'ACPT_NO';
COMMENT ON COLUMN BXM_CC_SERVICE_PORT_MANAGE.IPAD IS 'IPAD';
COMMENT ON COLUMN BXM_CC_SERVICE_PORT_MANAGE.SRVR_PORT_NO IS 'SRVR_PORT_NO';
COMMENT ON COLUMN BXM_CC_SERVICE_PORT_MANAGE.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_SERVICE_PORT_MANAGE.CHNG_USER_ID IS 'CHNG_USER_ID';

CREATE TABLE BXM_CC_WORK_STATUS (
	 CC_ID VARCHAR2(9) NOT NULL,
	 PCSN_DT VARCHAR2(8) NOT NULL,
	 ACPT_NO NUMBER(3) NOT NULL,
	 EXEC_NO NUMBER(6) NOT NULL,
	 TN_NO NUMBER(2) NOT NULL,
	 PCSN_STAT NUMBER(2) NULL,
	 CC_ID_EXPL VARCHAR2(100) NULL,
	 FST_SRT_DT VARCHAR2(8) NULL,
	 FST_SRT_TIME VARCHAR2(6) NULL,
	 RE_SRT_DT VARCHAR2(8) NULL,
	 RE_SRT_TIME VARCHAR2(6) NULL,
	 END_DT VARCHAR2(8) NULL,
	 END_TIME VARCHAR2(6) NULL,
	 MAX_PCSN_CNT NUMBER(15) NULL,
	 LAST_PCSN_NO NUMBER(15) NULL,
	 TT_OBJ_CNT NUMBER(10) NULL,
	 TT_OBJ_AMT NUMBER(19, 2) NULL,
	 NOML_PCSN_CNT NUMBER(10) NULL,
	 NOML_PCSN_AMT NUMBER(19, 2) NULL,
	 ERR_PCSN_CNT NUMBER(10) NULL,
	 ERR_PCSN_AMT NUMBER(19, 2) NULL,
	 DEL_PCSN_CNT NUMBER(10) NULL,
	 DEL_PCSN_AMT NUMBER(19, 2) NULL,
	 CHNG_DTTM TIMESTAMP(6) NULL,
	 CHNG_USER_ID VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX PK_BXM_CC_WORK_STATUS ON BXM_CC_WORK_STATUS 
( 
	 CC_ID ASC,
	 PCSN_DT ASC,
	 ACPT_NO ASC,
	 EXEC_NO ASC,
	 TN_NO ASC
);

ALTER TABLE BXM_CC_WORK_STATUS ADD CONSTRAINT PK_BXM_CC_WORK_STATUS PRIMARY KEY USING INDEX PK_BXM_CC_WORK_STATUS;

COMMENT ON TABLE BXM_CC_WORK_STATUS IS 'BXM_CC_WORK_STATUS';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.CC_ID IS 'CC_ID';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.PCSN_DT IS 'PCSN_DT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.ACPT_NO IS 'ACPT_NO';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.EXEC_NO IS 'EXEC_NO';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.TN_NO IS 'TN_NO';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.PCSN_STAT IS 'PCSN_STAT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.CC_ID_EXPL IS 'CC_ID_EXPL';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.FST_SRT_DT IS 'FST_SRT_DT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.FST_SRT_TIME IS 'FST_SRT_TIME';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.RE_SRT_DT IS 'RE_SRT_DT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.RE_SRT_TIME IS 'RE_SRT_TIME';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.END_DT IS 'END_DT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.END_TIME IS 'END_TIME';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.MAX_PCSN_CNT IS 'MAX_PCSN_CNT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.LAST_PCSN_NO IS 'LAST_PCSN_NO';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.TT_OBJ_CNT IS 'TT_OBJ_CNT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.TT_OBJ_AMT IS 'TT_OBJ_AMT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.NOML_PCSN_CNT IS 'NOML_PCSN_CNT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.NOML_PCSN_AMT IS 'NOML_PCSN_AMT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.ERR_PCSN_CNT IS 'ERR_PCSN_CNT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.ERR_PCSN_AMT IS 'ERR_PCSN_AMT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.DEL_PCSN_CNT IS 'DEL_PCSN_CNT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.DEL_PCSN_AMT IS 'DEL_PCSN_AMT';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.CHNG_DTTM IS 'CHNG_DTTM';
COMMENT ON COLUMN BXM_CC_WORK_STATUS.CHNG_USER_ID IS 'CHNG_USER_ID';

